Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declaration
    3                | declarationList declaration
    4                | lexerror

    5 declaration: varDeclaration ";"
    6            | functDeclaration

    7 varDeclaration: varSimpleDeclaration
    8               | varSimpleDeclaration "=" logicalOrExp
    9               | arrayDeclaration
   10               | arrayDeclaration "=" arrayDefinition
   11               | tableDeclaration
   12               | tableDeclaration "=" tableDefinition

   13 varSimpleDeclaration: typeSpecifier IDENTIFIER

   14 arrayDeclaration: typeSpecifier IDENTIFIER "[" "]"

   15 arrayDefinition: "{" constList "}"

   16 tableDeclaration: "table" typeSpecifier IDENTIFIER "[" "]"

   17 tableDefinition: "|" "(" stringList ")" ":" columnContent "|"

   18 constList: constant
   19          | constList "," constant

   20 stringList: STRINGCONST
   21           | stringList "," STRINGCONST

   22 columnContent: "(" constList ")"
   23              | columnContent "," "(" constList ")"

   24 functDeclaration: typeSpecifier IDENTIFIER "(" parameterList ")" compoundStmt
   25                 | typeSpecifier IDENTIFIER "(" ")" compoundStmt

   26 parameterList: parameterDeclaration
   27              | parameterList "," parameterDeclaration

   28 parameterDeclaration: typeSpecifier IDENTIFIER
   29                     | "void"

   30 compoundStmt: "{" "}"
   31             | "{" statementList "}"

   32 statementList: statement
   33              | statementList statement

   34 statement: varDeclaration ";"
   35          | expression ";"
   36          | iterationStmt
   37          | conditionalStmt
   38          | returnStmt ";"
   39          | "read" "(" IDENTIFIER ")" ";"
   40          | "write" "(" baseValue ")" ";"

   41 iterationStmt: "while" "(" expression ")" compoundStmt
   42              | "for" "(" typeSpecifier IDENTIFIER ")" "in" IDENTIFIER compoundStmt

   43 conditionalStmt: ifStmt elseStmt

   44 ifStmt: "if" "(" expression ")" compoundStmt

   45 elseStmt: "else" compoundStmt
   46         | %empty

   47 returnStmt: "return"
   48           | "return" expression

   49 expression: logicalOrExp
   50           | mutable "=" logicalOrExp

   51 logicalOrExp: logicalAndExp
   52             | logicalOrExp "||" logicalAndExp

   53 logicalAndExp: equalityExp
   54              | logicalAndExp "&&" equalityExp

   55 equalityExp: relationExp
   56            | equalityExp "==" relationExp
   57            | equalityExp "!=" relationExp

   58 relationExp: sumExp
   59            | relationExp ">" sumExp
   60            | relationExp "<" sumExp
   61            | relationExp ">=" sumExp
   62            | relationExp "<=" sumExp

   63 sumExp: multExp
   64       | sumExp "+" multExp
   65       | sumExp "-" multExp

   66 multExp: unaryExp
   67        | multExp "*" unaryExp
   68        | multExp "/" unaryExp
   69        | multExp "%" unaryExp

   70 unaryExp: baseValue
   71         | "!" unaryExp

   72 baseValue: "(" expression ")"
   73          | lexerror
   74          | constant
   75          | functCall
   76          | mutable

   77 mutable: IDENTIFIER
   78        | IDENTIFIER "[" expression "]"
   79        | IDENTIFIER "[" expression ":" expression "]"
   80        | IDENTIFIER "[" expression ":" expression ":" expression "]"

   81 functCall: IDENTIFIER "(" args ")"

   82 args: argList
   83     | %empty

   84 argList: expression "," argList
   85        | expression

   86 constant: INTCONST
   87         | FLOATCONST
   88         | BOOLEANCONST
   89         | CHARCONST
   90         | STRINGCONST

   91 typeSpecifier: "char"
   92              | "int"
   93              | "float"
   94              | "bool"
   95              | "string"
   96              | "void"

   97 lexerror: ERR_INVALID_ID
   98         | ERR_INVALID_CHARCONST
   99         | ERR_UNKNOWN_TOKEN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <tree_node> (258) 13 14 16 24 25 28 39 42 77 78 79 80 81
    INTCONST <tree_node> (259) 86
    FLOATCONST <tree_node> (260) 87
    BOOLEANCONST <tree_node> (261) 88
    CHARCONST <tree_node> (262) 89
    STRINGCONST <tree_node> (263) 20 21 90
    "while" <tree_node> (264) 41
    "for" <tree_node> (265) 42
    "in" <tree_node> (266) 42
    "if" <tree_node> (267) 44
    "else" <tree_node> (268) 45
    "return" <tree_node> (269) 47 48
    "read" <tree_node> (270) 39
    "write" <tree_node> (271) 40
    "char" <tree_node> (272) 91
    "int" <tree_node> (273) 92
    "float" <tree_node> (274) 93
    "string" <tree_node> (275) 95
    "table" <tree_node> (276) 16
    "bool" <tree_node> (277) 94
    "void" <tree_node> (278) 29 96
    "+" <tree_node> (279) 64
    "-" <tree_node> (280) 65
    "*" <tree_node> (281) 67
    "/" <tree_node> (282) 68
    "%" <tree_node> (283) 69
    "!" <tree_node> (284) 71
    "<" <tree_node> (285) 60
    "<=" <tree_node> (286) 62
    ">" <tree_node> (287) 59
    ">=" <tree_node> (288) 61
    "!=" <tree_node> (289) 57
    "==" <tree_node> (290) 56
    "||" <tree_node> (291) 52
    "&&" <tree_node> (292) 54
    "{" <tree_node> (293) 15 30 31
    "}" <tree_node> (294) 15 30 31
    "[" <tree_node> (295) 14 16 78 79 80
    "]" <tree_node> (296) 14 16 78 79 80
    "(" <tree_node> (297) 17 22 23 24 25 39 40 41 42 44 72 81
    ")" <tree_node> (298) 17 22 23 24 25 39 40 41 42 44 72 81
    ":" <tree_node> (299) 17 79 80
    ";" <tree_node> (300) 5 34 35 38 39 40
    "=" <tree_node> (301) 8 10 12 50
    "," <tree_node> (302) 19 21 23 27 84
    "|" <tree_node> (303) 17
    ERR_INVALID_ID (304) 97
    ERR_INVALID_CHARCONST (305) 98
    ERR_UNKNOWN_TOKEN (306) 99


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1
        on right: 0
    declarationList <tree_node> (54)
        on left: 2 3 4
        on right: 1 3
    declaration <tree_node> (55)
        on left: 5 6
        on right: 2 3
    varDeclaration <tree_node> (56)
        on left: 7 8 9 10 11 12
        on right: 5 34
    varSimpleDeclaration <tree_node> (57)
        on left: 13
        on right: 7 8
    arrayDeclaration <tree_node> (58)
        on left: 14
        on right: 9 10
    arrayDefinition <tree_node> (59)
        on left: 15
        on right: 10
    tableDeclaration <tree_node> (60)
        on left: 16
        on right: 11 12
    tableDefinition <tree_node> (61)
        on left: 17
        on right: 12
    constList <tree_node> (62)
        on left: 18 19
        on right: 15 19 22 23
    stringList <tree_node> (63)
        on left: 20 21
        on right: 17 21
    columnContent <tree_node> (64)
        on left: 22 23
        on right: 17 23
    functDeclaration <tree_node> (65)
        on left: 24 25
        on right: 6
    parameterList <tree_node> (66)
        on left: 26 27
        on right: 24 27
    parameterDeclaration <tree_node> (67)
        on left: 28 29
        on right: 26 27
    compoundStmt <tree_node> (68)
        on left: 30 31
        on right: 24 25 41 42 44 45
    statementList <tree_node> (69)
        on left: 32 33
        on right: 31 33
    statement <tree_node> (70)
        on left: 34 35 36 37 38 39 40
        on right: 32 33
    iterationStmt <tree_node> (71)
        on left: 41 42
        on right: 36
    conditionalStmt <tree_node> (72)
        on left: 43
        on right: 37
    ifStmt <tree_node> (73)
        on left: 44
        on right: 43
    elseStmt <tree_node> (74)
        on left: 45 46
        on right: 43
    returnStmt <tree_node> (75)
        on left: 47 48
        on right: 38
    expression <tree_node> (76)
        on left: 49 50
        on right: 35 41 44 48 72 78 79 80 84 85
    logicalOrExp <tree_node> (77)
        on left: 51 52
        on right: 8 49 50 52
    logicalAndExp <tree_node> (78)
        on left: 53 54
        on right: 51 52 54
    equalityExp <tree_node> (79)
        on left: 55 56 57
        on right: 53 54 56 57
    relationExp <tree_node> (80)
        on left: 58 59 60 61 62
        on right: 55 56 57 59 60 61 62
    sumExp <tree_node> (81)
        on left: 63 64 65
        on right: 58 59 60 61 62 64 65
    multExp <tree_node> (82)
        on left: 66 67 68 69
        on right: 63 64 65 67 68 69
    unaryExp <tree_node> (83)
        on left: 70 71
        on right: 66 67 68 69 71
    baseValue <tree_node> (84)
        on left: 72 73 74 75 76
        on right: 40 70
    mutable <tree_node> (85)
        on left: 77 78 79 80
        on right: 50 76
    functCall <tree_node> (86)
        on left: 81
        on right: 75
    args <tree_node> (87)
        on left: 82 83
        on right: 81
    argList <tree_node> (88)
        on left: 84 85
        on right: 82 84
    constant <tree_node> (89)
        on left: 86 87 88 89 90
        on right: 18 19 74
    typeSpecifier <tree_node> (90)
        on left: 91 92 93 94 95 96
        on right: 13 14 16 24 25 28 42
    lexerror <tree_node> (91)
        on left: 97 98 99
        on right: 4 73


State 0

    0 $accept: . program $end

    "char"                 shift, and go to state 1
    "int"                  shift, and go to state 2
    "float"                shift, and go to state 3
    "string"               shift, and go to state 4
    "table"                shift, and go to state 5
    "bool"                 shift, and go to state 6
    "void"                 shift, and go to state 7
    ERR_INVALID_ID         shift, and go to state 8
    ERR_INVALID_CHARCONST  shift, and go to state 9
    ERR_UNKNOWN_TOKEN      shift, and go to state 10

    program               go to state 11
    declarationList       go to state 12
    declaration           go to state 13
    varDeclaration        go to state 14
    varSimpleDeclaration  go to state 15
    arrayDeclaration      go to state 16
    tableDeclaration      go to state 17
    functDeclaration      go to state 18
    typeSpecifier         go to state 19
    lexerror              go to state 20


State 1

   91 typeSpecifier: "char" .

    IDENTIFIER  reduce using rule 91 (typeSpecifier)


State 2

   92 typeSpecifier: "int" .

    IDENTIFIER  reduce using rule 92 (typeSpecifier)


State 3

   93 typeSpecifier: "float" .

    IDENTIFIER  reduce using rule 93 (typeSpecifier)


State 4

   95 typeSpecifier: "string" .

    IDENTIFIER  reduce using rule 95 (typeSpecifier)


State 5

   16 tableDeclaration: "table" . typeSpecifier IDENTIFIER "[" "]"

    "char"    shift, and go to state 1
    "int"     shift, and go to state 2
    "float"   shift, and go to state 3
    "string"  shift, and go to state 4
    "bool"    shift, and go to state 6
    "void"    shift, and go to state 7

    typeSpecifier  go to state 21


State 6

   94 typeSpecifier: "bool" .

    IDENTIFIER  reduce using rule 94 (typeSpecifier)


State 7

   96 typeSpecifier: "void" .

    IDENTIFIER  reduce using rule 96 (typeSpecifier)


State 8

   97 lexerror: ERR_INVALID_ID .

    $end      reduce using rule 97 (lexerror)
    "char"    reduce using rule 97 (lexerror)
    "int"     reduce using rule 97 (lexerror)
    "float"   reduce using rule 97 (lexerror)
    "string"  reduce using rule 97 (lexerror)
    "table"   reduce using rule 97 (lexerror)
    "bool"    reduce using rule 97 (lexerror)
    "void"    reduce using rule 97 (lexerror)


State 9

   98 lexerror: ERR_INVALID_CHARCONST .

    $end      reduce using rule 98 (lexerror)
    "char"    reduce using rule 98 (lexerror)
    "int"     reduce using rule 98 (lexerror)
    "float"   reduce using rule 98 (lexerror)
    "string"  reduce using rule 98 (lexerror)
    "table"   reduce using rule 98 (lexerror)
    "bool"    reduce using rule 98 (lexerror)
    "void"    reduce using rule 98 (lexerror)


State 10

   99 lexerror: ERR_UNKNOWN_TOKEN .

    $end      reduce using rule 99 (lexerror)
    "char"    reduce using rule 99 (lexerror)
    "int"     reduce using rule 99 (lexerror)
    "float"   reduce using rule 99 (lexerror)
    "string"  reduce using rule 99 (lexerror)
    "table"   reduce using rule 99 (lexerror)
    "bool"    reduce using rule 99 (lexerror)
    "void"    reduce using rule 99 (lexerror)


State 11

    0 $accept: program . $end

    $end  shift, and go to state 22


State 12

    1 program: declarationList .
    3 declarationList: declarationList . declaration

    "char"    shift, and go to state 1
    "int"     shift, and go to state 2
    "float"   shift, and go to state 3
    "string"  shift, and go to state 4
    "table"   shift, and go to state 5
    "bool"    shift, and go to state 6
    "void"    shift, and go to state 7

    $end  reduce using rule 1 (program)

    declaration           go to state 23
    varDeclaration        go to state 14
    varSimpleDeclaration  go to state 15
    arrayDeclaration      go to state 16
    tableDeclaration      go to state 17
    functDeclaration      go to state 18
    typeSpecifier         go to state 19


State 13

    2 declarationList: declaration .

    $end      reduce using rule 2 (declarationList)
    "char"    reduce using rule 2 (declarationList)
    "int"     reduce using rule 2 (declarationList)
    "float"   reduce using rule 2 (declarationList)
    "string"  reduce using rule 2 (declarationList)
    "table"   reduce using rule 2 (declarationList)
    "bool"    reduce using rule 2 (declarationList)
    "void"    reduce using rule 2 (declarationList)


State 14

    5 declaration: varDeclaration . ";"

    ";"  shift, and go to state 24


State 15

    7 varDeclaration: varSimpleDeclaration .
    8               | varSimpleDeclaration . "=" logicalOrExp

    "="  shift, and go to state 25

    ";"  reduce using rule 7 (varDeclaration)


State 16

    9 varDeclaration: arrayDeclaration .
   10               | arrayDeclaration . "=" arrayDefinition

    "="  shift, and go to state 26

    ";"  reduce using rule 9 (varDeclaration)


State 17

   11 varDeclaration: tableDeclaration .
   12               | tableDeclaration . "=" tableDefinition

    "="  shift, and go to state 27

    ";"  reduce using rule 11 (varDeclaration)


State 18

    6 declaration: functDeclaration .

    $end      reduce using rule 6 (declaration)
    "char"    reduce using rule 6 (declaration)
    "int"     reduce using rule 6 (declaration)
    "float"   reduce using rule 6 (declaration)
    "string"  reduce using rule 6 (declaration)
    "table"   reduce using rule 6 (declaration)
    "bool"    reduce using rule 6 (declaration)
    "void"    reduce using rule 6 (declaration)


State 19

   13 varSimpleDeclaration: typeSpecifier . IDENTIFIER
   14 arrayDeclaration: typeSpecifier . IDENTIFIER "[" "]"
   24 functDeclaration: typeSpecifier . IDENTIFIER "(" parameterList ")" compoundStmt
   25                 | typeSpecifier . IDENTIFIER "(" ")" compoundStmt

    IDENTIFIER  shift, and go to state 28


State 20

    4 declarationList: lexerror .

    $end      reduce using rule 4 (declarationList)
    "char"    reduce using rule 4 (declarationList)
    "int"     reduce using rule 4 (declarationList)
    "float"   reduce using rule 4 (declarationList)
    "string"  reduce using rule 4 (declarationList)
    "table"   reduce using rule 4 (declarationList)
    "bool"    reduce using rule 4 (declarationList)
    "void"    reduce using rule 4 (declarationList)


State 21

   16 tableDeclaration: "table" typeSpecifier . IDENTIFIER "[" "]"

    IDENTIFIER  shift, and go to state 29


State 22

    0 $accept: program $end .

    $default  accept


State 23

    3 declarationList: declarationList declaration .

    $end      reduce using rule 3 (declarationList)
    "char"    reduce using rule 3 (declarationList)
    "int"     reduce using rule 3 (declarationList)
    "float"   reduce using rule 3 (declarationList)
    "string"  reduce using rule 3 (declarationList)
    "table"   reduce using rule 3 (declarationList)
    "bool"    reduce using rule 3 (declarationList)
    "void"    reduce using rule 3 (declarationList)


State 24

    5 declaration: varDeclaration ";" .

    $end      reduce using rule 5 (declaration)
    "char"    reduce using rule 5 (declaration)
    "int"     reduce using rule 5 (declaration)
    "float"   reduce using rule 5 (declaration)
    "string"  reduce using rule 5 (declaration)
    "table"   reduce using rule 5 (declaration)
    "bool"    reduce using rule 5 (declaration)
    "void"    reduce using rule 5 (declaration)


State 25

    8 varDeclaration: varSimpleDeclaration "=" . logicalOrExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    logicalOrExp   go to state 38
    logicalAndExp  go to state 39
    equalityExp    go to state 40
    relationExp    go to state 41
    sumExp         go to state 42
    multExp        go to state 43
    unaryExp       go to state 44
    baseValue      go to state 45
    mutable        go to state 46
    functCall      go to state 47
    constant       go to state 48
    lexerror       go to state 49


State 26

   10 varDeclaration: arrayDeclaration "=" . arrayDefinition

    "{"  shift, and go to state 50

    arrayDefinition  go to state 51


State 27

   12 varDeclaration: tableDeclaration "=" . tableDefinition

    "|"  shift, and go to state 52

    tableDefinition  go to state 53


State 28

   13 varSimpleDeclaration: typeSpecifier IDENTIFIER .
   14 arrayDeclaration: typeSpecifier IDENTIFIER . "[" "]"
   24 functDeclaration: typeSpecifier IDENTIFIER . "(" parameterList ")" compoundStmt
   25                 | typeSpecifier IDENTIFIER . "(" ")" compoundStmt

    "["  shift, and go to state 54
    "("  shift, and go to state 55

    ";"  reduce using rule 13 (varSimpleDeclaration)
    "="  reduce using rule 13 (varSimpleDeclaration)


State 29

   16 tableDeclaration: "table" typeSpecifier IDENTIFIER . "[" "]"

    "["  shift, and go to state 56


State 30

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 57
    "("  shift, and go to state 58

    "+"   reduce using rule 77 (mutable)
    "-"   reduce using rule 77 (mutable)
    "*"   reduce using rule 77 (mutable)
    "/"   reduce using rule 77 (mutable)
    "%"   reduce using rule 77 (mutable)
    "<"   reduce using rule 77 (mutable)
    "<="  reduce using rule 77 (mutable)
    ">"   reduce using rule 77 (mutable)
    ">="  reduce using rule 77 (mutable)
    "!="  reduce using rule 77 (mutable)
    "=="  reduce using rule 77 (mutable)
    "||"  reduce using rule 77 (mutable)
    "&&"  reduce using rule 77 (mutable)
    ";"   reduce using rule 77 (mutable)


State 31

   86 constant: INTCONST .

    "+"   reduce using rule 86 (constant)
    "-"   reduce using rule 86 (constant)
    "*"   reduce using rule 86 (constant)
    "/"   reduce using rule 86 (constant)
    "%"   reduce using rule 86 (constant)
    "<"   reduce using rule 86 (constant)
    "<="  reduce using rule 86 (constant)
    ">"   reduce using rule 86 (constant)
    ">="  reduce using rule 86 (constant)
    "!="  reduce using rule 86 (constant)
    "=="  reduce using rule 86 (constant)
    "||"  reduce using rule 86 (constant)
    "&&"  reduce using rule 86 (constant)
    ";"   reduce using rule 86 (constant)


State 32

   87 constant: FLOATCONST .

    "+"   reduce using rule 87 (constant)
    "-"   reduce using rule 87 (constant)
    "*"   reduce using rule 87 (constant)
    "/"   reduce using rule 87 (constant)
    "%"   reduce using rule 87 (constant)
    "<"   reduce using rule 87 (constant)
    "<="  reduce using rule 87 (constant)
    ">"   reduce using rule 87 (constant)
    ">="  reduce using rule 87 (constant)
    "!="  reduce using rule 87 (constant)
    "=="  reduce using rule 87 (constant)
    "||"  reduce using rule 87 (constant)
    "&&"  reduce using rule 87 (constant)
    ";"   reduce using rule 87 (constant)


State 33

   88 constant: BOOLEANCONST .

    "+"   reduce using rule 88 (constant)
    "-"   reduce using rule 88 (constant)
    "*"   reduce using rule 88 (constant)
    "/"   reduce using rule 88 (constant)
    "%"   reduce using rule 88 (constant)
    "<"   reduce using rule 88 (constant)
    "<="  reduce using rule 88 (constant)
    ">"   reduce using rule 88 (constant)
    ">="  reduce using rule 88 (constant)
    "!="  reduce using rule 88 (constant)
    "=="  reduce using rule 88 (constant)
    "||"  reduce using rule 88 (constant)
    "&&"  reduce using rule 88 (constant)
    ";"   reduce using rule 88 (constant)


State 34

   89 constant: CHARCONST .

    "+"   reduce using rule 89 (constant)
    "-"   reduce using rule 89 (constant)
    "*"   reduce using rule 89 (constant)
    "/"   reduce using rule 89 (constant)
    "%"   reduce using rule 89 (constant)
    "<"   reduce using rule 89 (constant)
    "<="  reduce using rule 89 (constant)
    ">"   reduce using rule 89 (constant)
    ">="  reduce using rule 89 (constant)
    "!="  reduce using rule 89 (constant)
    "=="  reduce using rule 89 (constant)
    "||"  reduce using rule 89 (constant)
    "&&"  reduce using rule 89 (constant)
    ";"   reduce using rule 89 (constant)


State 35

   90 constant: STRINGCONST .

    "+"   reduce using rule 90 (constant)
    "-"   reduce using rule 90 (constant)
    "*"   reduce using rule 90 (constant)
    "/"   reduce using rule 90 (constant)
    "%"   reduce using rule 90 (constant)
    "<"   reduce using rule 90 (constant)
    "<="  reduce using rule 90 (constant)
    ">"   reduce using rule 90 (constant)
    ">="  reduce using rule 90 (constant)
    "!="  reduce using rule 90 (constant)
    "=="  reduce using rule 90 (constant)
    "||"  reduce using rule 90 (constant)
    "&&"  reduce using rule 90 (constant)
    ";"   reduce using rule 90 (constant)


State 36

   71 unaryExp: "!" . unaryExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    unaryExp   go to state 59
    baseValue  go to state 45
    mutable    go to state 46
    functCall  go to state 47
    constant   go to state 48
    lexerror   go to state 49


State 37

   72 baseValue: "(" . expression ")"

    IDENTIFIER             shift, and go to state 193
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    expression     go to state 60
    logicalOrExp   go to state 61
    logicalAndExp  go to state 204
    equalityExp    go to state 205
    relationExp    go to state 206
    sumExp         go to state 207
    multExp        go to state 208
    unaryExp       go to state 209
    baseValue      go to state 210
    mutable        go to state 62
    functCall      go to state 211
    constant       go to state 212
    lexerror       go to state 213


State 38

    8 varDeclaration: varSimpleDeclaration "=" logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 63

    ";"  reduce using rule 8 (varDeclaration)


State 39

   51 logicalOrExp: logicalAndExp .
   54 logicalAndExp: logicalAndExp . "&&" equalityExp

    "&&"  shift, and go to state 64

    "||"  reduce using rule 51 (logicalOrExp)
    ";"   reduce using rule 51 (logicalOrExp)


State 40

   53 logicalAndExp: equalityExp .
   56 equalityExp: equalityExp . "==" relationExp
   57            | equalityExp . "!=" relationExp

    "!="  shift, and go to state 65
    "=="  shift, and go to state 66

    "||"  reduce using rule 53 (logicalAndExp)
    "&&"  reduce using rule 53 (logicalAndExp)
    ";"   reduce using rule 53 (logicalAndExp)


State 41

   55 equalityExp: relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 67
    "<="  shift, and go to state 68
    ">"   shift, and go to state 69
    ">="  shift, and go to state 70

    "!="  reduce using rule 55 (equalityExp)
    "=="  reduce using rule 55 (equalityExp)
    "||"  reduce using rule 55 (equalityExp)
    "&&"  reduce using rule 55 (equalityExp)
    ";"   reduce using rule 55 (equalityExp)


State 42

   58 relationExp: sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 71
    "-"  shift, and go to state 72

    "<"   reduce using rule 58 (relationExp)
    "<="  reduce using rule 58 (relationExp)
    ">"   reduce using rule 58 (relationExp)
    ">="  reduce using rule 58 (relationExp)
    "!="  reduce using rule 58 (relationExp)
    "=="  reduce using rule 58 (relationExp)
    "||"  reduce using rule 58 (relationExp)
    "&&"  reduce using rule 58 (relationExp)
    ";"   reduce using rule 58 (relationExp)


State 43

   63 sumExp: multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 73
    "/"  shift, and go to state 74
    "%"  shift, and go to state 75

    "+"   reduce using rule 63 (sumExp)
    "-"   reduce using rule 63 (sumExp)
    "<"   reduce using rule 63 (sumExp)
    "<="  reduce using rule 63 (sumExp)
    ">"   reduce using rule 63 (sumExp)
    ">="  reduce using rule 63 (sumExp)
    "!="  reduce using rule 63 (sumExp)
    "=="  reduce using rule 63 (sumExp)
    "||"  reduce using rule 63 (sumExp)
    "&&"  reduce using rule 63 (sumExp)
    ";"   reduce using rule 63 (sumExp)


State 44

   66 multExp: unaryExp .

    "+"   reduce using rule 66 (multExp)
    "-"   reduce using rule 66 (multExp)
    "*"   reduce using rule 66 (multExp)
    "/"   reduce using rule 66 (multExp)
    "%"   reduce using rule 66 (multExp)
    "<"   reduce using rule 66 (multExp)
    "<="  reduce using rule 66 (multExp)
    ">"   reduce using rule 66 (multExp)
    ">="  reduce using rule 66 (multExp)
    "!="  reduce using rule 66 (multExp)
    "=="  reduce using rule 66 (multExp)
    "||"  reduce using rule 66 (multExp)
    "&&"  reduce using rule 66 (multExp)
    ";"   reduce using rule 66 (multExp)


State 45

   70 unaryExp: baseValue .

    "+"   reduce using rule 70 (unaryExp)
    "-"   reduce using rule 70 (unaryExp)
    "*"   reduce using rule 70 (unaryExp)
    "/"   reduce using rule 70 (unaryExp)
    "%"   reduce using rule 70 (unaryExp)
    "<"   reduce using rule 70 (unaryExp)
    "<="  reduce using rule 70 (unaryExp)
    ">"   reduce using rule 70 (unaryExp)
    ">="  reduce using rule 70 (unaryExp)
    "!="  reduce using rule 70 (unaryExp)
    "=="  reduce using rule 70 (unaryExp)
    "||"  reduce using rule 70 (unaryExp)
    "&&"  reduce using rule 70 (unaryExp)
    ";"   reduce using rule 70 (unaryExp)


State 46

   76 baseValue: mutable .

    "+"   reduce using rule 76 (baseValue)
    "-"   reduce using rule 76 (baseValue)
    "*"   reduce using rule 76 (baseValue)
    "/"   reduce using rule 76 (baseValue)
    "%"   reduce using rule 76 (baseValue)
    "<"   reduce using rule 76 (baseValue)
    "<="  reduce using rule 76 (baseValue)
    ">"   reduce using rule 76 (baseValue)
    ">="  reduce using rule 76 (baseValue)
    "!="  reduce using rule 76 (baseValue)
    "=="  reduce using rule 76 (baseValue)
    "||"  reduce using rule 76 (baseValue)
    "&&"  reduce using rule 76 (baseValue)
    ";"   reduce using rule 76 (baseValue)


State 47

   75 baseValue: functCall .

    "+"   reduce using rule 75 (baseValue)
    "-"   reduce using rule 75 (baseValue)
    "*"   reduce using rule 75 (baseValue)
    "/"   reduce using rule 75 (baseValue)
    "%"   reduce using rule 75 (baseValue)
    "<"   reduce using rule 75 (baseValue)
    "<="  reduce using rule 75 (baseValue)
    ">"   reduce using rule 75 (baseValue)
    ">="  reduce using rule 75 (baseValue)
    "!="  reduce using rule 75 (baseValue)
    "=="  reduce using rule 75 (baseValue)
    "||"  reduce using rule 75 (baseValue)
    "&&"  reduce using rule 75 (baseValue)
    ";"   reduce using rule 75 (baseValue)


State 48

   74 baseValue: constant .

    "+"   reduce using rule 74 (baseValue)
    "-"   reduce using rule 74 (baseValue)
    "*"   reduce using rule 74 (baseValue)
    "/"   reduce using rule 74 (baseValue)
    "%"   reduce using rule 74 (baseValue)
    "<"   reduce using rule 74 (baseValue)
    "<="  reduce using rule 74 (baseValue)
    ">"   reduce using rule 74 (baseValue)
    ">="  reduce using rule 74 (baseValue)
    "!="  reduce using rule 74 (baseValue)
    "=="  reduce using rule 74 (baseValue)
    "||"  reduce using rule 74 (baseValue)
    "&&"  reduce using rule 74 (baseValue)
    ";"   reduce using rule 74 (baseValue)


State 49

   73 baseValue: lexerror .

    "+"   reduce using rule 73 (baseValue)
    "-"   reduce using rule 73 (baseValue)
    "*"   reduce using rule 73 (baseValue)
    "/"   reduce using rule 73 (baseValue)
    "%"   reduce using rule 73 (baseValue)
    "<"   reduce using rule 73 (baseValue)
    "<="  reduce using rule 73 (baseValue)
    ">"   reduce using rule 73 (baseValue)
    ">="  reduce using rule 73 (baseValue)
    "!="  reduce using rule 73 (baseValue)
    "=="  reduce using rule 73 (baseValue)
    "||"  reduce using rule 73 (baseValue)
    "&&"  reduce using rule 73 (baseValue)
    ";"   reduce using rule 73 (baseValue)


State 50

   15 arrayDefinition: "{" . constList "}"

    INTCONST      shift, and go to state 214
    FLOATCONST    shift, and go to state 215
    BOOLEANCONST  shift, and go to state 216
    CHARCONST     shift, and go to state 217
    STRINGCONST   shift, and go to state 218

    constList  go to state 76
    constant   go to state 77


State 51

   10 varDeclaration: arrayDeclaration "=" arrayDefinition .

    ";"  reduce using rule 10 (varDeclaration)


State 52

   17 tableDefinition: "|" . "(" stringList ")" ":" columnContent "|"

    "("  shift, and go to state 78


State 53

   12 varDeclaration: tableDeclaration "=" tableDefinition .

    ";"  reduce using rule 12 (varDeclaration)


State 54

   14 arrayDeclaration: typeSpecifier IDENTIFIER "[" . "]"

    "]"  shift, and go to state 79


State 55

   24 functDeclaration: typeSpecifier IDENTIFIER "(" . parameterList ")" compoundStmt
   25                 | typeSpecifier IDENTIFIER "(" . ")" compoundStmt

    "char"    shift, and go to state 1
    "int"     shift, and go to state 2
    "float"   shift, and go to state 3
    "string"  shift, and go to state 4
    "bool"    shift, and go to state 6
    "void"    shift, and go to state 80
    ")"       shift, and go to state 81

    parameterList         go to state 82
    parameterDeclaration  go to state 83
    typeSpecifier         go to state 84


State 56

   16 tableDeclaration: "table" typeSpecifier IDENTIFIER "[" . "]"

    "]"  shift, and go to state 85


State 57

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 86
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 58

   81 functCall: IDENTIFIER "(" . args ")"

    IDENTIFIER             shift, and go to state 242
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    ")"  reduce using rule 83 (args)

    expression     go to state 87
    logicalOrExp   go to state 253
    logicalAndExp  go to state 254
    equalityExp    go to state 255
    relationExp    go to state 256
    sumExp         go to state 257
    multExp        go to state 258
    unaryExp       go to state 259
    baseValue      go to state 260
    mutable        go to state 261
    functCall      go to state 262
    args           go to state 88
    argList        go to state 89
    constant       go to state 263
    lexerror       go to state 264


State 59

   71 unaryExp: "!" unaryExp .

    "+"   reduce using rule 71 (unaryExp)
    "-"   reduce using rule 71 (unaryExp)
    "*"   reduce using rule 71 (unaryExp)
    "/"   reduce using rule 71 (unaryExp)
    "%"   reduce using rule 71 (unaryExp)
    "<"   reduce using rule 71 (unaryExp)
    "<="  reduce using rule 71 (unaryExp)
    ">"   reduce using rule 71 (unaryExp)
    ">="  reduce using rule 71 (unaryExp)
    "!="  reduce using rule 71 (unaryExp)
    "=="  reduce using rule 71 (unaryExp)
    "||"  reduce using rule 71 (unaryExp)
    "&&"  reduce using rule 71 (unaryExp)
    ";"   reduce using rule 71 (unaryExp)


State 60

   72 baseValue: "(" expression . ")"

    ")"  shift, and go to state 90


State 61

   49 expression: logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 265

    ")"  reduce using rule 49 (expression)


State 62

   50 expression: mutable . "=" logicalOrExp
   76 baseValue: mutable .

    "="  shift, and go to state 91

    "+"   reduce using rule 76 (baseValue)
    "-"   reduce using rule 76 (baseValue)
    "*"   reduce using rule 76 (baseValue)
    "/"   reduce using rule 76 (baseValue)
    "%"   reduce using rule 76 (baseValue)
    "<"   reduce using rule 76 (baseValue)
    "<="  reduce using rule 76 (baseValue)
    ">"   reduce using rule 76 (baseValue)
    ">="  reduce using rule 76 (baseValue)
    "!="  reduce using rule 76 (baseValue)
    "=="  reduce using rule 76 (baseValue)
    "||"  reduce using rule 76 (baseValue)
    "&&"  reduce using rule 76 (baseValue)
    ")"   reduce using rule 76 (baseValue)


State 63

   52 logicalOrExp: logicalOrExp "||" . logicalAndExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    logicalAndExp  go to state 92
    equalityExp    go to state 40
    relationExp    go to state 41
    sumExp         go to state 42
    multExp        go to state 43
    unaryExp       go to state 44
    baseValue      go to state 45
    mutable        go to state 46
    functCall      go to state 47
    constant       go to state 48
    lexerror       go to state 49


State 64

   54 logicalAndExp: logicalAndExp "&&" . equalityExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    equalityExp  go to state 93
    relationExp  go to state 41
    sumExp       go to state 42
    multExp      go to state 43
    unaryExp     go to state 44
    baseValue    go to state 45
    mutable      go to state 46
    functCall    go to state 47
    constant     go to state 48
    lexerror     go to state 49


State 65

   57 equalityExp: equalityExp "!=" . relationExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    relationExp  go to state 94
    sumExp       go to state 42
    multExp      go to state 43
    unaryExp     go to state 44
    baseValue    go to state 45
    mutable      go to state 46
    functCall    go to state 47
    constant     go to state 48
    lexerror     go to state 49


State 66

   56 equalityExp: equalityExp "==" . relationExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    relationExp  go to state 95
    sumExp       go to state 42
    multExp      go to state 43
    unaryExp     go to state 44
    baseValue    go to state 45
    mutable      go to state 46
    functCall    go to state 47
    constant     go to state 48
    lexerror     go to state 49


State 67

   60 relationExp: relationExp "<" . sumExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    sumExp     go to state 96
    multExp    go to state 43
    unaryExp   go to state 44
    baseValue  go to state 45
    mutable    go to state 46
    functCall  go to state 47
    constant   go to state 48
    lexerror   go to state 49


State 68

   62 relationExp: relationExp "<=" . sumExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    sumExp     go to state 97
    multExp    go to state 43
    unaryExp   go to state 44
    baseValue  go to state 45
    mutable    go to state 46
    functCall  go to state 47
    constant   go to state 48
    lexerror   go to state 49


State 69

   59 relationExp: relationExp ">" . sumExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    sumExp     go to state 98
    multExp    go to state 43
    unaryExp   go to state 44
    baseValue  go to state 45
    mutable    go to state 46
    functCall  go to state 47
    constant   go to state 48
    lexerror   go to state 49


State 70

   61 relationExp: relationExp ">=" . sumExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    sumExp     go to state 99
    multExp    go to state 43
    unaryExp   go to state 44
    baseValue  go to state 45
    mutable    go to state 46
    functCall  go to state 47
    constant   go to state 48
    lexerror   go to state 49


State 71

   64 sumExp: sumExp "+" . multExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    multExp    go to state 100
    unaryExp   go to state 44
    baseValue  go to state 45
    mutable    go to state 46
    functCall  go to state 47
    constant   go to state 48
    lexerror   go to state 49


State 72

   65 sumExp: sumExp "-" . multExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    multExp    go to state 101
    unaryExp   go to state 44
    baseValue  go to state 45
    mutable    go to state 46
    functCall  go to state 47
    constant   go to state 48
    lexerror   go to state 49


State 73

   67 multExp: multExp "*" . unaryExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    unaryExp   go to state 102
    baseValue  go to state 45
    mutable    go to state 46
    functCall  go to state 47
    constant   go to state 48
    lexerror   go to state 49


State 74

   68 multExp: multExp "/" . unaryExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    unaryExp   go to state 103
    baseValue  go to state 45
    mutable    go to state 46
    functCall  go to state 47
    constant   go to state 48
    lexerror   go to state 49


State 75

   69 multExp: multExp "%" . unaryExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    unaryExp   go to state 104
    baseValue  go to state 45
    mutable    go to state 46
    functCall  go to state 47
    constant   go to state 48
    lexerror   go to state 49


State 76

   15 arrayDefinition: "{" constList . "}"
   19 constList: constList . "," constant

    "}"  shift, and go to state 105
    ","  shift, and go to state 106


State 77

   18 constList: constant .

    "}"  reduce using rule 18 (constList)
    ","  reduce using rule 18 (constList)


State 78

   17 tableDefinition: "|" "(" . stringList ")" ":" columnContent "|"

    STRINGCONST  shift, and go to state 107

    stringList  go to state 108


State 79

   14 arrayDeclaration: typeSpecifier IDENTIFIER "[" "]" .

    ";"  reduce using rule 14 (arrayDeclaration)
    "="  reduce using rule 14 (arrayDeclaration)


State 80

   29 parameterDeclaration: "void" .
   96 typeSpecifier: "void" .

    IDENTIFIER  reduce using rule 96 (typeSpecifier)
    ")"         reduce using rule 29 (parameterDeclaration)
    ","         reduce using rule 29 (parameterDeclaration)


State 81

   25 functDeclaration: typeSpecifier IDENTIFIER "(" ")" . compoundStmt

    "{"  shift, and go to state 109

    compoundStmt  go to state 110


State 82

   24 functDeclaration: typeSpecifier IDENTIFIER "(" parameterList . ")" compoundStmt
   27 parameterList: parameterList . "," parameterDeclaration

    ")"  shift, and go to state 111
    ","  shift, and go to state 112


State 83

   26 parameterList: parameterDeclaration .

    ")"  reduce using rule 26 (parameterList)
    ","  reduce using rule 26 (parameterList)


State 84

   28 parameterDeclaration: typeSpecifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 113


State 85

   16 tableDeclaration: "table" typeSpecifier IDENTIFIER "[" "]" .

    ";"  reduce using rule 16 (tableDeclaration)
    "="  reduce using rule 16 (tableDeclaration)


State 86

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 114
    ":"  shift, and go to state 115


State 87

   84 argList: expression . "," argList
   85        | expression .

    ","  shift, and go to state 116

    ")"  reduce using rule 85 (argList)


State 88

   81 functCall: IDENTIFIER "(" args . ")"

    ")"  shift, and go to state 117


State 89

   82 args: argList .

    ")"  reduce using rule 82 (args)


State 90

   72 baseValue: "(" expression ")" .

    "+"   reduce using rule 72 (baseValue)
    "-"   reduce using rule 72 (baseValue)
    "*"   reduce using rule 72 (baseValue)
    "/"   reduce using rule 72 (baseValue)
    "%"   reduce using rule 72 (baseValue)
    "<"   reduce using rule 72 (baseValue)
    "<="  reduce using rule 72 (baseValue)
    ">"   reduce using rule 72 (baseValue)
    ">="  reduce using rule 72 (baseValue)
    "!="  reduce using rule 72 (baseValue)
    "=="  reduce using rule 72 (baseValue)
    "||"  reduce using rule 72 (baseValue)
    "&&"  reduce using rule 72 (baseValue)
    ";"   reduce using rule 72 (baseValue)


State 91

   50 expression: mutable "=" . logicalOrExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    logicalOrExp   go to state 118
    logicalAndExp  go to state 204
    equalityExp    go to state 205
    relationExp    go to state 206
    sumExp         go to state 207
    multExp        go to state 208
    unaryExp       go to state 209
    baseValue      go to state 210
    mutable        go to state 267
    functCall      go to state 211
    constant       go to state 212
    lexerror       go to state 213


State 92

   52 logicalOrExp: logicalOrExp "||" logicalAndExp .
   54 logicalAndExp: logicalAndExp . "&&" equalityExp

    "&&"  shift, and go to state 64

    "||"  reduce using rule 52 (logicalOrExp)
    ";"   reduce using rule 52 (logicalOrExp)


State 93

   54 logicalAndExp: logicalAndExp "&&" equalityExp .
   56 equalityExp: equalityExp . "==" relationExp
   57            | equalityExp . "!=" relationExp

    "!="  shift, and go to state 65
    "=="  shift, and go to state 66

    "||"  reduce using rule 54 (logicalAndExp)
    "&&"  reduce using rule 54 (logicalAndExp)
    ";"   reduce using rule 54 (logicalAndExp)


State 94

   57 equalityExp: equalityExp "!=" relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 67
    "<="  shift, and go to state 68
    ">"   shift, and go to state 69
    ">="  shift, and go to state 70

    "!="  reduce using rule 57 (equalityExp)
    "=="  reduce using rule 57 (equalityExp)
    "||"  reduce using rule 57 (equalityExp)
    "&&"  reduce using rule 57 (equalityExp)
    ";"   reduce using rule 57 (equalityExp)


State 95

   56 equalityExp: equalityExp "==" relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 67
    "<="  shift, and go to state 68
    ">"   shift, and go to state 69
    ">="  shift, and go to state 70

    "!="  reduce using rule 56 (equalityExp)
    "=="  reduce using rule 56 (equalityExp)
    "||"  reduce using rule 56 (equalityExp)
    "&&"  reduce using rule 56 (equalityExp)
    ";"   reduce using rule 56 (equalityExp)


State 96

   60 relationExp: relationExp "<" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 71
    "-"  shift, and go to state 72

    "<"   reduce using rule 60 (relationExp)
    "<="  reduce using rule 60 (relationExp)
    ">"   reduce using rule 60 (relationExp)
    ">="  reduce using rule 60 (relationExp)
    "!="  reduce using rule 60 (relationExp)
    "=="  reduce using rule 60 (relationExp)
    "||"  reduce using rule 60 (relationExp)
    "&&"  reduce using rule 60 (relationExp)
    ";"   reduce using rule 60 (relationExp)


State 97

   62 relationExp: relationExp "<=" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 71
    "-"  shift, and go to state 72

    "<"   reduce using rule 62 (relationExp)
    "<="  reduce using rule 62 (relationExp)
    ">"   reduce using rule 62 (relationExp)
    ">="  reduce using rule 62 (relationExp)
    "!="  reduce using rule 62 (relationExp)
    "=="  reduce using rule 62 (relationExp)
    "||"  reduce using rule 62 (relationExp)
    "&&"  reduce using rule 62 (relationExp)
    ";"   reduce using rule 62 (relationExp)


State 98

   59 relationExp: relationExp ">" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 71
    "-"  shift, and go to state 72

    "<"   reduce using rule 59 (relationExp)
    "<="  reduce using rule 59 (relationExp)
    ">"   reduce using rule 59 (relationExp)
    ">="  reduce using rule 59 (relationExp)
    "!="  reduce using rule 59 (relationExp)
    "=="  reduce using rule 59 (relationExp)
    "||"  reduce using rule 59 (relationExp)
    "&&"  reduce using rule 59 (relationExp)
    ";"   reduce using rule 59 (relationExp)


State 99

   61 relationExp: relationExp ">=" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 71
    "-"  shift, and go to state 72

    "<"   reduce using rule 61 (relationExp)
    "<="  reduce using rule 61 (relationExp)
    ">"   reduce using rule 61 (relationExp)
    ">="  reduce using rule 61 (relationExp)
    "!="  reduce using rule 61 (relationExp)
    "=="  reduce using rule 61 (relationExp)
    "||"  reduce using rule 61 (relationExp)
    "&&"  reduce using rule 61 (relationExp)
    ";"   reduce using rule 61 (relationExp)


State 100

   64 sumExp: sumExp "+" multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 73
    "/"  shift, and go to state 74
    "%"  shift, and go to state 75

    "+"   reduce using rule 64 (sumExp)
    "-"   reduce using rule 64 (sumExp)
    "<"   reduce using rule 64 (sumExp)
    "<="  reduce using rule 64 (sumExp)
    ">"   reduce using rule 64 (sumExp)
    ">="  reduce using rule 64 (sumExp)
    "!="  reduce using rule 64 (sumExp)
    "=="  reduce using rule 64 (sumExp)
    "||"  reduce using rule 64 (sumExp)
    "&&"  reduce using rule 64 (sumExp)
    ";"   reduce using rule 64 (sumExp)


State 101

   65 sumExp: sumExp "-" multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 73
    "/"  shift, and go to state 74
    "%"  shift, and go to state 75

    "+"   reduce using rule 65 (sumExp)
    "-"   reduce using rule 65 (sumExp)
    "<"   reduce using rule 65 (sumExp)
    "<="  reduce using rule 65 (sumExp)
    ">"   reduce using rule 65 (sumExp)
    ">="  reduce using rule 65 (sumExp)
    "!="  reduce using rule 65 (sumExp)
    "=="  reduce using rule 65 (sumExp)
    "||"  reduce using rule 65 (sumExp)
    "&&"  reduce using rule 65 (sumExp)
    ";"   reduce using rule 65 (sumExp)


State 102

   67 multExp: multExp "*" unaryExp .

    "+"   reduce using rule 67 (multExp)
    "-"   reduce using rule 67 (multExp)
    "*"   reduce using rule 67 (multExp)
    "/"   reduce using rule 67 (multExp)
    "%"   reduce using rule 67 (multExp)
    "<"   reduce using rule 67 (multExp)
    "<="  reduce using rule 67 (multExp)
    ">"   reduce using rule 67 (multExp)
    ">="  reduce using rule 67 (multExp)
    "!="  reduce using rule 67 (multExp)
    "=="  reduce using rule 67 (multExp)
    "||"  reduce using rule 67 (multExp)
    "&&"  reduce using rule 67 (multExp)
    ";"   reduce using rule 67 (multExp)


State 103

   68 multExp: multExp "/" unaryExp .

    "+"   reduce using rule 68 (multExp)
    "-"   reduce using rule 68 (multExp)
    "*"   reduce using rule 68 (multExp)
    "/"   reduce using rule 68 (multExp)
    "%"   reduce using rule 68 (multExp)
    "<"   reduce using rule 68 (multExp)
    "<="  reduce using rule 68 (multExp)
    ">"   reduce using rule 68 (multExp)
    ">="  reduce using rule 68 (multExp)
    "!="  reduce using rule 68 (multExp)
    "=="  reduce using rule 68 (multExp)
    "||"  reduce using rule 68 (multExp)
    "&&"  reduce using rule 68 (multExp)
    ";"   reduce using rule 68 (multExp)


State 104

   69 multExp: multExp "%" unaryExp .

    "+"   reduce using rule 69 (multExp)
    "-"   reduce using rule 69 (multExp)
    "*"   reduce using rule 69 (multExp)
    "/"   reduce using rule 69 (multExp)
    "%"   reduce using rule 69 (multExp)
    "<"   reduce using rule 69 (multExp)
    "<="  reduce using rule 69 (multExp)
    ">"   reduce using rule 69 (multExp)
    ">="  reduce using rule 69 (multExp)
    "!="  reduce using rule 69 (multExp)
    "=="  reduce using rule 69 (multExp)
    "||"  reduce using rule 69 (multExp)
    "&&"  reduce using rule 69 (multExp)
    ";"   reduce using rule 69 (multExp)


State 105

   15 arrayDefinition: "{" constList "}" .

    ";"  reduce using rule 15 (arrayDefinition)


State 106

   19 constList: constList "," . constant

    INTCONST      shift, and go to state 214
    FLOATCONST    shift, and go to state 215
    BOOLEANCONST  shift, and go to state 216
    CHARCONST     shift, and go to state 217
    STRINGCONST   shift, and go to state 218

    constant  go to state 119


State 107

   20 stringList: STRINGCONST .

    ")"  reduce using rule 20 (stringList)
    ","  reduce using rule 20 (stringList)


State 108

   17 tableDefinition: "|" "(" stringList . ")" ":" columnContent "|"
   21 stringList: stringList . "," STRINGCONST

    ")"  shift, and go to state 120
    ","  shift, and go to state 121


State 109

   30 compoundStmt: "{" . "}"
   31             | "{" . statementList "}"

    IDENTIFIER             shift, and go to state 268
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "while"                shift, and go to state 122
    "for"                  shift, and go to state 123
    "if"                   shift, and go to state 124
    "return"               shift, and go to state 125
    "read"                 shift, and go to state 126
    "write"                shift, and go to state 127
    "char"                 shift, and go to state 1
    "int"                  shift, and go to state 2
    "float"                shift, and go to state 3
    "string"               shift, and go to state 4
    "table"                shift, and go to state 5
    "bool"                 shift, and go to state 6
    "void"                 shift, and go to state 7
    "!"                    shift, and go to state 36
    "}"                    shift, and go to state 128
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    varDeclaration        go to state 129
    varSimpleDeclaration  go to state 15
    arrayDeclaration      go to state 16
    tableDeclaration      go to state 17
    statementList         go to state 130
    statement             go to state 131
    iterationStmt         go to state 132
    conditionalStmt       go to state 133
    ifStmt                go to state 134
    returnStmt            go to state 135
    expression            go to state 136
    logicalOrExp          go to state 269
    logicalAndExp         go to state 39
    equalityExp           go to state 40
    relationExp           go to state 41
    sumExp                go to state 42
    multExp               go to state 43
    unaryExp              go to state 44
    baseValue             go to state 45
    mutable               go to state 270
    functCall             go to state 47
    constant              go to state 48
    typeSpecifier         go to state 137
    lexerror              go to state 49


State 110

   25 functDeclaration: typeSpecifier IDENTIFIER "(" ")" compoundStmt .

    $end      reduce using rule 25 (functDeclaration)
    "char"    reduce using rule 25 (functDeclaration)
    "int"     reduce using rule 25 (functDeclaration)
    "float"   reduce using rule 25 (functDeclaration)
    "string"  reduce using rule 25 (functDeclaration)
    "table"   reduce using rule 25 (functDeclaration)
    "bool"    reduce using rule 25 (functDeclaration)
    "void"    reduce using rule 25 (functDeclaration)


State 111

   24 functDeclaration: typeSpecifier IDENTIFIER "(" parameterList ")" . compoundStmt

    "{"  shift, and go to state 109

    compoundStmt  go to state 138


State 112

   27 parameterList: parameterList "," . parameterDeclaration

    "char"    shift, and go to state 1
    "int"     shift, and go to state 2
    "float"   shift, and go to state 3
    "string"  shift, and go to state 4
    "bool"    shift, and go to state 6
    "void"    shift, and go to state 80

    parameterDeclaration  go to state 139
    typeSpecifier         go to state 84


State 113

   28 parameterDeclaration: typeSpecifier IDENTIFIER .

    ")"  reduce using rule 28 (parameterDeclaration)
    ","  reduce using rule 28 (parameterDeclaration)


State 114

   78 mutable: IDENTIFIER "[" expression "]" .

    "+"   reduce using rule 78 (mutable)
    "-"   reduce using rule 78 (mutable)
    "*"   reduce using rule 78 (mutable)
    "/"   reduce using rule 78 (mutable)
    "%"   reduce using rule 78 (mutable)
    "<"   reduce using rule 78 (mutable)
    "<="  reduce using rule 78 (mutable)
    ">"   reduce using rule 78 (mutable)
    ">="  reduce using rule 78 (mutable)
    "!="  reduce using rule 78 (mutable)
    "=="  reduce using rule 78 (mutable)
    "||"  reduce using rule 78 (mutable)
    "&&"  reduce using rule 78 (mutable)
    ";"   reduce using rule 78 (mutable)


State 115

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 140
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 116

   84 argList: expression "," . argList

    IDENTIFIER             shift, and go to state 242
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    expression     go to state 87
    logicalOrExp   go to state 253
    logicalAndExp  go to state 254
    equalityExp    go to state 255
    relationExp    go to state 256
    sumExp         go to state 257
    multExp        go to state 258
    unaryExp       go to state 259
    baseValue      go to state 260
    mutable        go to state 261
    functCall      go to state 262
    argList        go to state 141
    constant       go to state 263
    lexerror       go to state 264


State 117

   81 functCall: IDENTIFIER "(" args ")" .

    "+"   reduce using rule 81 (functCall)
    "-"   reduce using rule 81 (functCall)
    "*"   reduce using rule 81 (functCall)
    "/"   reduce using rule 81 (functCall)
    "%"   reduce using rule 81 (functCall)
    "<"   reduce using rule 81 (functCall)
    "<="  reduce using rule 81 (functCall)
    ">"   reduce using rule 81 (functCall)
    ">="  reduce using rule 81 (functCall)
    "!="  reduce using rule 81 (functCall)
    "=="  reduce using rule 81 (functCall)
    "||"  reduce using rule 81 (functCall)
    "&&"  reduce using rule 81 (functCall)
    ";"   reduce using rule 81 (functCall)


State 118

   50 expression: mutable "=" logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 265

    ")"  reduce using rule 50 (expression)


State 119

   19 constList: constList "," constant .

    "}"  reduce using rule 19 (constList)
    ","  reduce using rule 19 (constList)


State 120

   17 tableDefinition: "|" "(" stringList ")" . ":" columnContent "|"

    ":"  shift, and go to state 142


State 121

   21 stringList: stringList "," . STRINGCONST

    STRINGCONST  shift, and go to state 143


State 122

   41 iterationStmt: "while" . "(" expression ")" compoundStmt

    "("  shift, and go to state 144


State 123

   42 iterationStmt: "for" . "(" typeSpecifier IDENTIFIER ")" "in" IDENTIFIER compoundStmt

    "("  shift, and go to state 145


State 124

   44 ifStmt: "if" . "(" expression ")" compoundStmt

    "("  shift, and go to state 146


State 125

   47 returnStmt: "return" .
   48           | "return" . expression

    IDENTIFIER             shift, and go to state 268
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    ";"  reduce using rule 47 (returnStmt)

    expression     go to state 147
    logicalOrExp   go to state 269
    logicalAndExp  go to state 39
    equalityExp    go to state 40
    relationExp    go to state 41
    sumExp         go to state 42
    multExp        go to state 43
    unaryExp       go to state 44
    baseValue      go to state 45
    mutable        go to state 270
    functCall      go to state 47
    constant       go to state 48
    lexerror       go to state 49


State 126

   39 statement: "read" . "(" IDENTIFIER ")" ";"

    "("  shift, and go to state 148


State 127

   40 statement: "write" . "(" baseValue ")" ";"

    "("  shift, and go to state 149


State 128

   30 compoundStmt: "{" "}" .

    $end      reduce using rule 30 (compoundStmt)
    "char"    reduce using rule 30 (compoundStmt)
    "int"     reduce using rule 30 (compoundStmt)
    "float"   reduce using rule 30 (compoundStmt)
    "string"  reduce using rule 30 (compoundStmt)
    "table"   reduce using rule 30 (compoundStmt)
    "bool"    reduce using rule 30 (compoundStmt)
    "void"    reduce using rule 30 (compoundStmt)


State 129

   34 statement: varDeclaration . ";"

    ";"  shift, and go to state 150


State 130

   31 compoundStmt: "{" statementList . "}"
   33 statementList: statementList . statement

    IDENTIFIER             shift, and go to state 268
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "while"                shift, and go to state 122
    "for"                  shift, and go to state 123
    "if"                   shift, and go to state 124
    "return"               shift, and go to state 125
    "read"                 shift, and go to state 126
    "write"                shift, and go to state 127
    "char"                 shift, and go to state 1
    "int"                  shift, and go to state 2
    "float"                shift, and go to state 3
    "string"               shift, and go to state 4
    "table"                shift, and go to state 5
    "bool"                 shift, and go to state 6
    "void"                 shift, and go to state 7
    "!"                    shift, and go to state 36
    "}"                    shift, and go to state 151
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    varDeclaration        go to state 129
    varSimpleDeclaration  go to state 15
    arrayDeclaration      go to state 16
    tableDeclaration      go to state 17
    statement             go to state 152
    iterationStmt         go to state 132
    conditionalStmt       go to state 133
    ifStmt                go to state 134
    returnStmt            go to state 135
    expression            go to state 136
    logicalOrExp          go to state 269
    logicalAndExp         go to state 39
    equalityExp           go to state 40
    relationExp           go to state 41
    sumExp                go to state 42
    multExp               go to state 43
    unaryExp              go to state 44
    baseValue             go to state 45
    mutable               go to state 270
    functCall             go to state 47
    constant              go to state 48
    typeSpecifier         go to state 137
    lexerror              go to state 49


State 131

   32 statementList: statement .

    IDENTIFIER             reduce using rule 32 (statementList)
    INTCONST               reduce using rule 32 (statementList)
    FLOATCONST             reduce using rule 32 (statementList)
    BOOLEANCONST           reduce using rule 32 (statementList)
    CHARCONST              reduce using rule 32 (statementList)
    STRINGCONST            reduce using rule 32 (statementList)
    "while"                reduce using rule 32 (statementList)
    "for"                  reduce using rule 32 (statementList)
    "if"                   reduce using rule 32 (statementList)
    "return"               reduce using rule 32 (statementList)
    "read"                 reduce using rule 32 (statementList)
    "write"                reduce using rule 32 (statementList)
    "char"                 reduce using rule 32 (statementList)
    "int"                  reduce using rule 32 (statementList)
    "float"                reduce using rule 32 (statementList)
    "string"               reduce using rule 32 (statementList)
    "table"                reduce using rule 32 (statementList)
    "bool"                 reduce using rule 32 (statementList)
    "void"                 reduce using rule 32 (statementList)
    "!"                    reduce using rule 32 (statementList)
    "}"                    reduce using rule 32 (statementList)
    "("                    reduce using rule 32 (statementList)
    ERR_INVALID_ID         reduce using rule 32 (statementList)
    ERR_INVALID_CHARCONST  reduce using rule 32 (statementList)
    ERR_UNKNOWN_TOKEN      reduce using rule 32 (statementList)


State 132

   36 statement: iterationStmt .

    IDENTIFIER             reduce using rule 36 (statement)
    INTCONST               reduce using rule 36 (statement)
    FLOATCONST             reduce using rule 36 (statement)
    BOOLEANCONST           reduce using rule 36 (statement)
    CHARCONST              reduce using rule 36 (statement)
    STRINGCONST            reduce using rule 36 (statement)
    "while"                reduce using rule 36 (statement)
    "for"                  reduce using rule 36 (statement)
    "if"                   reduce using rule 36 (statement)
    "return"               reduce using rule 36 (statement)
    "read"                 reduce using rule 36 (statement)
    "write"                reduce using rule 36 (statement)
    "char"                 reduce using rule 36 (statement)
    "int"                  reduce using rule 36 (statement)
    "float"                reduce using rule 36 (statement)
    "string"               reduce using rule 36 (statement)
    "table"                reduce using rule 36 (statement)
    "bool"                 reduce using rule 36 (statement)
    "void"                 reduce using rule 36 (statement)
    "!"                    reduce using rule 36 (statement)
    "}"                    reduce using rule 36 (statement)
    "("                    reduce using rule 36 (statement)
    ERR_INVALID_ID         reduce using rule 36 (statement)
    ERR_INVALID_CHARCONST  reduce using rule 36 (statement)
    ERR_UNKNOWN_TOKEN      reduce using rule 36 (statement)


State 133

   37 statement: conditionalStmt .

    IDENTIFIER             reduce using rule 37 (statement)
    INTCONST               reduce using rule 37 (statement)
    FLOATCONST             reduce using rule 37 (statement)
    BOOLEANCONST           reduce using rule 37 (statement)
    CHARCONST              reduce using rule 37 (statement)
    STRINGCONST            reduce using rule 37 (statement)
    "while"                reduce using rule 37 (statement)
    "for"                  reduce using rule 37 (statement)
    "if"                   reduce using rule 37 (statement)
    "return"               reduce using rule 37 (statement)
    "read"                 reduce using rule 37 (statement)
    "write"                reduce using rule 37 (statement)
    "char"                 reduce using rule 37 (statement)
    "int"                  reduce using rule 37 (statement)
    "float"                reduce using rule 37 (statement)
    "string"               reduce using rule 37 (statement)
    "table"                reduce using rule 37 (statement)
    "bool"                 reduce using rule 37 (statement)
    "void"                 reduce using rule 37 (statement)
    "!"                    reduce using rule 37 (statement)
    "}"                    reduce using rule 37 (statement)
    "("                    reduce using rule 37 (statement)
    ERR_INVALID_ID         reduce using rule 37 (statement)
    ERR_INVALID_CHARCONST  reduce using rule 37 (statement)
    ERR_UNKNOWN_TOKEN      reduce using rule 37 (statement)


State 134

   43 conditionalStmt: ifStmt . elseStmt

    "else"  shift, and go to state 153

    IDENTIFIER             reduce using rule 46 (elseStmt)
    INTCONST               reduce using rule 46 (elseStmt)
    FLOATCONST             reduce using rule 46 (elseStmt)
    BOOLEANCONST           reduce using rule 46 (elseStmt)
    CHARCONST              reduce using rule 46 (elseStmt)
    STRINGCONST            reduce using rule 46 (elseStmt)
    "while"                reduce using rule 46 (elseStmt)
    "for"                  reduce using rule 46 (elseStmt)
    "if"                   reduce using rule 46 (elseStmt)
    "return"               reduce using rule 46 (elseStmt)
    "read"                 reduce using rule 46 (elseStmt)
    "write"                reduce using rule 46 (elseStmt)
    "char"                 reduce using rule 46 (elseStmt)
    "int"                  reduce using rule 46 (elseStmt)
    "float"                reduce using rule 46 (elseStmt)
    "string"               reduce using rule 46 (elseStmt)
    "table"                reduce using rule 46 (elseStmt)
    "bool"                 reduce using rule 46 (elseStmt)
    "void"                 reduce using rule 46 (elseStmt)
    "!"                    reduce using rule 46 (elseStmt)
    "}"                    reduce using rule 46 (elseStmt)
    "("                    reduce using rule 46 (elseStmt)
    ERR_INVALID_ID         reduce using rule 46 (elseStmt)
    ERR_INVALID_CHARCONST  reduce using rule 46 (elseStmt)
    ERR_UNKNOWN_TOKEN      reduce using rule 46 (elseStmt)

    elseStmt  go to state 154


State 135

   38 statement: returnStmt . ";"

    ";"  shift, and go to state 155


State 136

   35 statement: expression . ";"

    ";"  shift, and go to state 156


State 137

   13 varSimpleDeclaration: typeSpecifier . IDENTIFIER
   14 arrayDeclaration: typeSpecifier . IDENTIFIER "[" "]"

    IDENTIFIER  shift, and go to state 157


State 138

   24 functDeclaration: typeSpecifier IDENTIFIER "(" parameterList ")" compoundStmt .

    $end      reduce using rule 24 (functDeclaration)
    "char"    reduce using rule 24 (functDeclaration)
    "int"     reduce using rule 24 (functDeclaration)
    "float"   reduce using rule 24 (functDeclaration)
    "string"  reduce using rule 24 (functDeclaration)
    "table"   reduce using rule 24 (functDeclaration)
    "bool"    reduce using rule 24 (functDeclaration)
    "void"    reduce using rule 24 (functDeclaration)


State 139

   27 parameterList: parameterList "," parameterDeclaration .

    ")"  reduce using rule 27 (parameterList)
    ","  reduce using rule 27 (parameterList)


State 140

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 158
    ":"  shift, and go to state 159


State 141

   84 argList: expression "," argList .

    ")"  reduce using rule 84 (argList)


State 142

   17 tableDefinition: "|" "(" stringList ")" ":" . columnContent "|"

    "("  shift, and go to state 160

    columnContent  go to state 161


State 143

   21 stringList: stringList "," STRINGCONST .

    ")"  reduce using rule 21 (stringList)
    ","  reduce using rule 21 (stringList)


State 144

   41 iterationStmt: "while" "(" . expression ")" compoundStmt

    IDENTIFIER             shift, and go to state 193
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    expression     go to state 162
    logicalOrExp   go to state 61
    logicalAndExp  go to state 204
    equalityExp    go to state 205
    relationExp    go to state 206
    sumExp         go to state 207
    multExp        go to state 208
    unaryExp       go to state 209
    baseValue      go to state 210
    mutable        go to state 62
    functCall      go to state 211
    constant       go to state 212
    lexerror       go to state 213


State 145

   42 iterationStmt: "for" "(" . typeSpecifier IDENTIFIER ")" "in" IDENTIFIER compoundStmt

    "char"    shift, and go to state 1
    "int"     shift, and go to state 2
    "float"   shift, and go to state 3
    "string"  shift, and go to state 4
    "bool"    shift, and go to state 6
    "void"    shift, and go to state 7

    typeSpecifier  go to state 163


State 146

   44 ifStmt: "if" "(" . expression ")" compoundStmt

    IDENTIFIER             shift, and go to state 193
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    expression     go to state 164
    logicalOrExp   go to state 61
    logicalAndExp  go to state 204
    equalityExp    go to state 205
    relationExp    go to state 206
    sumExp         go to state 207
    multExp        go to state 208
    unaryExp       go to state 209
    baseValue      go to state 210
    mutable        go to state 62
    functCall      go to state 211
    constant       go to state 212
    lexerror       go to state 213


State 147

   48 returnStmt: "return" expression .

    ";"  reduce using rule 48 (returnStmt)


State 148

   39 statement: "read" "(" . IDENTIFIER ")" ";"

    IDENTIFIER  shift, and go to state 165


State 149

   40 statement: "write" "(" . baseValue ")" ";"

    IDENTIFIER             shift, and go to state 271
    INTCONST               shift, and go to state 272
    FLOATCONST             shift, and go to state 273
    BOOLEANCONST           shift, and go to state 274
    CHARCONST              shift, and go to state 275
    STRINGCONST            shift, and go to state 276
    "("                    shift, and go to state 277
    ERR_INVALID_ID         shift, and go to state 278
    ERR_INVALID_CHARCONST  shift, and go to state 279
    ERR_UNKNOWN_TOKEN      shift, and go to state 280

    baseValue  go to state 166
    mutable    go to state 281
    functCall  go to state 282
    constant   go to state 283
    lexerror   go to state 284


State 150

   34 statement: varDeclaration ";" .

    IDENTIFIER             reduce using rule 34 (statement)
    INTCONST               reduce using rule 34 (statement)
    FLOATCONST             reduce using rule 34 (statement)
    BOOLEANCONST           reduce using rule 34 (statement)
    CHARCONST              reduce using rule 34 (statement)
    STRINGCONST            reduce using rule 34 (statement)
    "while"                reduce using rule 34 (statement)
    "for"                  reduce using rule 34 (statement)
    "if"                   reduce using rule 34 (statement)
    "return"               reduce using rule 34 (statement)
    "read"                 reduce using rule 34 (statement)
    "write"                reduce using rule 34 (statement)
    "char"                 reduce using rule 34 (statement)
    "int"                  reduce using rule 34 (statement)
    "float"                reduce using rule 34 (statement)
    "string"               reduce using rule 34 (statement)
    "table"                reduce using rule 34 (statement)
    "bool"                 reduce using rule 34 (statement)
    "void"                 reduce using rule 34 (statement)
    "!"                    reduce using rule 34 (statement)
    "}"                    reduce using rule 34 (statement)
    "("                    reduce using rule 34 (statement)
    ERR_INVALID_ID         reduce using rule 34 (statement)
    ERR_INVALID_CHARCONST  reduce using rule 34 (statement)
    ERR_UNKNOWN_TOKEN      reduce using rule 34 (statement)


State 151

   31 compoundStmt: "{" statementList "}" .

    $end      reduce using rule 31 (compoundStmt)
    "char"    reduce using rule 31 (compoundStmt)
    "int"     reduce using rule 31 (compoundStmt)
    "float"   reduce using rule 31 (compoundStmt)
    "string"  reduce using rule 31 (compoundStmt)
    "table"   reduce using rule 31 (compoundStmt)
    "bool"    reduce using rule 31 (compoundStmt)
    "void"    reduce using rule 31 (compoundStmt)


State 152

   33 statementList: statementList statement .

    IDENTIFIER             reduce using rule 33 (statementList)
    INTCONST               reduce using rule 33 (statementList)
    FLOATCONST             reduce using rule 33 (statementList)
    BOOLEANCONST           reduce using rule 33 (statementList)
    CHARCONST              reduce using rule 33 (statementList)
    STRINGCONST            reduce using rule 33 (statementList)
    "while"                reduce using rule 33 (statementList)
    "for"                  reduce using rule 33 (statementList)
    "if"                   reduce using rule 33 (statementList)
    "return"               reduce using rule 33 (statementList)
    "read"                 reduce using rule 33 (statementList)
    "write"                reduce using rule 33 (statementList)
    "char"                 reduce using rule 33 (statementList)
    "int"                  reduce using rule 33 (statementList)
    "float"                reduce using rule 33 (statementList)
    "string"               reduce using rule 33 (statementList)
    "table"                reduce using rule 33 (statementList)
    "bool"                 reduce using rule 33 (statementList)
    "void"                 reduce using rule 33 (statementList)
    "!"                    reduce using rule 33 (statementList)
    "}"                    reduce using rule 33 (statementList)
    "("                    reduce using rule 33 (statementList)
    ERR_INVALID_ID         reduce using rule 33 (statementList)
    ERR_INVALID_CHARCONST  reduce using rule 33 (statementList)
    ERR_UNKNOWN_TOKEN      reduce using rule 33 (statementList)


State 153

   45 elseStmt: "else" . compoundStmt

    "{"  shift, and go to state 285

    compoundStmt  go to state 167


State 154

   43 conditionalStmt: ifStmt elseStmt .

    IDENTIFIER             reduce using rule 43 (conditionalStmt)
    INTCONST               reduce using rule 43 (conditionalStmt)
    FLOATCONST             reduce using rule 43 (conditionalStmt)
    BOOLEANCONST           reduce using rule 43 (conditionalStmt)
    CHARCONST              reduce using rule 43 (conditionalStmt)
    STRINGCONST            reduce using rule 43 (conditionalStmt)
    "while"                reduce using rule 43 (conditionalStmt)
    "for"                  reduce using rule 43 (conditionalStmt)
    "if"                   reduce using rule 43 (conditionalStmt)
    "return"               reduce using rule 43 (conditionalStmt)
    "read"                 reduce using rule 43 (conditionalStmt)
    "write"                reduce using rule 43 (conditionalStmt)
    "char"                 reduce using rule 43 (conditionalStmt)
    "int"                  reduce using rule 43 (conditionalStmt)
    "float"                reduce using rule 43 (conditionalStmt)
    "string"               reduce using rule 43 (conditionalStmt)
    "table"                reduce using rule 43 (conditionalStmt)
    "bool"                 reduce using rule 43 (conditionalStmt)
    "void"                 reduce using rule 43 (conditionalStmt)
    "!"                    reduce using rule 43 (conditionalStmt)
    "}"                    reduce using rule 43 (conditionalStmt)
    "("                    reduce using rule 43 (conditionalStmt)
    ERR_INVALID_ID         reduce using rule 43 (conditionalStmt)
    ERR_INVALID_CHARCONST  reduce using rule 43 (conditionalStmt)
    ERR_UNKNOWN_TOKEN      reduce using rule 43 (conditionalStmt)


State 155

   38 statement: returnStmt ";" .

    IDENTIFIER             reduce using rule 38 (statement)
    INTCONST               reduce using rule 38 (statement)
    FLOATCONST             reduce using rule 38 (statement)
    BOOLEANCONST           reduce using rule 38 (statement)
    CHARCONST              reduce using rule 38 (statement)
    STRINGCONST            reduce using rule 38 (statement)
    "while"                reduce using rule 38 (statement)
    "for"                  reduce using rule 38 (statement)
    "if"                   reduce using rule 38 (statement)
    "return"               reduce using rule 38 (statement)
    "read"                 reduce using rule 38 (statement)
    "write"                reduce using rule 38 (statement)
    "char"                 reduce using rule 38 (statement)
    "int"                  reduce using rule 38 (statement)
    "float"                reduce using rule 38 (statement)
    "string"               reduce using rule 38 (statement)
    "table"                reduce using rule 38 (statement)
    "bool"                 reduce using rule 38 (statement)
    "void"                 reduce using rule 38 (statement)
    "!"                    reduce using rule 38 (statement)
    "}"                    reduce using rule 38 (statement)
    "("                    reduce using rule 38 (statement)
    ERR_INVALID_ID         reduce using rule 38 (statement)
    ERR_INVALID_CHARCONST  reduce using rule 38 (statement)
    ERR_UNKNOWN_TOKEN      reduce using rule 38 (statement)


State 156

   35 statement: expression ";" .

    IDENTIFIER             reduce using rule 35 (statement)
    INTCONST               reduce using rule 35 (statement)
    FLOATCONST             reduce using rule 35 (statement)
    BOOLEANCONST           reduce using rule 35 (statement)
    CHARCONST              reduce using rule 35 (statement)
    STRINGCONST            reduce using rule 35 (statement)
    "while"                reduce using rule 35 (statement)
    "for"                  reduce using rule 35 (statement)
    "if"                   reduce using rule 35 (statement)
    "return"               reduce using rule 35 (statement)
    "read"                 reduce using rule 35 (statement)
    "write"                reduce using rule 35 (statement)
    "char"                 reduce using rule 35 (statement)
    "int"                  reduce using rule 35 (statement)
    "float"                reduce using rule 35 (statement)
    "string"               reduce using rule 35 (statement)
    "table"                reduce using rule 35 (statement)
    "bool"                 reduce using rule 35 (statement)
    "void"                 reduce using rule 35 (statement)
    "!"                    reduce using rule 35 (statement)
    "}"                    reduce using rule 35 (statement)
    "("                    reduce using rule 35 (statement)
    ERR_INVALID_ID         reduce using rule 35 (statement)
    ERR_INVALID_CHARCONST  reduce using rule 35 (statement)
    ERR_UNKNOWN_TOKEN      reduce using rule 35 (statement)


State 157

   13 varSimpleDeclaration: typeSpecifier IDENTIFIER .
   14 arrayDeclaration: typeSpecifier IDENTIFIER . "[" "]"

    "["  shift, and go to state 54

    ";"  reduce using rule 13 (varSimpleDeclaration)
    "="  reduce using rule 13 (varSimpleDeclaration)


State 158

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    "+"   reduce using rule 79 (mutable)
    "-"   reduce using rule 79 (mutable)
    "*"   reduce using rule 79 (mutable)
    "/"   reduce using rule 79 (mutable)
    "%"   reduce using rule 79 (mutable)
    "<"   reduce using rule 79 (mutable)
    "<="  reduce using rule 79 (mutable)
    ">"   reduce using rule 79 (mutable)
    ">="  reduce using rule 79 (mutable)
    "!="  reduce using rule 79 (mutable)
    "=="  reduce using rule 79 (mutable)
    "||"  reduce using rule 79 (mutable)
    "&&"  reduce using rule 79 (mutable)
    ";"   reduce using rule 79 (mutable)


State 159

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 168
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 160

   22 columnContent: "(" . constList ")"

    INTCONST      shift, and go to state 309
    FLOATCONST    shift, and go to state 310
    BOOLEANCONST  shift, and go to state 311
    CHARCONST     shift, and go to state 312
    STRINGCONST   shift, and go to state 313

    constList  go to state 169
    constant   go to state 314


State 161

   17 tableDefinition: "|" "(" stringList ")" ":" columnContent . "|"
   23 columnContent: columnContent . "," "(" constList ")"

    ","  shift, and go to state 170
    "|"  shift, and go to state 171


State 162

   41 iterationStmt: "while" "(" expression . ")" compoundStmt

    ")"  shift, and go to state 172


State 163

   42 iterationStmt: "for" "(" typeSpecifier . IDENTIFIER ")" "in" IDENTIFIER compoundStmt

    IDENTIFIER  shift, and go to state 173


State 164

   44 ifStmt: "if" "(" expression . ")" compoundStmt

    ")"  shift, and go to state 174


State 165

   39 statement: "read" "(" IDENTIFIER . ")" ";"

    ")"  shift, and go to state 175


State 166

   40 statement: "write" "(" baseValue . ")" ";"

    ")"  shift, and go to state 176


State 167

   45 elseStmt: "else" compoundStmt .

    IDENTIFIER             reduce using rule 45 (elseStmt)
    INTCONST               reduce using rule 45 (elseStmt)
    FLOATCONST             reduce using rule 45 (elseStmt)
    BOOLEANCONST           reduce using rule 45 (elseStmt)
    CHARCONST              reduce using rule 45 (elseStmt)
    STRINGCONST            reduce using rule 45 (elseStmt)
    "while"                reduce using rule 45 (elseStmt)
    "for"                  reduce using rule 45 (elseStmt)
    "if"                   reduce using rule 45 (elseStmt)
    "return"               reduce using rule 45 (elseStmt)
    "read"                 reduce using rule 45 (elseStmt)
    "write"                reduce using rule 45 (elseStmt)
    "char"                 reduce using rule 45 (elseStmt)
    "int"                  reduce using rule 45 (elseStmt)
    "float"                reduce using rule 45 (elseStmt)
    "string"               reduce using rule 45 (elseStmt)
    "table"                reduce using rule 45 (elseStmt)
    "bool"                 reduce using rule 45 (elseStmt)
    "void"                 reduce using rule 45 (elseStmt)
    "!"                    reduce using rule 45 (elseStmt)
    "}"                    reduce using rule 45 (elseStmt)
    "("                    reduce using rule 45 (elseStmt)
    ERR_INVALID_ID         reduce using rule 45 (elseStmt)
    ERR_INVALID_CHARCONST  reduce using rule 45 (elseStmt)
    ERR_UNKNOWN_TOKEN      reduce using rule 45 (elseStmt)


State 168

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 177


State 169

   19 constList: constList . "," constant
   22 columnContent: "(" constList . ")"

    ")"  shift, and go to state 178
    ","  shift, and go to state 315


State 170

   23 columnContent: columnContent "," . "(" constList ")"

    "("  shift, and go to state 179


State 171

   17 tableDefinition: "|" "(" stringList ")" ":" columnContent "|" .

    ";"  reduce using rule 17 (tableDefinition)


State 172

   41 iterationStmt: "while" "(" expression ")" . compoundStmt

    "{"  shift, and go to state 285

    compoundStmt  go to state 180


State 173

   42 iterationStmt: "for" "(" typeSpecifier IDENTIFIER . ")" "in" IDENTIFIER compoundStmt

    ")"  shift, and go to state 181


State 174

   44 ifStmt: "if" "(" expression ")" . compoundStmt

    "{"  shift, and go to state 316

    compoundStmt  go to state 182


State 175

   39 statement: "read" "(" IDENTIFIER ")" . ";"

    ";"  shift, and go to state 183


State 176

   40 statement: "write" "(" baseValue ")" . ";"

    ";"  shift, and go to state 184


State 177

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    "+"   reduce using rule 80 (mutable)
    "-"   reduce using rule 80 (mutable)
    "*"   reduce using rule 80 (mutable)
    "/"   reduce using rule 80 (mutable)
    "%"   reduce using rule 80 (mutable)
    "<"   reduce using rule 80 (mutable)
    "<="  reduce using rule 80 (mutable)
    ">"   reduce using rule 80 (mutable)
    ">="  reduce using rule 80 (mutable)
    "!="  reduce using rule 80 (mutable)
    "=="  reduce using rule 80 (mutable)
    "||"  reduce using rule 80 (mutable)
    "&&"  reduce using rule 80 (mutable)
    ";"   reduce using rule 80 (mutable)


State 178

   22 columnContent: "(" constList ")" .

    ","  reduce using rule 22 (columnContent)
    "|"  reduce using rule 22 (columnContent)


State 179

   23 columnContent: columnContent "," "(" . constList ")"

    INTCONST      shift, and go to state 309
    FLOATCONST    shift, and go to state 310
    BOOLEANCONST  shift, and go to state 311
    CHARCONST     shift, and go to state 312
    STRINGCONST   shift, and go to state 313

    constList  go to state 185
    constant   go to state 314


State 180

   41 iterationStmt: "while" "(" expression ")" compoundStmt .

    IDENTIFIER             reduce using rule 41 (iterationStmt)
    INTCONST               reduce using rule 41 (iterationStmt)
    FLOATCONST             reduce using rule 41 (iterationStmt)
    BOOLEANCONST           reduce using rule 41 (iterationStmt)
    CHARCONST              reduce using rule 41 (iterationStmt)
    STRINGCONST            reduce using rule 41 (iterationStmt)
    "while"                reduce using rule 41 (iterationStmt)
    "for"                  reduce using rule 41 (iterationStmt)
    "if"                   reduce using rule 41 (iterationStmt)
    "return"               reduce using rule 41 (iterationStmt)
    "read"                 reduce using rule 41 (iterationStmt)
    "write"                reduce using rule 41 (iterationStmt)
    "char"                 reduce using rule 41 (iterationStmt)
    "int"                  reduce using rule 41 (iterationStmt)
    "float"                reduce using rule 41 (iterationStmt)
    "string"               reduce using rule 41 (iterationStmt)
    "table"                reduce using rule 41 (iterationStmt)
    "bool"                 reduce using rule 41 (iterationStmt)
    "void"                 reduce using rule 41 (iterationStmt)
    "!"                    reduce using rule 41 (iterationStmt)
    "}"                    reduce using rule 41 (iterationStmt)
    "("                    reduce using rule 41 (iterationStmt)
    ERR_INVALID_ID         reduce using rule 41 (iterationStmt)
    ERR_INVALID_CHARCONST  reduce using rule 41 (iterationStmt)
    ERR_UNKNOWN_TOKEN      reduce using rule 41 (iterationStmt)


State 181

   42 iterationStmt: "for" "(" typeSpecifier IDENTIFIER ")" . "in" IDENTIFIER compoundStmt

    "in"  shift, and go to state 186


State 182

   44 ifStmt: "if" "(" expression ")" compoundStmt .

    IDENTIFIER             reduce using rule 44 (ifStmt)
    INTCONST               reduce using rule 44 (ifStmt)
    FLOATCONST             reduce using rule 44 (ifStmt)
    BOOLEANCONST           reduce using rule 44 (ifStmt)
    CHARCONST              reduce using rule 44 (ifStmt)
    STRINGCONST            reduce using rule 44 (ifStmt)
    "while"                reduce using rule 44 (ifStmt)
    "for"                  reduce using rule 44 (ifStmt)
    "if"                   reduce using rule 44 (ifStmt)
    "else"                 reduce using rule 44 (ifStmt)
    "return"               reduce using rule 44 (ifStmt)
    "read"                 reduce using rule 44 (ifStmt)
    "write"                reduce using rule 44 (ifStmt)
    "char"                 reduce using rule 44 (ifStmt)
    "int"                  reduce using rule 44 (ifStmt)
    "float"                reduce using rule 44 (ifStmt)
    "string"               reduce using rule 44 (ifStmt)
    "table"                reduce using rule 44 (ifStmt)
    "bool"                 reduce using rule 44 (ifStmt)
    "void"                 reduce using rule 44 (ifStmt)
    "!"                    reduce using rule 44 (ifStmt)
    "}"                    reduce using rule 44 (ifStmt)
    "("                    reduce using rule 44 (ifStmt)
    ERR_INVALID_ID         reduce using rule 44 (ifStmt)
    ERR_INVALID_CHARCONST  reduce using rule 44 (ifStmt)
    ERR_UNKNOWN_TOKEN      reduce using rule 44 (ifStmt)


State 183

   39 statement: "read" "(" IDENTIFIER ")" ";" .

    IDENTIFIER             reduce using rule 39 (statement)
    INTCONST               reduce using rule 39 (statement)
    FLOATCONST             reduce using rule 39 (statement)
    BOOLEANCONST           reduce using rule 39 (statement)
    CHARCONST              reduce using rule 39 (statement)
    STRINGCONST            reduce using rule 39 (statement)
    "while"                reduce using rule 39 (statement)
    "for"                  reduce using rule 39 (statement)
    "if"                   reduce using rule 39 (statement)
    "return"               reduce using rule 39 (statement)
    "read"                 reduce using rule 39 (statement)
    "write"                reduce using rule 39 (statement)
    "char"                 reduce using rule 39 (statement)
    "int"                  reduce using rule 39 (statement)
    "float"                reduce using rule 39 (statement)
    "string"               reduce using rule 39 (statement)
    "table"                reduce using rule 39 (statement)
    "bool"                 reduce using rule 39 (statement)
    "void"                 reduce using rule 39 (statement)
    "!"                    reduce using rule 39 (statement)
    "}"                    reduce using rule 39 (statement)
    "("                    reduce using rule 39 (statement)
    ERR_INVALID_ID         reduce using rule 39 (statement)
    ERR_INVALID_CHARCONST  reduce using rule 39 (statement)
    ERR_UNKNOWN_TOKEN      reduce using rule 39 (statement)


State 184

   40 statement: "write" "(" baseValue ")" ";" .

    IDENTIFIER             reduce using rule 40 (statement)
    INTCONST               reduce using rule 40 (statement)
    FLOATCONST             reduce using rule 40 (statement)
    BOOLEANCONST           reduce using rule 40 (statement)
    CHARCONST              reduce using rule 40 (statement)
    STRINGCONST            reduce using rule 40 (statement)
    "while"                reduce using rule 40 (statement)
    "for"                  reduce using rule 40 (statement)
    "if"                   reduce using rule 40 (statement)
    "return"               reduce using rule 40 (statement)
    "read"                 reduce using rule 40 (statement)
    "write"                reduce using rule 40 (statement)
    "char"                 reduce using rule 40 (statement)
    "int"                  reduce using rule 40 (statement)
    "float"                reduce using rule 40 (statement)
    "string"               reduce using rule 40 (statement)
    "table"                reduce using rule 40 (statement)
    "bool"                 reduce using rule 40 (statement)
    "void"                 reduce using rule 40 (statement)
    "!"                    reduce using rule 40 (statement)
    "}"                    reduce using rule 40 (statement)
    "("                    reduce using rule 40 (statement)
    ERR_INVALID_ID         reduce using rule 40 (statement)
    ERR_INVALID_CHARCONST  reduce using rule 40 (statement)
    ERR_UNKNOWN_TOKEN      reduce using rule 40 (statement)


State 185

   19 constList: constList . "," constant
   23 columnContent: columnContent "," "(" constList . ")"

    ")"  shift, and go to state 187
    ","  shift, and go to state 315


State 186

   42 iterationStmt: "for" "(" typeSpecifier IDENTIFIER ")" "in" . IDENTIFIER compoundStmt

    IDENTIFIER  shift, and go to state 188


State 187

   23 columnContent: columnContent "," "(" constList ")" .

    ","  reduce using rule 23 (columnContent)
    "|"  reduce using rule 23 (columnContent)


State 188

   42 iterationStmt: "for" "(" typeSpecifier IDENTIFIER ")" "in" IDENTIFIER . compoundStmt

    "{"  shift, and go to state 285

    compoundStmt  go to state 189


State 189

   42 iterationStmt: "for" "(" typeSpecifier IDENTIFIER ")" "in" IDENTIFIER compoundStmt .

    IDENTIFIER             reduce using rule 42 (iterationStmt)
    INTCONST               reduce using rule 42 (iterationStmt)
    FLOATCONST             reduce using rule 42 (iterationStmt)
    BOOLEANCONST           reduce using rule 42 (iterationStmt)
    CHARCONST              reduce using rule 42 (iterationStmt)
    STRINGCONST            reduce using rule 42 (iterationStmt)
    "while"                reduce using rule 42 (iterationStmt)
    "for"                  reduce using rule 42 (iterationStmt)
    "if"                   reduce using rule 42 (iterationStmt)
    "return"               reduce using rule 42 (iterationStmt)
    "read"                 reduce using rule 42 (iterationStmt)
    "write"                reduce using rule 42 (iterationStmt)
    "char"                 reduce using rule 42 (iterationStmt)
    "int"                  reduce using rule 42 (iterationStmt)
    "float"                reduce using rule 42 (iterationStmt)
    "string"               reduce using rule 42 (iterationStmt)
    "table"                reduce using rule 42 (iterationStmt)
    "bool"                 reduce using rule 42 (iterationStmt)
    "void"                 reduce using rule 42 (iterationStmt)
    "!"                    reduce using rule 42 (iterationStmt)
    "}"                    reduce using rule 42 (iterationStmt)
    "("                    reduce using rule 42 (iterationStmt)
    ERR_INVALID_ID         reduce using rule 42 (iterationStmt)
    ERR_INVALID_CHARCONST  reduce using rule 42 (iterationStmt)
    ERR_UNKNOWN_TOKEN      reduce using rule 42 (iterationStmt)


State 190

   97 lexerror: ERR_INVALID_ID .

    "+"   reduce using rule 97 (lexerror)
    "-"   reduce using rule 97 (lexerror)
    "*"   reduce using rule 97 (lexerror)
    "/"   reduce using rule 97 (lexerror)
    "%"   reduce using rule 97 (lexerror)
    "<"   reduce using rule 97 (lexerror)
    "<="  reduce using rule 97 (lexerror)
    ">"   reduce using rule 97 (lexerror)
    ">="  reduce using rule 97 (lexerror)
    "!="  reduce using rule 97 (lexerror)
    "=="  reduce using rule 97 (lexerror)
    "||"  reduce using rule 97 (lexerror)
    "&&"  reduce using rule 97 (lexerror)
    ";"   reduce using rule 97 (lexerror)


State 191

   98 lexerror: ERR_INVALID_CHARCONST .

    "+"   reduce using rule 98 (lexerror)
    "-"   reduce using rule 98 (lexerror)
    "*"   reduce using rule 98 (lexerror)
    "/"   reduce using rule 98 (lexerror)
    "%"   reduce using rule 98 (lexerror)
    "<"   reduce using rule 98 (lexerror)
    "<="  reduce using rule 98 (lexerror)
    ">"   reduce using rule 98 (lexerror)
    ">="  reduce using rule 98 (lexerror)
    "!="  reduce using rule 98 (lexerror)
    "=="  reduce using rule 98 (lexerror)
    "||"  reduce using rule 98 (lexerror)
    "&&"  reduce using rule 98 (lexerror)
    ";"   reduce using rule 98 (lexerror)


State 192

   99 lexerror: ERR_UNKNOWN_TOKEN .

    "+"   reduce using rule 99 (lexerror)
    "-"   reduce using rule 99 (lexerror)
    "*"   reduce using rule 99 (lexerror)
    "/"   reduce using rule 99 (lexerror)
    "%"   reduce using rule 99 (lexerror)
    "<"   reduce using rule 99 (lexerror)
    "<="  reduce using rule 99 (lexerror)
    ">"   reduce using rule 99 (lexerror)
    ">="  reduce using rule 99 (lexerror)
    "!="  reduce using rule 99 (lexerror)
    "=="  reduce using rule 99 (lexerror)
    "||"  reduce using rule 99 (lexerror)
    "&&"  reduce using rule 99 (lexerror)
    ";"   reduce using rule 99 (lexerror)


State 193

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 317
    "("  shift, and go to state 318

    "+"   reduce using rule 77 (mutable)
    "-"   reduce using rule 77 (mutable)
    "*"   reduce using rule 77 (mutable)
    "/"   reduce using rule 77 (mutable)
    "%"   reduce using rule 77 (mutable)
    "<"   reduce using rule 77 (mutable)
    "<="  reduce using rule 77 (mutable)
    ">"   reduce using rule 77 (mutable)
    ">="  reduce using rule 77 (mutable)
    "!="  reduce using rule 77 (mutable)
    "=="  reduce using rule 77 (mutable)
    "||"  reduce using rule 77 (mutable)
    "&&"  reduce using rule 77 (mutable)
    ")"   reduce using rule 77 (mutable)
    "="   reduce using rule 77 (mutable)


State 194

   86 constant: INTCONST .

    "+"   reduce using rule 86 (constant)
    "-"   reduce using rule 86 (constant)
    "*"   reduce using rule 86 (constant)
    "/"   reduce using rule 86 (constant)
    "%"   reduce using rule 86 (constant)
    "<"   reduce using rule 86 (constant)
    "<="  reduce using rule 86 (constant)
    ">"   reduce using rule 86 (constant)
    ">="  reduce using rule 86 (constant)
    "!="  reduce using rule 86 (constant)
    "=="  reduce using rule 86 (constant)
    "||"  reduce using rule 86 (constant)
    "&&"  reduce using rule 86 (constant)
    ")"   reduce using rule 86 (constant)


State 195

   87 constant: FLOATCONST .

    "+"   reduce using rule 87 (constant)
    "-"   reduce using rule 87 (constant)
    "*"   reduce using rule 87 (constant)
    "/"   reduce using rule 87 (constant)
    "%"   reduce using rule 87 (constant)
    "<"   reduce using rule 87 (constant)
    "<="  reduce using rule 87 (constant)
    ">"   reduce using rule 87 (constant)
    ">="  reduce using rule 87 (constant)
    "!="  reduce using rule 87 (constant)
    "=="  reduce using rule 87 (constant)
    "||"  reduce using rule 87 (constant)
    "&&"  reduce using rule 87 (constant)
    ")"   reduce using rule 87 (constant)


State 196

   88 constant: BOOLEANCONST .

    "+"   reduce using rule 88 (constant)
    "-"   reduce using rule 88 (constant)
    "*"   reduce using rule 88 (constant)
    "/"   reduce using rule 88 (constant)
    "%"   reduce using rule 88 (constant)
    "<"   reduce using rule 88 (constant)
    "<="  reduce using rule 88 (constant)
    ">"   reduce using rule 88 (constant)
    ">="  reduce using rule 88 (constant)
    "!="  reduce using rule 88 (constant)
    "=="  reduce using rule 88 (constant)
    "||"  reduce using rule 88 (constant)
    "&&"  reduce using rule 88 (constant)
    ")"   reduce using rule 88 (constant)


State 197

   89 constant: CHARCONST .

    "+"   reduce using rule 89 (constant)
    "-"   reduce using rule 89 (constant)
    "*"   reduce using rule 89 (constant)
    "/"   reduce using rule 89 (constant)
    "%"   reduce using rule 89 (constant)
    "<"   reduce using rule 89 (constant)
    "<="  reduce using rule 89 (constant)
    ">"   reduce using rule 89 (constant)
    ">="  reduce using rule 89 (constant)
    "!="  reduce using rule 89 (constant)
    "=="  reduce using rule 89 (constant)
    "||"  reduce using rule 89 (constant)
    "&&"  reduce using rule 89 (constant)
    ")"   reduce using rule 89 (constant)


State 198

   90 constant: STRINGCONST .

    "+"   reduce using rule 90 (constant)
    "-"   reduce using rule 90 (constant)
    "*"   reduce using rule 90 (constant)
    "/"   reduce using rule 90 (constant)
    "%"   reduce using rule 90 (constant)
    "<"   reduce using rule 90 (constant)
    "<="  reduce using rule 90 (constant)
    ">"   reduce using rule 90 (constant)
    ">="  reduce using rule 90 (constant)
    "!="  reduce using rule 90 (constant)
    "=="  reduce using rule 90 (constant)
    "||"  reduce using rule 90 (constant)
    "&&"  reduce using rule 90 (constant)
    ")"   reduce using rule 90 (constant)


State 199

   71 unaryExp: "!" . unaryExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    unaryExp   go to state 319
    baseValue  go to state 210
    mutable    go to state 267
    functCall  go to state 211
    constant   go to state 212
    lexerror   go to state 213


State 200

   72 baseValue: "(" . expression ")"

    IDENTIFIER             shift, and go to state 193
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    expression     go to state 320
    logicalOrExp   go to state 61
    logicalAndExp  go to state 204
    equalityExp    go to state 205
    relationExp    go to state 206
    sumExp         go to state 207
    multExp        go to state 208
    unaryExp       go to state 209
    baseValue      go to state 210
    mutable        go to state 62
    functCall      go to state 211
    constant       go to state 212
    lexerror       go to state 213


State 201

   97 lexerror: ERR_INVALID_ID .

    "+"   reduce using rule 97 (lexerror)
    "-"   reduce using rule 97 (lexerror)
    "*"   reduce using rule 97 (lexerror)
    "/"   reduce using rule 97 (lexerror)
    "%"   reduce using rule 97 (lexerror)
    "<"   reduce using rule 97 (lexerror)
    "<="  reduce using rule 97 (lexerror)
    ">"   reduce using rule 97 (lexerror)
    ">="  reduce using rule 97 (lexerror)
    "!="  reduce using rule 97 (lexerror)
    "=="  reduce using rule 97 (lexerror)
    "||"  reduce using rule 97 (lexerror)
    "&&"  reduce using rule 97 (lexerror)
    ")"   reduce using rule 97 (lexerror)


State 202

   98 lexerror: ERR_INVALID_CHARCONST .

    "+"   reduce using rule 98 (lexerror)
    "-"   reduce using rule 98 (lexerror)
    "*"   reduce using rule 98 (lexerror)
    "/"   reduce using rule 98 (lexerror)
    "%"   reduce using rule 98 (lexerror)
    "<"   reduce using rule 98 (lexerror)
    "<="  reduce using rule 98 (lexerror)
    ">"   reduce using rule 98 (lexerror)
    ">="  reduce using rule 98 (lexerror)
    "!="  reduce using rule 98 (lexerror)
    "=="  reduce using rule 98 (lexerror)
    "||"  reduce using rule 98 (lexerror)
    "&&"  reduce using rule 98 (lexerror)
    ")"   reduce using rule 98 (lexerror)


State 203

   99 lexerror: ERR_UNKNOWN_TOKEN .

    "+"   reduce using rule 99 (lexerror)
    "-"   reduce using rule 99 (lexerror)
    "*"   reduce using rule 99 (lexerror)
    "/"   reduce using rule 99 (lexerror)
    "%"   reduce using rule 99 (lexerror)
    "<"   reduce using rule 99 (lexerror)
    "<="  reduce using rule 99 (lexerror)
    ">"   reduce using rule 99 (lexerror)
    ">="  reduce using rule 99 (lexerror)
    "!="  reduce using rule 99 (lexerror)
    "=="  reduce using rule 99 (lexerror)
    "||"  reduce using rule 99 (lexerror)
    "&&"  reduce using rule 99 (lexerror)
    ")"   reduce using rule 99 (lexerror)


State 204

   51 logicalOrExp: logicalAndExp .
   54 logicalAndExp: logicalAndExp . "&&" equalityExp

    "&&"  shift, and go to state 321

    "||"  reduce using rule 51 (logicalOrExp)
    ")"   reduce using rule 51 (logicalOrExp)


State 205

   53 logicalAndExp: equalityExp .
   56 equalityExp: equalityExp . "==" relationExp
   57            | equalityExp . "!=" relationExp

    "!="  shift, and go to state 322
    "=="  shift, and go to state 323

    "||"  reduce using rule 53 (logicalAndExp)
    "&&"  reduce using rule 53 (logicalAndExp)
    ")"   reduce using rule 53 (logicalAndExp)


State 206

   55 equalityExp: relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 324
    "<="  shift, and go to state 325
    ">"   shift, and go to state 326
    ">="  shift, and go to state 327

    "!="  reduce using rule 55 (equalityExp)
    "=="  reduce using rule 55 (equalityExp)
    "||"  reduce using rule 55 (equalityExp)
    "&&"  reduce using rule 55 (equalityExp)
    ")"   reduce using rule 55 (equalityExp)


State 207

   58 relationExp: sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 328
    "-"  shift, and go to state 329

    "<"   reduce using rule 58 (relationExp)
    "<="  reduce using rule 58 (relationExp)
    ">"   reduce using rule 58 (relationExp)
    ">="  reduce using rule 58 (relationExp)
    "!="  reduce using rule 58 (relationExp)
    "=="  reduce using rule 58 (relationExp)
    "||"  reduce using rule 58 (relationExp)
    "&&"  reduce using rule 58 (relationExp)
    ")"   reduce using rule 58 (relationExp)


State 208

   63 sumExp: multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 330
    "/"  shift, and go to state 331
    "%"  shift, and go to state 332

    "+"   reduce using rule 63 (sumExp)
    "-"   reduce using rule 63 (sumExp)
    "<"   reduce using rule 63 (sumExp)
    "<="  reduce using rule 63 (sumExp)
    ">"   reduce using rule 63 (sumExp)
    ">="  reduce using rule 63 (sumExp)
    "!="  reduce using rule 63 (sumExp)
    "=="  reduce using rule 63 (sumExp)
    "||"  reduce using rule 63 (sumExp)
    "&&"  reduce using rule 63 (sumExp)
    ")"   reduce using rule 63 (sumExp)


State 209

   66 multExp: unaryExp .

    "+"   reduce using rule 66 (multExp)
    "-"   reduce using rule 66 (multExp)
    "*"   reduce using rule 66 (multExp)
    "/"   reduce using rule 66 (multExp)
    "%"   reduce using rule 66 (multExp)
    "<"   reduce using rule 66 (multExp)
    "<="  reduce using rule 66 (multExp)
    ">"   reduce using rule 66 (multExp)
    ">="  reduce using rule 66 (multExp)
    "!="  reduce using rule 66 (multExp)
    "=="  reduce using rule 66 (multExp)
    "||"  reduce using rule 66 (multExp)
    "&&"  reduce using rule 66 (multExp)
    ")"   reduce using rule 66 (multExp)


State 210

   70 unaryExp: baseValue .

    "+"   reduce using rule 70 (unaryExp)
    "-"   reduce using rule 70 (unaryExp)
    "*"   reduce using rule 70 (unaryExp)
    "/"   reduce using rule 70 (unaryExp)
    "%"   reduce using rule 70 (unaryExp)
    "<"   reduce using rule 70 (unaryExp)
    "<="  reduce using rule 70 (unaryExp)
    ">"   reduce using rule 70 (unaryExp)
    ">="  reduce using rule 70 (unaryExp)
    "!="  reduce using rule 70 (unaryExp)
    "=="  reduce using rule 70 (unaryExp)
    "||"  reduce using rule 70 (unaryExp)
    "&&"  reduce using rule 70 (unaryExp)
    ")"   reduce using rule 70 (unaryExp)


State 211

   75 baseValue: functCall .

    "+"   reduce using rule 75 (baseValue)
    "-"   reduce using rule 75 (baseValue)
    "*"   reduce using rule 75 (baseValue)
    "/"   reduce using rule 75 (baseValue)
    "%"   reduce using rule 75 (baseValue)
    "<"   reduce using rule 75 (baseValue)
    "<="  reduce using rule 75 (baseValue)
    ">"   reduce using rule 75 (baseValue)
    ">="  reduce using rule 75 (baseValue)
    "!="  reduce using rule 75 (baseValue)
    "=="  reduce using rule 75 (baseValue)
    "||"  reduce using rule 75 (baseValue)
    "&&"  reduce using rule 75 (baseValue)
    ")"   reduce using rule 75 (baseValue)


State 212

   74 baseValue: constant .

    "+"   reduce using rule 74 (baseValue)
    "-"   reduce using rule 74 (baseValue)
    "*"   reduce using rule 74 (baseValue)
    "/"   reduce using rule 74 (baseValue)
    "%"   reduce using rule 74 (baseValue)
    "<"   reduce using rule 74 (baseValue)
    "<="  reduce using rule 74 (baseValue)
    ">"   reduce using rule 74 (baseValue)
    ">="  reduce using rule 74 (baseValue)
    "!="  reduce using rule 74 (baseValue)
    "=="  reduce using rule 74 (baseValue)
    "||"  reduce using rule 74 (baseValue)
    "&&"  reduce using rule 74 (baseValue)
    ")"   reduce using rule 74 (baseValue)


State 213

   73 baseValue: lexerror .

    "+"   reduce using rule 73 (baseValue)
    "-"   reduce using rule 73 (baseValue)
    "*"   reduce using rule 73 (baseValue)
    "/"   reduce using rule 73 (baseValue)
    "%"   reduce using rule 73 (baseValue)
    "<"   reduce using rule 73 (baseValue)
    "<="  reduce using rule 73 (baseValue)
    ">"   reduce using rule 73 (baseValue)
    ">="  reduce using rule 73 (baseValue)
    "!="  reduce using rule 73 (baseValue)
    "=="  reduce using rule 73 (baseValue)
    "||"  reduce using rule 73 (baseValue)
    "&&"  reduce using rule 73 (baseValue)
    ")"   reduce using rule 73 (baseValue)


State 214

   86 constant: INTCONST .

    "}"  reduce using rule 86 (constant)
    ","  reduce using rule 86 (constant)


State 215

   87 constant: FLOATCONST .

    "}"  reduce using rule 87 (constant)
    ","  reduce using rule 87 (constant)


State 216

   88 constant: BOOLEANCONST .

    "}"  reduce using rule 88 (constant)
    ","  reduce using rule 88 (constant)


State 217

   89 constant: CHARCONST .

    "}"  reduce using rule 89 (constant)
    ","  reduce using rule 89 (constant)


State 218

   90 constant: STRINGCONST .

    "}"  reduce using rule 90 (constant)
    ","  reduce using rule 90 (constant)


State 219

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 333
    "("  shift, and go to state 334

    "+"   reduce using rule 77 (mutable)
    "-"   reduce using rule 77 (mutable)
    "*"   reduce using rule 77 (mutable)
    "/"   reduce using rule 77 (mutable)
    "%"   reduce using rule 77 (mutable)
    "<"   reduce using rule 77 (mutable)
    "<="  reduce using rule 77 (mutable)
    ">"   reduce using rule 77 (mutable)
    ">="  reduce using rule 77 (mutable)
    "!="  reduce using rule 77 (mutable)
    "=="  reduce using rule 77 (mutable)
    "||"  reduce using rule 77 (mutable)
    "&&"  reduce using rule 77 (mutable)
    "]"   reduce using rule 77 (mutable)
    ":"   reduce using rule 77 (mutable)
    "="   reduce using rule 77 (mutable)


State 220

   86 constant: INTCONST .

    "+"   reduce using rule 86 (constant)
    "-"   reduce using rule 86 (constant)
    "*"   reduce using rule 86 (constant)
    "/"   reduce using rule 86 (constant)
    "%"   reduce using rule 86 (constant)
    "<"   reduce using rule 86 (constant)
    "<="  reduce using rule 86 (constant)
    ">"   reduce using rule 86 (constant)
    ">="  reduce using rule 86 (constant)
    "!="  reduce using rule 86 (constant)
    "=="  reduce using rule 86 (constant)
    "||"  reduce using rule 86 (constant)
    "&&"  reduce using rule 86 (constant)
    "]"   reduce using rule 86 (constant)
    ":"   reduce using rule 86 (constant)


State 221

   87 constant: FLOATCONST .

    "+"   reduce using rule 87 (constant)
    "-"   reduce using rule 87 (constant)
    "*"   reduce using rule 87 (constant)
    "/"   reduce using rule 87 (constant)
    "%"   reduce using rule 87 (constant)
    "<"   reduce using rule 87 (constant)
    "<="  reduce using rule 87 (constant)
    ">"   reduce using rule 87 (constant)
    ">="  reduce using rule 87 (constant)
    "!="  reduce using rule 87 (constant)
    "=="  reduce using rule 87 (constant)
    "||"  reduce using rule 87 (constant)
    "&&"  reduce using rule 87 (constant)
    "]"   reduce using rule 87 (constant)
    ":"   reduce using rule 87 (constant)


State 222

   88 constant: BOOLEANCONST .

    "+"   reduce using rule 88 (constant)
    "-"   reduce using rule 88 (constant)
    "*"   reduce using rule 88 (constant)
    "/"   reduce using rule 88 (constant)
    "%"   reduce using rule 88 (constant)
    "<"   reduce using rule 88 (constant)
    "<="  reduce using rule 88 (constant)
    ">"   reduce using rule 88 (constant)
    ">="  reduce using rule 88 (constant)
    "!="  reduce using rule 88 (constant)
    "=="  reduce using rule 88 (constant)
    "||"  reduce using rule 88 (constant)
    "&&"  reduce using rule 88 (constant)
    "]"   reduce using rule 88 (constant)
    ":"   reduce using rule 88 (constant)


State 223

   89 constant: CHARCONST .

    "+"   reduce using rule 89 (constant)
    "-"   reduce using rule 89 (constant)
    "*"   reduce using rule 89 (constant)
    "/"   reduce using rule 89 (constant)
    "%"   reduce using rule 89 (constant)
    "<"   reduce using rule 89 (constant)
    "<="  reduce using rule 89 (constant)
    ">"   reduce using rule 89 (constant)
    ">="  reduce using rule 89 (constant)
    "!="  reduce using rule 89 (constant)
    "=="  reduce using rule 89 (constant)
    "||"  reduce using rule 89 (constant)
    "&&"  reduce using rule 89 (constant)
    "]"   reduce using rule 89 (constant)
    ":"   reduce using rule 89 (constant)


State 224

   90 constant: STRINGCONST .

    "+"   reduce using rule 90 (constant)
    "-"   reduce using rule 90 (constant)
    "*"   reduce using rule 90 (constant)
    "/"   reduce using rule 90 (constant)
    "%"   reduce using rule 90 (constant)
    "<"   reduce using rule 90 (constant)
    "<="  reduce using rule 90 (constant)
    ">"   reduce using rule 90 (constant)
    ">="  reduce using rule 90 (constant)
    "!="  reduce using rule 90 (constant)
    "=="  reduce using rule 90 (constant)
    "||"  reduce using rule 90 (constant)
    "&&"  reduce using rule 90 (constant)
    "]"   reduce using rule 90 (constant)
    ":"   reduce using rule 90 (constant)


State 225

   71 unaryExp: "!" . unaryExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    unaryExp   go to state 336
    baseValue  go to state 237
    mutable    go to state 337
    functCall  go to state 239
    constant   go to state 240
    lexerror   go to state 241


State 226

   72 baseValue: "(" . expression ")"

    IDENTIFIER             shift, and go to state 193
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    expression     go to state 338
    logicalOrExp   go to state 61
    logicalAndExp  go to state 204
    equalityExp    go to state 205
    relationExp    go to state 206
    sumExp         go to state 207
    multExp        go to state 208
    unaryExp       go to state 209
    baseValue      go to state 210
    mutable        go to state 62
    functCall      go to state 211
    constant       go to state 212
    lexerror       go to state 213


State 227

   97 lexerror: ERR_INVALID_ID .

    "+"   reduce using rule 97 (lexerror)
    "-"   reduce using rule 97 (lexerror)
    "*"   reduce using rule 97 (lexerror)
    "/"   reduce using rule 97 (lexerror)
    "%"   reduce using rule 97 (lexerror)
    "<"   reduce using rule 97 (lexerror)
    "<="  reduce using rule 97 (lexerror)
    ">"   reduce using rule 97 (lexerror)
    ">="  reduce using rule 97 (lexerror)
    "!="  reduce using rule 97 (lexerror)
    "=="  reduce using rule 97 (lexerror)
    "||"  reduce using rule 97 (lexerror)
    "&&"  reduce using rule 97 (lexerror)
    "]"   reduce using rule 97 (lexerror)
    ":"   reduce using rule 97 (lexerror)


State 228

   98 lexerror: ERR_INVALID_CHARCONST .

    "+"   reduce using rule 98 (lexerror)
    "-"   reduce using rule 98 (lexerror)
    "*"   reduce using rule 98 (lexerror)
    "/"   reduce using rule 98 (lexerror)
    "%"   reduce using rule 98 (lexerror)
    "<"   reduce using rule 98 (lexerror)
    "<="  reduce using rule 98 (lexerror)
    ">"   reduce using rule 98 (lexerror)
    ">="  reduce using rule 98 (lexerror)
    "!="  reduce using rule 98 (lexerror)
    "=="  reduce using rule 98 (lexerror)
    "||"  reduce using rule 98 (lexerror)
    "&&"  reduce using rule 98 (lexerror)
    "]"   reduce using rule 98 (lexerror)
    ":"   reduce using rule 98 (lexerror)


State 229

   99 lexerror: ERR_UNKNOWN_TOKEN .

    "+"   reduce using rule 99 (lexerror)
    "-"   reduce using rule 99 (lexerror)
    "*"   reduce using rule 99 (lexerror)
    "/"   reduce using rule 99 (lexerror)
    "%"   reduce using rule 99 (lexerror)
    "<"   reduce using rule 99 (lexerror)
    "<="  reduce using rule 99 (lexerror)
    ">"   reduce using rule 99 (lexerror)
    ">="  reduce using rule 99 (lexerror)
    "!="  reduce using rule 99 (lexerror)
    "=="  reduce using rule 99 (lexerror)
    "||"  reduce using rule 99 (lexerror)
    "&&"  reduce using rule 99 (lexerror)
    "]"   reduce using rule 99 (lexerror)
    ":"   reduce using rule 99 (lexerror)


State 230

   49 expression: logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 339

    "]"  reduce using rule 49 (expression)
    ":"  reduce using rule 49 (expression)


State 231

   51 logicalOrExp: logicalAndExp .
   54 logicalAndExp: logicalAndExp . "&&" equalityExp

    "&&"  shift, and go to state 340

    "||"  reduce using rule 51 (logicalOrExp)
    "]"   reduce using rule 51 (logicalOrExp)
    ":"   reduce using rule 51 (logicalOrExp)


State 232

   53 logicalAndExp: equalityExp .
   56 equalityExp: equalityExp . "==" relationExp
   57            | equalityExp . "!=" relationExp

    "!="  shift, and go to state 341
    "=="  shift, and go to state 342

    "||"  reduce using rule 53 (logicalAndExp)
    "&&"  reduce using rule 53 (logicalAndExp)
    "]"   reduce using rule 53 (logicalAndExp)
    ":"   reduce using rule 53 (logicalAndExp)


State 233

   55 equalityExp: relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 343
    "<="  shift, and go to state 344
    ">"   shift, and go to state 345
    ">="  shift, and go to state 346

    "!="  reduce using rule 55 (equalityExp)
    "=="  reduce using rule 55 (equalityExp)
    "||"  reduce using rule 55 (equalityExp)
    "&&"  reduce using rule 55 (equalityExp)
    "]"   reduce using rule 55 (equalityExp)
    ":"   reduce using rule 55 (equalityExp)


State 234

   58 relationExp: sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 347
    "-"  shift, and go to state 348

    "<"   reduce using rule 58 (relationExp)
    "<="  reduce using rule 58 (relationExp)
    ">"   reduce using rule 58 (relationExp)
    ">="  reduce using rule 58 (relationExp)
    "!="  reduce using rule 58 (relationExp)
    "=="  reduce using rule 58 (relationExp)
    "||"  reduce using rule 58 (relationExp)
    "&&"  reduce using rule 58 (relationExp)
    "]"   reduce using rule 58 (relationExp)
    ":"   reduce using rule 58 (relationExp)


State 235

   63 sumExp: multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 349
    "/"  shift, and go to state 350
    "%"  shift, and go to state 351

    "+"   reduce using rule 63 (sumExp)
    "-"   reduce using rule 63 (sumExp)
    "<"   reduce using rule 63 (sumExp)
    "<="  reduce using rule 63 (sumExp)
    ">"   reduce using rule 63 (sumExp)
    ">="  reduce using rule 63 (sumExp)
    "!="  reduce using rule 63 (sumExp)
    "=="  reduce using rule 63 (sumExp)
    "||"  reduce using rule 63 (sumExp)
    "&&"  reduce using rule 63 (sumExp)
    "]"   reduce using rule 63 (sumExp)
    ":"   reduce using rule 63 (sumExp)


State 236

   66 multExp: unaryExp .

    "+"   reduce using rule 66 (multExp)
    "-"   reduce using rule 66 (multExp)
    "*"   reduce using rule 66 (multExp)
    "/"   reduce using rule 66 (multExp)
    "%"   reduce using rule 66 (multExp)
    "<"   reduce using rule 66 (multExp)
    "<="  reduce using rule 66 (multExp)
    ">"   reduce using rule 66 (multExp)
    ">="  reduce using rule 66 (multExp)
    "!="  reduce using rule 66 (multExp)
    "=="  reduce using rule 66 (multExp)
    "||"  reduce using rule 66 (multExp)
    "&&"  reduce using rule 66 (multExp)
    "]"   reduce using rule 66 (multExp)
    ":"   reduce using rule 66 (multExp)


State 237

   70 unaryExp: baseValue .

    "+"   reduce using rule 70 (unaryExp)
    "-"   reduce using rule 70 (unaryExp)
    "*"   reduce using rule 70 (unaryExp)
    "/"   reduce using rule 70 (unaryExp)
    "%"   reduce using rule 70 (unaryExp)
    "<"   reduce using rule 70 (unaryExp)
    "<="  reduce using rule 70 (unaryExp)
    ">"   reduce using rule 70 (unaryExp)
    ">="  reduce using rule 70 (unaryExp)
    "!="  reduce using rule 70 (unaryExp)
    "=="  reduce using rule 70 (unaryExp)
    "||"  reduce using rule 70 (unaryExp)
    "&&"  reduce using rule 70 (unaryExp)
    "]"   reduce using rule 70 (unaryExp)
    ":"   reduce using rule 70 (unaryExp)


State 238

   50 expression: mutable . "=" logicalOrExp
   76 baseValue: mutable .

    "="  shift, and go to state 352

    "+"   reduce using rule 76 (baseValue)
    "-"   reduce using rule 76 (baseValue)
    "*"   reduce using rule 76 (baseValue)
    "/"   reduce using rule 76 (baseValue)
    "%"   reduce using rule 76 (baseValue)
    "<"   reduce using rule 76 (baseValue)
    "<="  reduce using rule 76 (baseValue)
    ">"   reduce using rule 76 (baseValue)
    ">="  reduce using rule 76 (baseValue)
    "!="  reduce using rule 76 (baseValue)
    "=="  reduce using rule 76 (baseValue)
    "||"  reduce using rule 76 (baseValue)
    "&&"  reduce using rule 76 (baseValue)
    "]"   reduce using rule 76 (baseValue)
    ":"   reduce using rule 76 (baseValue)


State 239

   75 baseValue: functCall .

    "+"   reduce using rule 75 (baseValue)
    "-"   reduce using rule 75 (baseValue)
    "*"   reduce using rule 75 (baseValue)
    "/"   reduce using rule 75 (baseValue)
    "%"   reduce using rule 75 (baseValue)
    "<"   reduce using rule 75 (baseValue)
    "<="  reduce using rule 75 (baseValue)
    ">"   reduce using rule 75 (baseValue)
    ">="  reduce using rule 75 (baseValue)
    "!="  reduce using rule 75 (baseValue)
    "=="  reduce using rule 75 (baseValue)
    "||"  reduce using rule 75 (baseValue)
    "&&"  reduce using rule 75 (baseValue)
    "]"   reduce using rule 75 (baseValue)
    ":"   reduce using rule 75 (baseValue)


State 240

   74 baseValue: constant .

    "+"   reduce using rule 74 (baseValue)
    "-"   reduce using rule 74 (baseValue)
    "*"   reduce using rule 74 (baseValue)
    "/"   reduce using rule 74 (baseValue)
    "%"   reduce using rule 74 (baseValue)
    "<"   reduce using rule 74 (baseValue)
    "<="  reduce using rule 74 (baseValue)
    ">"   reduce using rule 74 (baseValue)
    ">="  reduce using rule 74 (baseValue)
    "!="  reduce using rule 74 (baseValue)
    "=="  reduce using rule 74 (baseValue)
    "||"  reduce using rule 74 (baseValue)
    "&&"  reduce using rule 74 (baseValue)
    "]"   reduce using rule 74 (baseValue)
    ":"   reduce using rule 74 (baseValue)


State 241

   73 baseValue: lexerror .

    "+"   reduce using rule 73 (baseValue)
    "-"   reduce using rule 73 (baseValue)
    "*"   reduce using rule 73 (baseValue)
    "/"   reduce using rule 73 (baseValue)
    "%"   reduce using rule 73 (baseValue)
    "<"   reduce using rule 73 (baseValue)
    "<="  reduce using rule 73 (baseValue)
    ">"   reduce using rule 73 (baseValue)
    ">="  reduce using rule 73 (baseValue)
    "!="  reduce using rule 73 (baseValue)
    "=="  reduce using rule 73 (baseValue)
    "||"  reduce using rule 73 (baseValue)
    "&&"  reduce using rule 73 (baseValue)
    "]"   reduce using rule 73 (baseValue)
    ":"   reduce using rule 73 (baseValue)


State 242

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 353
    "("  shift, and go to state 354

    "+"   reduce using rule 77 (mutable)
    "-"   reduce using rule 77 (mutable)
    "*"   reduce using rule 77 (mutable)
    "/"   reduce using rule 77 (mutable)
    "%"   reduce using rule 77 (mutable)
    "<"   reduce using rule 77 (mutable)
    "<="  reduce using rule 77 (mutable)
    ">"   reduce using rule 77 (mutable)
    ">="  reduce using rule 77 (mutable)
    "!="  reduce using rule 77 (mutable)
    "=="  reduce using rule 77 (mutable)
    "||"  reduce using rule 77 (mutable)
    "&&"  reduce using rule 77 (mutable)
    ")"   reduce using rule 77 (mutable)
    "="   reduce using rule 77 (mutable)
    ","   reduce using rule 77 (mutable)


State 243

   86 constant: INTCONST .

    "+"   reduce using rule 86 (constant)
    "-"   reduce using rule 86 (constant)
    "*"   reduce using rule 86 (constant)
    "/"   reduce using rule 86 (constant)
    "%"   reduce using rule 86 (constant)
    "<"   reduce using rule 86 (constant)
    "<="  reduce using rule 86 (constant)
    ">"   reduce using rule 86 (constant)
    ">="  reduce using rule 86 (constant)
    "!="  reduce using rule 86 (constant)
    "=="  reduce using rule 86 (constant)
    "||"  reduce using rule 86 (constant)
    "&&"  reduce using rule 86 (constant)
    ")"   reduce using rule 86 (constant)
    ","   reduce using rule 86 (constant)


State 244

   87 constant: FLOATCONST .

    "+"   reduce using rule 87 (constant)
    "-"   reduce using rule 87 (constant)
    "*"   reduce using rule 87 (constant)
    "/"   reduce using rule 87 (constant)
    "%"   reduce using rule 87 (constant)
    "<"   reduce using rule 87 (constant)
    "<="  reduce using rule 87 (constant)
    ">"   reduce using rule 87 (constant)
    ">="  reduce using rule 87 (constant)
    "!="  reduce using rule 87 (constant)
    "=="  reduce using rule 87 (constant)
    "||"  reduce using rule 87 (constant)
    "&&"  reduce using rule 87 (constant)
    ")"   reduce using rule 87 (constant)
    ","   reduce using rule 87 (constant)


State 245

   88 constant: BOOLEANCONST .

    "+"   reduce using rule 88 (constant)
    "-"   reduce using rule 88 (constant)
    "*"   reduce using rule 88 (constant)
    "/"   reduce using rule 88 (constant)
    "%"   reduce using rule 88 (constant)
    "<"   reduce using rule 88 (constant)
    "<="  reduce using rule 88 (constant)
    ">"   reduce using rule 88 (constant)
    ">="  reduce using rule 88 (constant)
    "!="  reduce using rule 88 (constant)
    "=="  reduce using rule 88 (constant)
    "||"  reduce using rule 88 (constant)
    "&&"  reduce using rule 88 (constant)
    ")"   reduce using rule 88 (constant)
    ","   reduce using rule 88 (constant)


State 246

   89 constant: CHARCONST .

    "+"   reduce using rule 89 (constant)
    "-"   reduce using rule 89 (constant)
    "*"   reduce using rule 89 (constant)
    "/"   reduce using rule 89 (constant)
    "%"   reduce using rule 89 (constant)
    "<"   reduce using rule 89 (constant)
    "<="  reduce using rule 89 (constant)
    ">"   reduce using rule 89 (constant)
    ">="  reduce using rule 89 (constant)
    "!="  reduce using rule 89 (constant)
    "=="  reduce using rule 89 (constant)
    "||"  reduce using rule 89 (constant)
    "&&"  reduce using rule 89 (constant)
    ")"   reduce using rule 89 (constant)
    ","   reduce using rule 89 (constant)


State 247

   90 constant: STRINGCONST .

    "+"   reduce using rule 90 (constant)
    "-"   reduce using rule 90 (constant)
    "*"   reduce using rule 90 (constant)
    "/"   reduce using rule 90 (constant)
    "%"   reduce using rule 90 (constant)
    "<"   reduce using rule 90 (constant)
    "<="  reduce using rule 90 (constant)
    ">"   reduce using rule 90 (constant)
    ">="  reduce using rule 90 (constant)
    "!="  reduce using rule 90 (constant)
    "=="  reduce using rule 90 (constant)
    "||"  reduce using rule 90 (constant)
    "&&"  reduce using rule 90 (constant)
    ")"   reduce using rule 90 (constant)
    ","   reduce using rule 90 (constant)


State 248

   71 unaryExp: "!" . unaryExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    unaryExp   go to state 356
    baseValue  go to state 260
    mutable    go to state 357
    functCall  go to state 262
    constant   go to state 263
    lexerror   go to state 264


State 249

   72 baseValue: "(" . expression ")"

    IDENTIFIER             shift, and go to state 193
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    expression     go to state 358
    logicalOrExp   go to state 61
    logicalAndExp  go to state 204
    equalityExp    go to state 205
    relationExp    go to state 206
    sumExp         go to state 207
    multExp        go to state 208
    unaryExp       go to state 209
    baseValue      go to state 210
    mutable        go to state 62
    functCall      go to state 211
    constant       go to state 212
    lexerror       go to state 213


State 250

   97 lexerror: ERR_INVALID_ID .

    "+"   reduce using rule 97 (lexerror)
    "-"   reduce using rule 97 (lexerror)
    "*"   reduce using rule 97 (lexerror)
    "/"   reduce using rule 97 (lexerror)
    "%"   reduce using rule 97 (lexerror)
    "<"   reduce using rule 97 (lexerror)
    "<="  reduce using rule 97 (lexerror)
    ">"   reduce using rule 97 (lexerror)
    ">="  reduce using rule 97 (lexerror)
    "!="  reduce using rule 97 (lexerror)
    "=="  reduce using rule 97 (lexerror)
    "||"  reduce using rule 97 (lexerror)
    "&&"  reduce using rule 97 (lexerror)
    ")"   reduce using rule 97 (lexerror)
    ","   reduce using rule 97 (lexerror)


State 251

   98 lexerror: ERR_INVALID_CHARCONST .

    "+"   reduce using rule 98 (lexerror)
    "-"   reduce using rule 98 (lexerror)
    "*"   reduce using rule 98 (lexerror)
    "/"   reduce using rule 98 (lexerror)
    "%"   reduce using rule 98 (lexerror)
    "<"   reduce using rule 98 (lexerror)
    "<="  reduce using rule 98 (lexerror)
    ">"   reduce using rule 98 (lexerror)
    ">="  reduce using rule 98 (lexerror)
    "!="  reduce using rule 98 (lexerror)
    "=="  reduce using rule 98 (lexerror)
    "||"  reduce using rule 98 (lexerror)
    "&&"  reduce using rule 98 (lexerror)
    ")"   reduce using rule 98 (lexerror)
    ","   reduce using rule 98 (lexerror)


State 252

   99 lexerror: ERR_UNKNOWN_TOKEN .

    "+"   reduce using rule 99 (lexerror)
    "-"   reduce using rule 99 (lexerror)
    "*"   reduce using rule 99 (lexerror)
    "/"   reduce using rule 99 (lexerror)
    "%"   reduce using rule 99 (lexerror)
    "<"   reduce using rule 99 (lexerror)
    "<="  reduce using rule 99 (lexerror)
    ">"   reduce using rule 99 (lexerror)
    ">="  reduce using rule 99 (lexerror)
    "!="  reduce using rule 99 (lexerror)
    "=="  reduce using rule 99 (lexerror)
    "||"  reduce using rule 99 (lexerror)
    "&&"  reduce using rule 99 (lexerror)
    ")"   reduce using rule 99 (lexerror)
    ","   reduce using rule 99 (lexerror)


State 253

   49 expression: logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 359

    ")"  reduce using rule 49 (expression)
    ","  reduce using rule 49 (expression)


State 254

   51 logicalOrExp: logicalAndExp .
   54 logicalAndExp: logicalAndExp . "&&" equalityExp

    "&&"  shift, and go to state 360

    "||"  reduce using rule 51 (logicalOrExp)
    ")"   reduce using rule 51 (logicalOrExp)
    ","   reduce using rule 51 (logicalOrExp)


State 255

   53 logicalAndExp: equalityExp .
   56 equalityExp: equalityExp . "==" relationExp
   57            | equalityExp . "!=" relationExp

    "!="  shift, and go to state 361
    "=="  shift, and go to state 362

    "||"  reduce using rule 53 (logicalAndExp)
    "&&"  reduce using rule 53 (logicalAndExp)
    ")"   reduce using rule 53 (logicalAndExp)
    ","   reduce using rule 53 (logicalAndExp)


State 256

   55 equalityExp: relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 363
    "<="  shift, and go to state 364
    ">"   shift, and go to state 365
    ">="  shift, and go to state 366

    "!="  reduce using rule 55 (equalityExp)
    "=="  reduce using rule 55 (equalityExp)
    "||"  reduce using rule 55 (equalityExp)
    "&&"  reduce using rule 55 (equalityExp)
    ")"   reduce using rule 55 (equalityExp)
    ","   reduce using rule 55 (equalityExp)


State 257

   58 relationExp: sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 367
    "-"  shift, and go to state 368

    "<"   reduce using rule 58 (relationExp)
    "<="  reduce using rule 58 (relationExp)
    ">"   reduce using rule 58 (relationExp)
    ">="  reduce using rule 58 (relationExp)
    "!="  reduce using rule 58 (relationExp)
    "=="  reduce using rule 58 (relationExp)
    "||"  reduce using rule 58 (relationExp)
    "&&"  reduce using rule 58 (relationExp)
    ")"   reduce using rule 58 (relationExp)
    ","   reduce using rule 58 (relationExp)


State 258

   63 sumExp: multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 369
    "/"  shift, and go to state 370
    "%"  shift, and go to state 371

    "+"   reduce using rule 63 (sumExp)
    "-"   reduce using rule 63 (sumExp)
    "<"   reduce using rule 63 (sumExp)
    "<="  reduce using rule 63 (sumExp)
    ">"   reduce using rule 63 (sumExp)
    ">="  reduce using rule 63 (sumExp)
    "!="  reduce using rule 63 (sumExp)
    "=="  reduce using rule 63 (sumExp)
    "||"  reduce using rule 63 (sumExp)
    "&&"  reduce using rule 63 (sumExp)
    ")"   reduce using rule 63 (sumExp)
    ","   reduce using rule 63 (sumExp)


State 259

   66 multExp: unaryExp .

    "+"   reduce using rule 66 (multExp)
    "-"   reduce using rule 66 (multExp)
    "*"   reduce using rule 66 (multExp)
    "/"   reduce using rule 66 (multExp)
    "%"   reduce using rule 66 (multExp)
    "<"   reduce using rule 66 (multExp)
    "<="  reduce using rule 66 (multExp)
    ">"   reduce using rule 66 (multExp)
    ">="  reduce using rule 66 (multExp)
    "!="  reduce using rule 66 (multExp)
    "=="  reduce using rule 66 (multExp)
    "||"  reduce using rule 66 (multExp)
    "&&"  reduce using rule 66 (multExp)
    ")"   reduce using rule 66 (multExp)
    ","   reduce using rule 66 (multExp)


State 260

   70 unaryExp: baseValue .

    "+"   reduce using rule 70 (unaryExp)
    "-"   reduce using rule 70 (unaryExp)
    "*"   reduce using rule 70 (unaryExp)
    "/"   reduce using rule 70 (unaryExp)
    "%"   reduce using rule 70 (unaryExp)
    "<"   reduce using rule 70 (unaryExp)
    "<="  reduce using rule 70 (unaryExp)
    ">"   reduce using rule 70 (unaryExp)
    ">="  reduce using rule 70 (unaryExp)
    "!="  reduce using rule 70 (unaryExp)
    "=="  reduce using rule 70 (unaryExp)
    "||"  reduce using rule 70 (unaryExp)
    "&&"  reduce using rule 70 (unaryExp)
    ")"   reduce using rule 70 (unaryExp)
    ","   reduce using rule 70 (unaryExp)


State 261

   50 expression: mutable . "=" logicalOrExp
   76 baseValue: mutable .

    "="  shift, and go to state 372

    "+"   reduce using rule 76 (baseValue)
    "-"   reduce using rule 76 (baseValue)
    "*"   reduce using rule 76 (baseValue)
    "/"   reduce using rule 76 (baseValue)
    "%"   reduce using rule 76 (baseValue)
    "<"   reduce using rule 76 (baseValue)
    "<="  reduce using rule 76 (baseValue)
    ">"   reduce using rule 76 (baseValue)
    ">="  reduce using rule 76 (baseValue)
    "!="  reduce using rule 76 (baseValue)
    "=="  reduce using rule 76 (baseValue)
    "||"  reduce using rule 76 (baseValue)
    "&&"  reduce using rule 76 (baseValue)
    ")"   reduce using rule 76 (baseValue)
    ","   reduce using rule 76 (baseValue)


State 262

   75 baseValue: functCall .

    "+"   reduce using rule 75 (baseValue)
    "-"   reduce using rule 75 (baseValue)
    "*"   reduce using rule 75 (baseValue)
    "/"   reduce using rule 75 (baseValue)
    "%"   reduce using rule 75 (baseValue)
    "<"   reduce using rule 75 (baseValue)
    "<="  reduce using rule 75 (baseValue)
    ">"   reduce using rule 75 (baseValue)
    ">="  reduce using rule 75 (baseValue)
    "!="  reduce using rule 75 (baseValue)
    "=="  reduce using rule 75 (baseValue)
    "||"  reduce using rule 75 (baseValue)
    "&&"  reduce using rule 75 (baseValue)
    ")"   reduce using rule 75 (baseValue)
    ","   reduce using rule 75 (baseValue)


State 263

   74 baseValue: constant .

    "+"   reduce using rule 74 (baseValue)
    "-"   reduce using rule 74 (baseValue)
    "*"   reduce using rule 74 (baseValue)
    "/"   reduce using rule 74 (baseValue)
    "%"   reduce using rule 74 (baseValue)
    "<"   reduce using rule 74 (baseValue)
    "<="  reduce using rule 74 (baseValue)
    ">"   reduce using rule 74 (baseValue)
    ">="  reduce using rule 74 (baseValue)
    "!="  reduce using rule 74 (baseValue)
    "=="  reduce using rule 74 (baseValue)
    "||"  reduce using rule 74 (baseValue)
    "&&"  reduce using rule 74 (baseValue)
    ")"   reduce using rule 74 (baseValue)
    ","   reduce using rule 74 (baseValue)


State 264

   73 baseValue: lexerror .

    "+"   reduce using rule 73 (baseValue)
    "-"   reduce using rule 73 (baseValue)
    "*"   reduce using rule 73 (baseValue)
    "/"   reduce using rule 73 (baseValue)
    "%"   reduce using rule 73 (baseValue)
    "<"   reduce using rule 73 (baseValue)
    "<="  reduce using rule 73 (baseValue)
    ">"   reduce using rule 73 (baseValue)
    ">="  reduce using rule 73 (baseValue)
    "!="  reduce using rule 73 (baseValue)
    "=="  reduce using rule 73 (baseValue)
    "||"  reduce using rule 73 (baseValue)
    "&&"  reduce using rule 73 (baseValue)
    ")"   reduce using rule 73 (baseValue)
    ","   reduce using rule 73 (baseValue)


State 265

   52 logicalOrExp: logicalOrExp "||" . logicalAndExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    logicalAndExp  go to state 373
    equalityExp    go to state 205
    relationExp    go to state 206
    sumExp         go to state 207
    multExp        go to state 208
    unaryExp       go to state 209
    baseValue      go to state 210
    mutable        go to state 267
    functCall      go to state 211
    constant       go to state 212
    lexerror       go to state 213


State 266

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 374
    "("  shift, and go to state 318

    "+"   reduce using rule 77 (mutable)
    "-"   reduce using rule 77 (mutable)
    "*"   reduce using rule 77 (mutable)
    "/"   reduce using rule 77 (mutable)
    "%"   reduce using rule 77 (mutable)
    "<"   reduce using rule 77 (mutable)
    "<="  reduce using rule 77 (mutable)
    ">"   reduce using rule 77 (mutable)
    ">="  reduce using rule 77 (mutable)
    "!="  reduce using rule 77 (mutable)
    "=="  reduce using rule 77 (mutable)
    "||"  reduce using rule 77 (mutable)
    "&&"  reduce using rule 77 (mutable)
    ")"   reduce using rule 77 (mutable)


State 267

   76 baseValue: mutable .

    "+"   reduce using rule 76 (baseValue)
    "-"   reduce using rule 76 (baseValue)
    "*"   reduce using rule 76 (baseValue)
    "/"   reduce using rule 76 (baseValue)
    "%"   reduce using rule 76 (baseValue)
    "<"   reduce using rule 76 (baseValue)
    "<="  reduce using rule 76 (baseValue)
    ">"   reduce using rule 76 (baseValue)
    ">="  reduce using rule 76 (baseValue)
    "!="  reduce using rule 76 (baseValue)
    "=="  reduce using rule 76 (baseValue)
    "||"  reduce using rule 76 (baseValue)
    "&&"  reduce using rule 76 (baseValue)
    ")"   reduce using rule 76 (baseValue)


State 268

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 375
    "("  shift, and go to state 58

    "+"   reduce using rule 77 (mutable)
    "-"   reduce using rule 77 (mutable)
    "*"   reduce using rule 77 (mutable)
    "/"   reduce using rule 77 (mutable)
    "%"   reduce using rule 77 (mutable)
    "<"   reduce using rule 77 (mutable)
    "<="  reduce using rule 77 (mutable)
    ">"   reduce using rule 77 (mutable)
    ">="  reduce using rule 77 (mutable)
    "!="  reduce using rule 77 (mutable)
    "=="  reduce using rule 77 (mutable)
    "||"  reduce using rule 77 (mutable)
    "&&"  reduce using rule 77 (mutable)
    ";"   reduce using rule 77 (mutable)
    "="   reduce using rule 77 (mutable)


State 269

   49 expression: logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 63

    ";"  reduce using rule 49 (expression)


State 270

   50 expression: mutable . "=" logicalOrExp
   76 baseValue: mutable .

    "="  shift, and go to state 376

    "+"   reduce using rule 76 (baseValue)
    "-"   reduce using rule 76 (baseValue)
    "*"   reduce using rule 76 (baseValue)
    "/"   reduce using rule 76 (baseValue)
    "%"   reduce using rule 76 (baseValue)
    "<"   reduce using rule 76 (baseValue)
    "<="  reduce using rule 76 (baseValue)
    ">"   reduce using rule 76 (baseValue)
    ">="  reduce using rule 76 (baseValue)
    "!="  reduce using rule 76 (baseValue)
    "=="  reduce using rule 76 (baseValue)
    "||"  reduce using rule 76 (baseValue)
    "&&"  reduce using rule 76 (baseValue)
    ";"   reduce using rule 76 (baseValue)


State 271

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 377
    "("  shift, and go to state 378

    ")"  reduce using rule 77 (mutable)


State 272

   86 constant: INTCONST .

    ")"  reduce using rule 86 (constant)


State 273

   87 constant: FLOATCONST .

    ")"  reduce using rule 87 (constant)


State 274

   88 constant: BOOLEANCONST .

    ")"  reduce using rule 88 (constant)


State 275

   89 constant: CHARCONST .

    ")"  reduce using rule 89 (constant)


State 276

   90 constant: STRINGCONST .

    ")"  reduce using rule 90 (constant)


State 277

   72 baseValue: "(" . expression ")"

    IDENTIFIER             shift, and go to state 193
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    expression     go to state 379
    logicalOrExp   go to state 61
    logicalAndExp  go to state 204
    equalityExp    go to state 205
    relationExp    go to state 206
    sumExp         go to state 207
    multExp        go to state 208
    unaryExp       go to state 209
    baseValue      go to state 210
    mutable        go to state 62
    functCall      go to state 211
    constant       go to state 212
    lexerror       go to state 213


State 278

   97 lexerror: ERR_INVALID_ID .

    ")"  reduce using rule 97 (lexerror)


State 279

   98 lexerror: ERR_INVALID_CHARCONST .

    ")"  reduce using rule 98 (lexerror)


State 280

   99 lexerror: ERR_UNKNOWN_TOKEN .

    ")"  reduce using rule 99 (lexerror)


State 281

   76 baseValue: mutable .

    ")"  reduce using rule 76 (baseValue)


State 282

   75 baseValue: functCall .

    ")"  reduce using rule 75 (baseValue)


State 283

   74 baseValue: constant .

    ")"  reduce using rule 74 (baseValue)


State 284

   73 baseValue: lexerror .

    ")"  reduce using rule 73 (baseValue)


State 285

   30 compoundStmt: "{" . "}"
   31             | "{" . statementList "}"

    IDENTIFIER             shift, and go to state 268
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "while"                shift, and go to state 122
    "for"                  shift, and go to state 123
    "if"                   shift, and go to state 124
    "return"               shift, and go to state 125
    "read"                 shift, and go to state 126
    "write"                shift, and go to state 127
    "char"                 shift, and go to state 1
    "int"                  shift, and go to state 2
    "float"                shift, and go to state 3
    "string"               shift, and go to state 4
    "table"                shift, and go to state 5
    "bool"                 shift, and go to state 6
    "void"                 shift, and go to state 7
    "!"                    shift, and go to state 36
    "}"                    shift, and go to state 380
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    varDeclaration        go to state 129
    varSimpleDeclaration  go to state 15
    arrayDeclaration      go to state 16
    tableDeclaration      go to state 17
    statementList         go to state 381
    statement             go to state 131
    iterationStmt         go to state 132
    conditionalStmt       go to state 133
    ifStmt                go to state 134
    returnStmt            go to state 135
    expression            go to state 136
    logicalOrExp          go to state 269
    logicalAndExp         go to state 39
    equalityExp           go to state 40
    relationExp           go to state 41
    sumExp                go to state 42
    multExp               go to state 43
    unaryExp              go to state 44
    baseValue             go to state 45
    mutable               go to state 270
    functCall             go to state 47
    constant              go to state 48
    typeSpecifier         go to state 137
    lexerror              go to state 49


State 286

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 382
    "("  shift, and go to state 383

    "+"   reduce using rule 77 (mutable)
    "-"   reduce using rule 77 (mutable)
    "*"   reduce using rule 77 (mutable)
    "/"   reduce using rule 77 (mutable)
    "%"   reduce using rule 77 (mutable)
    "<"   reduce using rule 77 (mutable)
    "<="  reduce using rule 77 (mutable)
    ">"   reduce using rule 77 (mutable)
    ">="  reduce using rule 77 (mutable)
    "!="  reduce using rule 77 (mutable)
    "=="  reduce using rule 77 (mutable)
    "||"  reduce using rule 77 (mutable)
    "&&"  reduce using rule 77 (mutable)
    "]"   reduce using rule 77 (mutable)
    "="   reduce using rule 77 (mutable)


State 287

   86 constant: INTCONST .

    "+"   reduce using rule 86 (constant)
    "-"   reduce using rule 86 (constant)
    "*"   reduce using rule 86 (constant)
    "/"   reduce using rule 86 (constant)
    "%"   reduce using rule 86 (constant)
    "<"   reduce using rule 86 (constant)
    "<="  reduce using rule 86 (constant)
    ">"   reduce using rule 86 (constant)
    ">="  reduce using rule 86 (constant)
    "!="  reduce using rule 86 (constant)
    "=="  reduce using rule 86 (constant)
    "||"  reduce using rule 86 (constant)
    "&&"  reduce using rule 86 (constant)
    "]"   reduce using rule 86 (constant)


State 288

   87 constant: FLOATCONST .

    "+"   reduce using rule 87 (constant)
    "-"   reduce using rule 87 (constant)
    "*"   reduce using rule 87 (constant)
    "/"   reduce using rule 87 (constant)
    "%"   reduce using rule 87 (constant)
    "<"   reduce using rule 87 (constant)
    "<="  reduce using rule 87 (constant)
    ">"   reduce using rule 87 (constant)
    ">="  reduce using rule 87 (constant)
    "!="  reduce using rule 87 (constant)
    "=="  reduce using rule 87 (constant)
    "||"  reduce using rule 87 (constant)
    "&&"  reduce using rule 87 (constant)
    "]"   reduce using rule 87 (constant)


State 289

   88 constant: BOOLEANCONST .

    "+"   reduce using rule 88 (constant)
    "-"   reduce using rule 88 (constant)
    "*"   reduce using rule 88 (constant)
    "/"   reduce using rule 88 (constant)
    "%"   reduce using rule 88 (constant)
    "<"   reduce using rule 88 (constant)
    "<="  reduce using rule 88 (constant)
    ">"   reduce using rule 88 (constant)
    ">="  reduce using rule 88 (constant)
    "!="  reduce using rule 88 (constant)
    "=="  reduce using rule 88 (constant)
    "||"  reduce using rule 88 (constant)
    "&&"  reduce using rule 88 (constant)
    "]"   reduce using rule 88 (constant)


State 290

   89 constant: CHARCONST .

    "+"   reduce using rule 89 (constant)
    "-"   reduce using rule 89 (constant)
    "*"   reduce using rule 89 (constant)
    "/"   reduce using rule 89 (constant)
    "%"   reduce using rule 89 (constant)
    "<"   reduce using rule 89 (constant)
    "<="  reduce using rule 89 (constant)
    ">"   reduce using rule 89 (constant)
    ">="  reduce using rule 89 (constant)
    "!="  reduce using rule 89 (constant)
    "=="  reduce using rule 89 (constant)
    "||"  reduce using rule 89 (constant)
    "&&"  reduce using rule 89 (constant)
    "]"   reduce using rule 89 (constant)


State 291

   90 constant: STRINGCONST .

    "+"   reduce using rule 90 (constant)
    "-"   reduce using rule 90 (constant)
    "*"   reduce using rule 90 (constant)
    "/"   reduce using rule 90 (constant)
    "%"   reduce using rule 90 (constant)
    "<"   reduce using rule 90 (constant)
    "<="  reduce using rule 90 (constant)
    ">"   reduce using rule 90 (constant)
    ">="  reduce using rule 90 (constant)
    "!="  reduce using rule 90 (constant)
    "=="  reduce using rule 90 (constant)
    "||"  reduce using rule 90 (constant)
    "&&"  reduce using rule 90 (constant)
    "]"   reduce using rule 90 (constant)


State 292

   71 unaryExp: "!" . unaryExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    unaryExp   go to state 385
    baseValue  go to state 304
    mutable    go to state 386
    functCall  go to state 306
    constant   go to state 307
    lexerror   go to state 308


State 293

   72 baseValue: "(" . expression ")"

    IDENTIFIER             shift, and go to state 193
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    expression     go to state 387
    logicalOrExp   go to state 61
    logicalAndExp  go to state 204
    equalityExp    go to state 205
    relationExp    go to state 206
    sumExp         go to state 207
    multExp        go to state 208
    unaryExp       go to state 209
    baseValue      go to state 210
    mutable        go to state 62
    functCall      go to state 211
    constant       go to state 212
    lexerror       go to state 213


State 294

   97 lexerror: ERR_INVALID_ID .

    "+"   reduce using rule 97 (lexerror)
    "-"   reduce using rule 97 (lexerror)
    "*"   reduce using rule 97 (lexerror)
    "/"   reduce using rule 97 (lexerror)
    "%"   reduce using rule 97 (lexerror)
    "<"   reduce using rule 97 (lexerror)
    "<="  reduce using rule 97 (lexerror)
    ">"   reduce using rule 97 (lexerror)
    ">="  reduce using rule 97 (lexerror)
    "!="  reduce using rule 97 (lexerror)
    "=="  reduce using rule 97 (lexerror)
    "||"  reduce using rule 97 (lexerror)
    "&&"  reduce using rule 97 (lexerror)
    "]"   reduce using rule 97 (lexerror)


State 295

   98 lexerror: ERR_INVALID_CHARCONST .

    "+"   reduce using rule 98 (lexerror)
    "-"   reduce using rule 98 (lexerror)
    "*"   reduce using rule 98 (lexerror)
    "/"   reduce using rule 98 (lexerror)
    "%"   reduce using rule 98 (lexerror)
    "<"   reduce using rule 98 (lexerror)
    "<="  reduce using rule 98 (lexerror)
    ">"   reduce using rule 98 (lexerror)
    ">="  reduce using rule 98 (lexerror)
    "!="  reduce using rule 98 (lexerror)
    "=="  reduce using rule 98 (lexerror)
    "||"  reduce using rule 98 (lexerror)
    "&&"  reduce using rule 98 (lexerror)
    "]"   reduce using rule 98 (lexerror)


State 296

   99 lexerror: ERR_UNKNOWN_TOKEN .

    "+"   reduce using rule 99 (lexerror)
    "-"   reduce using rule 99 (lexerror)
    "*"   reduce using rule 99 (lexerror)
    "/"   reduce using rule 99 (lexerror)
    "%"   reduce using rule 99 (lexerror)
    "<"   reduce using rule 99 (lexerror)
    "<="  reduce using rule 99 (lexerror)
    ">"   reduce using rule 99 (lexerror)
    ">="  reduce using rule 99 (lexerror)
    "!="  reduce using rule 99 (lexerror)
    "=="  reduce using rule 99 (lexerror)
    "||"  reduce using rule 99 (lexerror)
    "&&"  reduce using rule 99 (lexerror)
    "]"   reduce using rule 99 (lexerror)


State 297

   49 expression: logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 388

    "]"  reduce using rule 49 (expression)


State 298

   51 logicalOrExp: logicalAndExp .
   54 logicalAndExp: logicalAndExp . "&&" equalityExp

    "&&"  shift, and go to state 389

    "||"  reduce using rule 51 (logicalOrExp)
    "]"   reduce using rule 51 (logicalOrExp)


State 299

   53 logicalAndExp: equalityExp .
   56 equalityExp: equalityExp . "==" relationExp
   57            | equalityExp . "!=" relationExp

    "!="  shift, and go to state 390
    "=="  shift, and go to state 391

    "||"  reduce using rule 53 (logicalAndExp)
    "&&"  reduce using rule 53 (logicalAndExp)
    "]"   reduce using rule 53 (logicalAndExp)


State 300

   55 equalityExp: relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 392
    "<="  shift, and go to state 393
    ">"   shift, and go to state 394
    ">="  shift, and go to state 395

    "!="  reduce using rule 55 (equalityExp)
    "=="  reduce using rule 55 (equalityExp)
    "||"  reduce using rule 55 (equalityExp)
    "&&"  reduce using rule 55 (equalityExp)
    "]"   reduce using rule 55 (equalityExp)


State 301

   58 relationExp: sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 396
    "-"  shift, and go to state 397

    "<"   reduce using rule 58 (relationExp)
    "<="  reduce using rule 58 (relationExp)
    ">"   reduce using rule 58 (relationExp)
    ">="  reduce using rule 58 (relationExp)
    "!="  reduce using rule 58 (relationExp)
    "=="  reduce using rule 58 (relationExp)
    "||"  reduce using rule 58 (relationExp)
    "&&"  reduce using rule 58 (relationExp)
    "]"   reduce using rule 58 (relationExp)


State 302

   63 sumExp: multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 398
    "/"  shift, and go to state 399
    "%"  shift, and go to state 400

    "+"   reduce using rule 63 (sumExp)
    "-"   reduce using rule 63 (sumExp)
    "<"   reduce using rule 63 (sumExp)
    "<="  reduce using rule 63 (sumExp)
    ">"   reduce using rule 63 (sumExp)
    ">="  reduce using rule 63 (sumExp)
    "!="  reduce using rule 63 (sumExp)
    "=="  reduce using rule 63 (sumExp)
    "||"  reduce using rule 63 (sumExp)
    "&&"  reduce using rule 63 (sumExp)
    "]"   reduce using rule 63 (sumExp)


State 303

   66 multExp: unaryExp .

    "+"   reduce using rule 66 (multExp)
    "-"   reduce using rule 66 (multExp)
    "*"   reduce using rule 66 (multExp)
    "/"   reduce using rule 66 (multExp)
    "%"   reduce using rule 66 (multExp)
    "<"   reduce using rule 66 (multExp)
    "<="  reduce using rule 66 (multExp)
    ">"   reduce using rule 66 (multExp)
    ">="  reduce using rule 66 (multExp)
    "!="  reduce using rule 66 (multExp)
    "=="  reduce using rule 66 (multExp)
    "||"  reduce using rule 66 (multExp)
    "&&"  reduce using rule 66 (multExp)
    "]"   reduce using rule 66 (multExp)


State 304

   70 unaryExp: baseValue .

    "+"   reduce using rule 70 (unaryExp)
    "-"   reduce using rule 70 (unaryExp)
    "*"   reduce using rule 70 (unaryExp)
    "/"   reduce using rule 70 (unaryExp)
    "%"   reduce using rule 70 (unaryExp)
    "<"   reduce using rule 70 (unaryExp)
    "<="  reduce using rule 70 (unaryExp)
    ">"   reduce using rule 70 (unaryExp)
    ">="  reduce using rule 70 (unaryExp)
    "!="  reduce using rule 70 (unaryExp)
    "=="  reduce using rule 70 (unaryExp)
    "||"  reduce using rule 70 (unaryExp)
    "&&"  reduce using rule 70 (unaryExp)
    "]"   reduce using rule 70 (unaryExp)


State 305

   50 expression: mutable . "=" logicalOrExp
   76 baseValue: mutable .

    "="  shift, and go to state 401

    "+"   reduce using rule 76 (baseValue)
    "-"   reduce using rule 76 (baseValue)
    "*"   reduce using rule 76 (baseValue)
    "/"   reduce using rule 76 (baseValue)
    "%"   reduce using rule 76 (baseValue)
    "<"   reduce using rule 76 (baseValue)
    "<="  reduce using rule 76 (baseValue)
    ">"   reduce using rule 76 (baseValue)
    ">="  reduce using rule 76 (baseValue)
    "!="  reduce using rule 76 (baseValue)
    "=="  reduce using rule 76 (baseValue)
    "||"  reduce using rule 76 (baseValue)
    "&&"  reduce using rule 76 (baseValue)
    "]"   reduce using rule 76 (baseValue)


State 306

   75 baseValue: functCall .

    "+"   reduce using rule 75 (baseValue)
    "-"   reduce using rule 75 (baseValue)
    "*"   reduce using rule 75 (baseValue)
    "/"   reduce using rule 75 (baseValue)
    "%"   reduce using rule 75 (baseValue)
    "<"   reduce using rule 75 (baseValue)
    "<="  reduce using rule 75 (baseValue)
    ">"   reduce using rule 75 (baseValue)
    ">="  reduce using rule 75 (baseValue)
    "!="  reduce using rule 75 (baseValue)
    "=="  reduce using rule 75 (baseValue)
    "||"  reduce using rule 75 (baseValue)
    "&&"  reduce using rule 75 (baseValue)
    "]"   reduce using rule 75 (baseValue)


State 307

   74 baseValue: constant .

    "+"   reduce using rule 74 (baseValue)
    "-"   reduce using rule 74 (baseValue)
    "*"   reduce using rule 74 (baseValue)
    "/"   reduce using rule 74 (baseValue)
    "%"   reduce using rule 74 (baseValue)
    "<"   reduce using rule 74 (baseValue)
    "<="  reduce using rule 74 (baseValue)
    ">"   reduce using rule 74 (baseValue)
    ">="  reduce using rule 74 (baseValue)
    "!="  reduce using rule 74 (baseValue)
    "=="  reduce using rule 74 (baseValue)
    "||"  reduce using rule 74 (baseValue)
    "&&"  reduce using rule 74 (baseValue)
    "]"   reduce using rule 74 (baseValue)


State 308

   73 baseValue: lexerror .

    "+"   reduce using rule 73 (baseValue)
    "-"   reduce using rule 73 (baseValue)
    "*"   reduce using rule 73 (baseValue)
    "/"   reduce using rule 73 (baseValue)
    "%"   reduce using rule 73 (baseValue)
    "<"   reduce using rule 73 (baseValue)
    "<="  reduce using rule 73 (baseValue)
    ">"   reduce using rule 73 (baseValue)
    ">="  reduce using rule 73 (baseValue)
    "!="  reduce using rule 73 (baseValue)
    "=="  reduce using rule 73 (baseValue)
    "||"  reduce using rule 73 (baseValue)
    "&&"  reduce using rule 73 (baseValue)
    "]"   reduce using rule 73 (baseValue)


State 309

   86 constant: INTCONST .

    ")"  reduce using rule 86 (constant)
    ","  reduce using rule 86 (constant)


State 310

   87 constant: FLOATCONST .

    ")"  reduce using rule 87 (constant)
    ","  reduce using rule 87 (constant)


State 311

   88 constant: BOOLEANCONST .

    ")"  reduce using rule 88 (constant)
    ","  reduce using rule 88 (constant)


State 312

   89 constant: CHARCONST .

    ")"  reduce using rule 89 (constant)
    ","  reduce using rule 89 (constant)


State 313

   90 constant: STRINGCONST .

    ")"  reduce using rule 90 (constant)
    ","  reduce using rule 90 (constant)


State 314

   18 constList: constant .

    ")"  reduce using rule 18 (constList)
    ","  reduce using rule 18 (constList)


State 315

   19 constList: constList "," . constant

    INTCONST      shift, and go to state 309
    FLOATCONST    shift, and go to state 310
    BOOLEANCONST  shift, and go to state 311
    CHARCONST     shift, and go to state 312
    STRINGCONST   shift, and go to state 313

    constant  go to state 402


State 316

   30 compoundStmt: "{" . "}"
   31             | "{" . statementList "}"

    IDENTIFIER             shift, and go to state 268
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "while"                shift, and go to state 122
    "for"                  shift, and go to state 123
    "if"                   shift, and go to state 124
    "return"               shift, and go to state 125
    "read"                 shift, and go to state 126
    "write"                shift, and go to state 127
    "char"                 shift, and go to state 1
    "int"                  shift, and go to state 2
    "float"                shift, and go to state 3
    "string"               shift, and go to state 4
    "table"                shift, and go to state 5
    "bool"                 shift, and go to state 6
    "void"                 shift, and go to state 7
    "!"                    shift, and go to state 36
    "}"                    shift, and go to state 403
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    varDeclaration        go to state 129
    varSimpleDeclaration  go to state 15
    arrayDeclaration      go to state 16
    tableDeclaration      go to state 17
    statementList         go to state 404
    statement             go to state 131
    iterationStmt         go to state 132
    conditionalStmt       go to state 133
    ifStmt                go to state 134
    returnStmt            go to state 135
    expression            go to state 136
    logicalOrExp          go to state 269
    logicalAndExp         go to state 39
    equalityExp           go to state 40
    relationExp           go to state 41
    sumExp                go to state 42
    multExp               go to state 43
    unaryExp              go to state 44
    baseValue             go to state 45
    mutable               go to state 270
    functCall             go to state 47
    constant              go to state 48
    typeSpecifier         go to state 137
    lexerror              go to state 49


State 317

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 405
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 318

   81 functCall: IDENTIFIER "(" . args ")"

    IDENTIFIER             shift, and go to state 242
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    ")"  reduce using rule 83 (args)

    expression     go to state 87
    logicalOrExp   go to state 253
    logicalAndExp  go to state 254
    equalityExp    go to state 255
    relationExp    go to state 256
    sumExp         go to state 257
    multExp        go to state 258
    unaryExp       go to state 259
    baseValue      go to state 260
    mutable        go to state 261
    functCall      go to state 262
    args           go to state 406
    argList        go to state 89
    constant       go to state 263
    lexerror       go to state 264


State 319

   71 unaryExp: "!" unaryExp .

    "+"   reduce using rule 71 (unaryExp)
    "-"   reduce using rule 71 (unaryExp)
    "*"   reduce using rule 71 (unaryExp)
    "/"   reduce using rule 71 (unaryExp)
    "%"   reduce using rule 71 (unaryExp)
    "<"   reduce using rule 71 (unaryExp)
    "<="  reduce using rule 71 (unaryExp)
    ">"   reduce using rule 71 (unaryExp)
    ">="  reduce using rule 71 (unaryExp)
    "!="  reduce using rule 71 (unaryExp)
    "=="  reduce using rule 71 (unaryExp)
    "||"  reduce using rule 71 (unaryExp)
    "&&"  reduce using rule 71 (unaryExp)
    ")"   reduce using rule 71 (unaryExp)


State 320

   72 baseValue: "(" expression . ")"

    ")"  shift, and go to state 407


State 321

   54 logicalAndExp: logicalAndExp "&&" . equalityExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    equalityExp  go to state 408
    relationExp  go to state 206
    sumExp       go to state 207
    multExp      go to state 208
    unaryExp     go to state 209
    baseValue    go to state 210
    mutable      go to state 267
    functCall    go to state 211
    constant     go to state 212
    lexerror     go to state 213


State 322

   57 equalityExp: equalityExp "!=" . relationExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    relationExp  go to state 409
    sumExp       go to state 207
    multExp      go to state 208
    unaryExp     go to state 209
    baseValue    go to state 210
    mutable      go to state 267
    functCall    go to state 211
    constant     go to state 212
    lexerror     go to state 213


State 323

   56 equalityExp: equalityExp "==" . relationExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    relationExp  go to state 410
    sumExp       go to state 207
    multExp      go to state 208
    unaryExp     go to state 209
    baseValue    go to state 210
    mutable      go to state 267
    functCall    go to state 211
    constant     go to state 212
    lexerror     go to state 213


State 324

   60 relationExp: relationExp "<" . sumExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    sumExp     go to state 411
    multExp    go to state 208
    unaryExp   go to state 209
    baseValue  go to state 210
    mutable    go to state 267
    functCall  go to state 211
    constant   go to state 212
    lexerror   go to state 213


State 325

   62 relationExp: relationExp "<=" . sumExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    sumExp     go to state 412
    multExp    go to state 208
    unaryExp   go to state 209
    baseValue  go to state 210
    mutable    go to state 267
    functCall  go to state 211
    constant   go to state 212
    lexerror   go to state 213


State 326

   59 relationExp: relationExp ">" . sumExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    sumExp     go to state 413
    multExp    go to state 208
    unaryExp   go to state 209
    baseValue  go to state 210
    mutable    go to state 267
    functCall  go to state 211
    constant   go to state 212
    lexerror   go to state 213


State 327

   61 relationExp: relationExp ">=" . sumExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    sumExp     go to state 414
    multExp    go to state 208
    unaryExp   go to state 209
    baseValue  go to state 210
    mutable    go to state 267
    functCall  go to state 211
    constant   go to state 212
    lexerror   go to state 213


State 328

   64 sumExp: sumExp "+" . multExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    multExp    go to state 415
    unaryExp   go to state 209
    baseValue  go to state 210
    mutable    go to state 267
    functCall  go to state 211
    constant   go to state 212
    lexerror   go to state 213


State 329

   65 sumExp: sumExp "-" . multExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    multExp    go to state 416
    unaryExp   go to state 209
    baseValue  go to state 210
    mutable    go to state 267
    functCall  go to state 211
    constant   go to state 212
    lexerror   go to state 213


State 330

   67 multExp: multExp "*" . unaryExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    unaryExp   go to state 417
    baseValue  go to state 210
    mutable    go to state 267
    functCall  go to state 211
    constant   go to state 212
    lexerror   go to state 213


State 331

   68 multExp: multExp "/" . unaryExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    unaryExp   go to state 418
    baseValue  go to state 210
    mutable    go to state 267
    functCall  go to state 211
    constant   go to state 212
    lexerror   go to state 213


State 332

   69 multExp: multExp "%" . unaryExp

    IDENTIFIER             shift, and go to state 266
    INTCONST               shift, and go to state 194
    FLOATCONST             shift, and go to state 195
    BOOLEANCONST           shift, and go to state 196
    CHARCONST              shift, and go to state 197
    STRINGCONST            shift, and go to state 198
    "!"                    shift, and go to state 199
    "("                    shift, and go to state 200
    ERR_INVALID_ID         shift, and go to state 201
    ERR_INVALID_CHARCONST  shift, and go to state 202
    ERR_UNKNOWN_TOKEN      shift, and go to state 203

    unaryExp   go to state 419
    baseValue  go to state 210
    mutable    go to state 267
    functCall  go to state 211
    constant   go to state 212
    lexerror   go to state 213


State 333

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 420
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 334

   81 functCall: IDENTIFIER "(" . args ")"

    IDENTIFIER             shift, and go to state 242
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    ")"  reduce using rule 83 (args)

    expression     go to state 87
    logicalOrExp   go to state 253
    logicalAndExp  go to state 254
    equalityExp    go to state 255
    relationExp    go to state 256
    sumExp         go to state 257
    multExp        go to state 258
    unaryExp       go to state 259
    baseValue      go to state 260
    mutable        go to state 261
    functCall      go to state 262
    args           go to state 421
    argList        go to state 89
    constant       go to state 263
    lexerror       go to state 264


State 335

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 422
    "("  shift, and go to state 334

    "+"   reduce using rule 77 (mutable)
    "-"   reduce using rule 77 (mutable)
    "*"   reduce using rule 77 (mutable)
    "/"   reduce using rule 77 (mutable)
    "%"   reduce using rule 77 (mutable)
    "<"   reduce using rule 77 (mutable)
    "<="  reduce using rule 77 (mutable)
    ">"   reduce using rule 77 (mutable)
    ">="  reduce using rule 77 (mutable)
    "!="  reduce using rule 77 (mutable)
    "=="  reduce using rule 77 (mutable)
    "||"  reduce using rule 77 (mutable)
    "&&"  reduce using rule 77 (mutable)
    "]"   reduce using rule 77 (mutable)
    ":"   reduce using rule 77 (mutable)


State 336

   71 unaryExp: "!" unaryExp .

    "+"   reduce using rule 71 (unaryExp)
    "-"   reduce using rule 71 (unaryExp)
    "*"   reduce using rule 71 (unaryExp)
    "/"   reduce using rule 71 (unaryExp)
    "%"   reduce using rule 71 (unaryExp)
    "<"   reduce using rule 71 (unaryExp)
    "<="  reduce using rule 71 (unaryExp)
    ">"   reduce using rule 71 (unaryExp)
    ">="  reduce using rule 71 (unaryExp)
    "!="  reduce using rule 71 (unaryExp)
    "=="  reduce using rule 71 (unaryExp)
    "||"  reduce using rule 71 (unaryExp)
    "&&"  reduce using rule 71 (unaryExp)
    "]"   reduce using rule 71 (unaryExp)
    ":"   reduce using rule 71 (unaryExp)


State 337

   76 baseValue: mutable .

    "+"   reduce using rule 76 (baseValue)
    "-"   reduce using rule 76 (baseValue)
    "*"   reduce using rule 76 (baseValue)
    "/"   reduce using rule 76 (baseValue)
    "%"   reduce using rule 76 (baseValue)
    "<"   reduce using rule 76 (baseValue)
    "<="  reduce using rule 76 (baseValue)
    ">"   reduce using rule 76 (baseValue)
    ">="  reduce using rule 76 (baseValue)
    "!="  reduce using rule 76 (baseValue)
    "=="  reduce using rule 76 (baseValue)
    "||"  reduce using rule 76 (baseValue)
    "&&"  reduce using rule 76 (baseValue)
    "]"   reduce using rule 76 (baseValue)
    ":"   reduce using rule 76 (baseValue)


State 338

   72 baseValue: "(" expression . ")"

    ")"  shift, and go to state 423


State 339

   52 logicalOrExp: logicalOrExp "||" . logicalAndExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    logicalAndExp  go to state 424
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 337
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 340

   54 logicalAndExp: logicalAndExp "&&" . equalityExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    equalityExp  go to state 425
    relationExp  go to state 233
    sumExp       go to state 234
    multExp      go to state 235
    unaryExp     go to state 236
    baseValue    go to state 237
    mutable      go to state 337
    functCall    go to state 239
    constant     go to state 240
    lexerror     go to state 241


State 341

   57 equalityExp: equalityExp "!=" . relationExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    relationExp  go to state 426
    sumExp       go to state 234
    multExp      go to state 235
    unaryExp     go to state 236
    baseValue    go to state 237
    mutable      go to state 337
    functCall    go to state 239
    constant     go to state 240
    lexerror     go to state 241


State 342

   56 equalityExp: equalityExp "==" . relationExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    relationExp  go to state 427
    sumExp       go to state 234
    multExp      go to state 235
    unaryExp     go to state 236
    baseValue    go to state 237
    mutable      go to state 337
    functCall    go to state 239
    constant     go to state 240
    lexerror     go to state 241


State 343

   60 relationExp: relationExp "<" . sumExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    sumExp     go to state 428
    multExp    go to state 235
    unaryExp   go to state 236
    baseValue  go to state 237
    mutable    go to state 337
    functCall  go to state 239
    constant   go to state 240
    lexerror   go to state 241


State 344

   62 relationExp: relationExp "<=" . sumExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    sumExp     go to state 429
    multExp    go to state 235
    unaryExp   go to state 236
    baseValue  go to state 237
    mutable    go to state 337
    functCall  go to state 239
    constant   go to state 240
    lexerror   go to state 241


State 345

   59 relationExp: relationExp ">" . sumExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    sumExp     go to state 430
    multExp    go to state 235
    unaryExp   go to state 236
    baseValue  go to state 237
    mutable    go to state 337
    functCall  go to state 239
    constant   go to state 240
    lexerror   go to state 241


State 346

   61 relationExp: relationExp ">=" . sumExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    sumExp     go to state 431
    multExp    go to state 235
    unaryExp   go to state 236
    baseValue  go to state 237
    mutable    go to state 337
    functCall  go to state 239
    constant   go to state 240
    lexerror   go to state 241


State 347

   64 sumExp: sumExp "+" . multExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    multExp    go to state 432
    unaryExp   go to state 236
    baseValue  go to state 237
    mutable    go to state 337
    functCall  go to state 239
    constant   go to state 240
    lexerror   go to state 241


State 348

   65 sumExp: sumExp "-" . multExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    multExp    go to state 433
    unaryExp   go to state 236
    baseValue  go to state 237
    mutable    go to state 337
    functCall  go to state 239
    constant   go to state 240
    lexerror   go to state 241


State 349

   67 multExp: multExp "*" . unaryExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    unaryExp   go to state 434
    baseValue  go to state 237
    mutable    go to state 337
    functCall  go to state 239
    constant   go to state 240
    lexerror   go to state 241


State 350

   68 multExp: multExp "/" . unaryExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    unaryExp   go to state 435
    baseValue  go to state 237
    mutable    go to state 337
    functCall  go to state 239
    constant   go to state 240
    lexerror   go to state 241


State 351

   69 multExp: multExp "%" . unaryExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    unaryExp   go to state 436
    baseValue  go to state 237
    mutable    go to state 337
    functCall  go to state 239
    constant   go to state 240
    lexerror   go to state 241


State 352

   50 expression: mutable "=" . logicalOrExp

    IDENTIFIER             shift, and go to state 335
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    logicalOrExp   go to state 437
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 337
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 353

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 438
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 354

   81 functCall: IDENTIFIER "(" . args ")"

    IDENTIFIER             shift, and go to state 242
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    ")"  reduce using rule 83 (args)

    expression     go to state 87
    logicalOrExp   go to state 253
    logicalAndExp  go to state 254
    equalityExp    go to state 255
    relationExp    go to state 256
    sumExp         go to state 257
    multExp        go to state 258
    unaryExp       go to state 259
    baseValue      go to state 260
    mutable        go to state 261
    functCall      go to state 262
    args           go to state 439
    argList        go to state 89
    constant       go to state 263
    lexerror       go to state 264


State 355

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 440
    "("  shift, and go to state 354

    "+"   reduce using rule 77 (mutable)
    "-"   reduce using rule 77 (mutable)
    "*"   reduce using rule 77 (mutable)
    "/"   reduce using rule 77 (mutable)
    "%"   reduce using rule 77 (mutable)
    "<"   reduce using rule 77 (mutable)
    "<="  reduce using rule 77 (mutable)
    ">"   reduce using rule 77 (mutable)
    ">="  reduce using rule 77 (mutable)
    "!="  reduce using rule 77 (mutable)
    "=="  reduce using rule 77 (mutable)
    "||"  reduce using rule 77 (mutable)
    "&&"  reduce using rule 77 (mutable)
    ")"   reduce using rule 77 (mutable)
    ","   reduce using rule 77 (mutable)


State 356

   71 unaryExp: "!" unaryExp .

    "+"   reduce using rule 71 (unaryExp)
    "-"   reduce using rule 71 (unaryExp)
    "*"   reduce using rule 71 (unaryExp)
    "/"   reduce using rule 71 (unaryExp)
    "%"   reduce using rule 71 (unaryExp)
    "<"   reduce using rule 71 (unaryExp)
    "<="  reduce using rule 71 (unaryExp)
    ">"   reduce using rule 71 (unaryExp)
    ">="  reduce using rule 71 (unaryExp)
    "!="  reduce using rule 71 (unaryExp)
    "=="  reduce using rule 71 (unaryExp)
    "||"  reduce using rule 71 (unaryExp)
    "&&"  reduce using rule 71 (unaryExp)
    ")"   reduce using rule 71 (unaryExp)
    ","   reduce using rule 71 (unaryExp)


State 357

   76 baseValue: mutable .

    "+"   reduce using rule 76 (baseValue)
    "-"   reduce using rule 76 (baseValue)
    "*"   reduce using rule 76 (baseValue)
    "/"   reduce using rule 76 (baseValue)
    "%"   reduce using rule 76 (baseValue)
    "<"   reduce using rule 76 (baseValue)
    "<="  reduce using rule 76 (baseValue)
    ">"   reduce using rule 76 (baseValue)
    ">="  reduce using rule 76 (baseValue)
    "!="  reduce using rule 76 (baseValue)
    "=="  reduce using rule 76 (baseValue)
    "||"  reduce using rule 76 (baseValue)
    "&&"  reduce using rule 76 (baseValue)
    ")"   reduce using rule 76 (baseValue)
    ","   reduce using rule 76 (baseValue)


State 358

   72 baseValue: "(" expression . ")"

    ")"  shift, and go to state 441


State 359

   52 logicalOrExp: logicalOrExp "||" . logicalAndExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    logicalAndExp  go to state 442
    equalityExp    go to state 255
    relationExp    go to state 256
    sumExp         go to state 257
    multExp        go to state 258
    unaryExp       go to state 259
    baseValue      go to state 260
    mutable        go to state 357
    functCall      go to state 262
    constant       go to state 263
    lexerror       go to state 264


State 360

   54 logicalAndExp: logicalAndExp "&&" . equalityExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    equalityExp  go to state 443
    relationExp  go to state 256
    sumExp       go to state 257
    multExp      go to state 258
    unaryExp     go to state 259
    baseValue    go to state 260
    mutable      go to state 357
    functCall    go to state 262
    constant     go to state 263
    lexerror     go to state 264


State 361

   57 equalityExp: equalityExp "!=" . relationExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    relationExp  go to state 444
    sumExp       go to state 257
    multExp      go to state 258
    unaryExp     go to state 259
    baseValue    go to state 260
    mutable      go to state 357
    functCall    go to state 262
    constant     go to state 263
    lexerror     go to state 264


State 362

   56 equalityExp: equalityExp "==" . relationExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    relationExp  go to state 445
    sumExp       go to state 257
    multExp      go to state 258
    unaryExp     go to state 259
    baseValue    go to state 260
    mutable      go to state 357
    functCall    go to state 262
    constant     go to state 263
    lexerror     go to state 264


State 363

   60 relationExp: relationExp "<" . sumExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    sumExp     go to state 446
    multExp    go to state 258
    unaryExp   go to state 259
    baseValue  go to state 260
    mutable    go to state 357
    functCall  go to state 262
    constant   go to state 263
    lexerror   go to state 264


State 364

   62 relationExp: relationExp "<=" . sumExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    sumExp     go to state 447
    multExp    go to state 258
    unaryExp   go to state 259
    baseValue  go to state 260
    mutable    go to state 357
    functCall  go to state 262
    constant   go to state 263
    lexerror   go to state 264


State 365

   59 relationExp: relationExp ">" . sumExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    sumExp     go to state 448
    multExp    go to state 258
    unaryExp   go to state 259
    baseValue  go to state 260
    mutable    go to state 357
    functCall  go to state 262
    constant   go to state 263
    lexerror   go to state 264


State 366

   61 relationExp: relationExp ">=" . sumExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    sumExp     go to state 449
    multExp    go to state 258
    unaryExp   go to state 259
    baseValue  go to state 260
    mutable    go to state 357
    functCall  go to state 262
    constant   go to state 263
    lexerror   go to state 264


State 367

   64 sumExp: sumExp "+" . multExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    multExp    go to state 450
    unaryExp   go to state 259
    baseValue  go to state 260
    mutable    go to state 357
    functCall  go to state 262
    constant   go to state 263
    lexerror   go to state 264


State 368

   65 sumExp: sumExp "-" . multExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    multExp    go to state 451
    unaryExp   go to state 259
    baseValue  go to state 260
    mutable    go to state 357
    functCall  go to state 262
    constant   go to state 263
    lexerror   go to state 264


State 369

   67 multExp: multExp "*" . unaryExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    unaryExp   go to state 452
    baseValue  go to state 260
    mutable    go to state 357
    functCall  go to state 262
    constant   go to state 263
    lexerror   go to state 264


State 370

   68 multExp: multExp "/" . unaryExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    unaryExp   go to state 453
    baseValue  go to state 260
    mutable    go to state 357
    functCall  go to state 262
    constant   go to state 263
    lexerror   go to state 264


State 371

   69 multExp: multExp "%" . unaryExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    unaryExp   go to state 454
    baseValue  go to state 260
    mutable    go to state 357
    functCall  go to state 262
    constant   go to state 263
    lexerror   go to state 264


State 372

   50 expression: mutable "=" . logicalOrExp

    IDENTIFIER             shift, and go to state 355
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    logicalOrExp   go to state 455
    logicalAndExp  go to state 254
    equalityExp    go to state 255
    relationExp    go to state 256
    sumExp         go to state 257
    multExp        go to state 258
    unaryExp       go to state 259
    baseValue      go to state 260
    mutable        go to state 357
    functCall      go to state 262
    constant       go to state 263
    lexerror       go to state 264


State 373

   52 logicalOrExp: logicalOrExp "||" logicalAndExp .
   54 logicalAndExp: logicalAndExp . "&&" equalityExp

    "&&"  shift, and go to state 321

    "||"  reduce using rule 52 (logicalOrExp)
    ")"   reduce using rule 52 (logicalOrExp)


State 374

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 456
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 375

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 457
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 376

   50 expression: mutable "=" . logicalOrExp

    IDENTIFIER             shift, and go to state 30
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "!"                    shift, and go to state 36
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    logicalOrExp   go to state 458
    logicalAndExp  go to state 39
    equalityExp    go to state 40
    relationExp    go to state 41
    sumExp         go to state 42
    multExp        go to state 43
    unaryExp       go to state 44
    baseValue      go to state 45
    mutable        go to state 46
    functCall      go to state 47
    constant       go to state 48
    lexerror       go to state 49


State 377

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 459
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 378

   81 functCall: IDENTIFIER "(" . args ")"

    IDENTIFIER             shift, and go to state 242
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    ")"  reduce using rule 83 (args)

    expression     go to state 87
    logicalOrExp   go to state 253
    logicalAndExp  go to state 254
    equalityExp    go to state 255
    relationExp    go to state 256
    sumExp         go to state 257
    multExp        go to state 258
    unaryExp       go to state 259
    baseValue      go to state 260
    mutable        go to state 261
    functCall      go to state 262
    args           go to state 460
    argList        go to state 89
    constant       go to state 263
    lexerror       go to state 264


State 379

   72 baseValue: "(" expression . ")"

    ")"  shift, and go to state 461


State 380

   30 compoundStmt: "{" "}" .

    IDENTIFIER             reduce using rule 30 (compoundStmt)
    INTCONST               reduce using rule 30 (compoundStmt)
    FLOATCONST             reduce using rule 30 (compoundStmt)
    BOOLEANCONST           reduce using rule 30 (compoundStmt)
    CHARCONST              reduce using rule 30 (compoundStmt)
    STRINGCONST            reduce using rule 30 (compoundStmt)
    "while"                reduce using rule 30 (compoundStmt)
    "for"                  reduce using rule 30 (compoundStmt)
    "if"                   reduce using rule 30 (compoundStmt)
    "return"               reduce using rule 30 (compoundStmt)
    "read"                 reduce using rule 30 (compoundStmt)
    "write"                reduce using rule 30 (compoundStmt)
    "char"                 reduce using rule 30 (compoundStmt)
    "int"                  reduce using rule 30 (compoundStmt)
    "float"                reduce using rule 30 (compoundStmt)
    "string"               reduce using rule 30 (compoundStmt)
    "table"                reduce using rule 30 (compoundStmt)
    "bool"                 reduce using rule 30 (compoundStmt)
    "void"                 reduce using rule 30 (compoundStmt)
    "!"                    reduce using rule 30 (compoundStmt)
    "}"                    reduce using rule 30 (compoundStmt)
    "("                    reduce using rule 30 (compoundStmt)
    ERR_INVALID_ID         reduce using rule 30 (compoundStmt)
    ERR_INVALID_CHARCONST  reduce using rule 30 (compoundStmt)
    ERR_UNKNOWN_TOKEN      reduce using rule 30 (compoundStmt)


State 381

   31 compoundStmt: "{" statementList . "}"
   33 statementList: statementList . statement

    IDENTIFIER             shift, and go to state 268
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "while"                shift, and go to state 122
    "for"                  shift, and go to state 123
    "if"                   shift, and go to state 124
    "return"               shift, and go to state 125
    "read"                 shift, and go to state 126
    "write"                shift, and go to state 127
    "char"                 shift, and go to state 1
    "int"                  shift, and go to state 2
    "float"                shift, and go to state 3
    "string"               shift, and go to state 4
    "table"                shift, and go to state 5
    "bool"                 shift, and go to state 6
    "void"                 shift, and go to state 7
    "!"                    shift, and go to state 36
    "}"                    shift, and go to state 462
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    varDeclaration        go to state 129
    varSimpleDeclaration  go to state 15
    arrayDeclaration      go to state 16
    tableDeclaration      go to state 17
    statement             go to state 152
    iterationStmt         go to state 132
    conditionalStmt       go to state 133
    ifStmt                go to state 134
    returnStmt            go to state 135
    expression            go to state 136
    logicalOrExp          go to state 269
    logicalAndExp         go to state 39
    equalityExp           go to state 40
    relationExp           go to state 41
    sumExp                go to state 42
    multExp               go to state 43
    unaryExp              go to state 44
    baseValue             go to state 45
    mutable               go to state 270
    functCall             go to state 47
    constant              go to state 48
    typeSpecifier         go to state 137
    lexerror              go to state 49


State 382

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 463
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 383

   81 functCall: IDENTIFIER "(" . args ")"

    IDENTIFIER             shift, and go to state 242
    INTCONST               shift, and go to state 243
    FLOATCONST             shift, and go to state 244
    BOOLEANCONST           shift, and go to state 245
    CHARCONST              shift, and go to state 246
    STRINGCONST            shift, and go to state 247
    "!"                    shift, and go to state 248
    "("                    shift, and go to state 249
    ERR_INVALID_ID         shift, and go to state 250
    ERR_INVALID_CHARCONST  shift, and go to state 251
    ERR_UNKNOWN_TOKEN      shift, and go to state 252

    ")"  reduce using rule 83 (args)

    expression     go to state 87
    logicalOrExp   go to state 253
    logicalAndExp  go to state 254
    equalityExp    go to state 255
    relationExp    go to state 256
    sumExp         go to state 257
    multExp        go to state 258
    unaryExp       go to state 259
    baseValue      go to state 260
    mutable        go to state 261
    functCall      go to state 262
    args           go to state 464
    argList        go to state 89
    constant       go to state 263
    lexerror       go to state 264


State 384

   77 mutable: IDENTIFIER .
   78        | IDENTIFIER . "[" expression "]"
   79        | IDENTIFIER . "[" expression ":" expression "]"
   80        | IDENTIFIER . "[" expression ":" expression ":" expression "]"
   81 functCall: IDENTIFIER . "(" args ")"

    "["  shift, and go to state 465
    "("  shift, and go to state 383

    "+"   reduce using rule 77 (mutable)
    "-"   reduce using rule 77 (mutable)
    "*"   reduce using rule 77 (mutable)
    "/"   reduce using rule 77 (mutable)
    "%"   reduce using rule 77 (mutable)
    "<"   reduce using rule 77 (mutable)
    "<="  reduce using rule 77 (mutable)
    ">"   reduce using rule 77 (mutable)
    ">="  reduce using rule 77 (mutable)
    "!="  reduce using rule 77 (mutable)
    "=="  reduce using rule 77 (mutable)
    "||"  reduce using rule 77 (mutable)
    "&&"  reduce using rule 77 (mutable)
    "]"   reduce using rule 77 (mutable)


State 385

   71 unaryExp: "!" unaryExp .

    "+"   reduce using rule 71 (unaryExp)
    "-"   reduce using rule 71 (unaryExp)
    "*"   reduce using rule 71 (unaryExp)
    "/"   reduce using rule 71 (unaryExp)
    "%"   reduce using rule 71 (unaryExp)
    "<"   reduce using rule 71 (unaryExp)
    "<="  reduce using rule 71 (unaryExp)
    ">"   reduce using rule 71 (unaryExp)
    ">="  reduce using rule 71 (unaryExp)
    "!="  reduce using rule 71 (unaryExp)
    "=="  reduce using rule 71 (unaryExp)
    "||"  reduce using rule 71 (unaryExp)
    "&&"  reduce using rule 71 (unaryExp)
    "]"   reduce using rule 71 (unaryExp)


State 386

   76 baseValue: mutable .

    "+"   reduce using rule 76 (baseValue)
    "-"   reduce using rule 76 (baseValue)
    "*"   reduce using rule 76 (baseValue)
    "/"   reduce using rule 76 (baseValue)
    "%"   reduce using rule 76 (baseValue)
    "<"   reduce using rule 76 (baseValue)
    "<="  reduce using rule 76 (baseValue)
    ">"   reduce using rule 76 (baseValue)
    ">="  reduce using rule 76 (baseValue)
    "!="  reduce using rule 76 (baseValue)
    "=="  reduce using rule 76 (baseValue)
    "||"  reduce using rule 76 (baseValue)
    "&&"  reduce using rule 76 (baseValue)
    "]"   reduce using rule 76 (baseValue)


State 387

   72 baseValue: "(" expression . ")"

    ")"  shift, and go to state 466


State 388

   52 logicalOrExp: logicalOrExp "||" . logicalAndExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    logicalAndExp  go to state 467
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 386
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 389

   54 logicalAndExp: logicalAndExp "&&" . equalityExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    equalityExp  go to state 468
    relationExp  go to state 300
    sumExp       go to state 301
    multExp      go to state 302
    unaryExp     go to state 303
    baseValue    go to state 304
    mutable      go to state 386
    functCall    go to state 306
    constant     go to state 307
    lexerror     go to state 308


State 390

   57 equalityExp: equalityExp "!=" . relationExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    relationExp  go to state 469
    sumExp       go to state 301
    multExp      go to state 302
    unaryExp     go to state 303
    baseValue    go to state 304
    mutable      go to state 386
    functCall    go to state 306
    constant     go to state 307
    lexerror     go to state 308


State 391

   56 equalityExp: equalityExp "==" . relationExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    relationExp  go to state 470
    sumExp       go to state 301
    multExp      go to state 302
    unaryExp     go to state 303
    baseValue    go to state 304
    mutable      go to state 386
    functCall    go to state 306
    constant     go to state 307
    lexerror     go to state 308


State 392

   60 relationExp: relationExp "<" . sumExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    sumExp     go to state 471
    multExp    go to state 302
    unaryExp   go to state 303
    baseValue  go to state 304
    mutable    go to state 386
    functCall  go to state 306
    constant   go to state 307
    lexerror   go to state 308


State 393

   62 relationExp: relationExp "<=" . sumExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    sumExp     go to state 472
    multExp    go to state 302
    unaryExp   go to state 303
    baseValue  go to state 304
    mutable    go to state 386
    functCall  go to state 306
    constant   go to state 307
    lexerror   go to state 308


State 394

   59 relationExp: relationExp ">" . sumExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    sumExp     go to state 473
    multExp    go to state 302
    unaryExp   go to state 303
    baseValue  go to state 304
    mutable    go to state 386
    functCall  go to state 306
    constant   go to state 307
    lexerror   go to state 308


State 395

   61 relationExp: relationExp ">=" . sumExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    sumExp     go to state 474
    multExp    go to state 302
    unaryExp   go to state 303
    baseValue  go to state 304
    mutable    go to state 386
    functCall  go to state 306
    constant   go to state 307
    lexerror   go to state 308


State 396

   64 sumExp: sumExp "+" . multExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    multExp    go to state 475
    unaryExp   go to state 303
    baseValue  go to state 304
    mutable    go to state 386
    functCall  go to state 306
    constant   go to state 307
    lexerror   go to state 308


State 397

   65 sumExp: sumExp "-" . multExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    multExp    go to state 476
    unaryExp   go to state 303
    baseValue  go to state 304
    mutable    go to state 386
    functCall  go to state 306
    constant   go to state 307
    lexerror   go to state 308


State 398

   67 multExp: multExp "*" . unaryExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    unaryExp   go to state 477
    baseValue  go to state 304
    mutable    go to state 386
    functCall  go to state 306
    constant   go to state 307
    lexerror   go to state 308


State 399

   68 multExp: multExp "/" . unaryExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    unaryExp   go to state 478
    baseValue  go to state 304
    mutable    go to state 386
    functCall  go to state 306
    constant   go to state 307
    lexerror   go to state 308


State 400

   69 multExp: multExp "%" . unaryExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    unaryExp   go to state 479
    baseValue  go to state 304
    mutable    go to state 386
    functCall  go to state 306
    constant   go to state 307
    lexerror   go to state 308


State 401

   50 expression: mutable "=" . logicalOrExp

    IDENTIFIER             shift, and go to state 384
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    logicalOrExp   go to state 480
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 386
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 402

   19 constList: constList "," constant .

    ")"  reduce using rule 19 (constList)
    ","  reduce using rule 19 (constList)


State 403

   30 compoundStmt: "{" "}" .

    IDENTIFIER             reduce using rule 30 (compoundStmt)
    INTCONST               reduce using rule 30 (compoundStmt)
    FLOATCONST             reduce using rule 30 (compoundStmt)
    BOOLEANCONST           reduce using rule 30 (compoundStmt)
    CHARCONST              reduce using rule 30 (compoundStmt)
    STRINGCONST            reduce using rule 30 (compoundStmt)
    "while"                reduce using rule 30 (compoundStmt)
    "for"                  reduce using rule 30 (compoundStmt)
    "if"                   reduce using rule 30 (compoundStmt)
    "else"                 reduce using rule 30 (compoundStmt)
    "return"               reduce using rule 30 (compoundStmt)
    "read"                 reduce using rule 30 (compoundStmt)
    "write"                reduce using rule 30 (compoundStmt)
    "char"                 reduce using rule 30 (compoundStmt)
    "int"                  reduce using rule 30 (compoundStmt)
    "float"                reduce using rule 30 (compoundStmt)
    "string"               reduce using rule 30 (compoundStmt)
    "table"                reduce using rule 30 (compoundStmt)
    "bool"                 reduce using rule 30 (compoundStmt)
    "void"                 reduce using rule 30 (compoundStmt)
    "!"                    reduce using rule 30 (compoundStmt)
    "}"                    reduce using rule 30 (compoundStmt)
    "("                    reduce using rule 30 (compoundStmt)
    ERR_INVALID_ID         reduce using rule 30 (compoundStmt)
    ERR_INVALID_CHARCONST  reduce using rule 30 (compoundStmt)
    ERR_UNKNOWN_TOKEN      reduce using rule 30 (compoundStmt)


State 404

   31 compoundStmt: "{" statementList . "}"
   33 statementList: statementList . statement

    IDENTIFIER             shift, and go to state 268
    INTCONST               shift, and go to state 31
    FLOATCONST             shift, and go to state 32
    BOOLEANCONST           shift, and go to state 33
    CHARCONST              shift, and go to state 34
    STRINGCONST            shift, and go to state 35
    "while"                shift, and go to state 122
    "for"                  shift, and go to state 123
    "if"                   shift, and go to state 124
    "return"               shift, and go to state 125
    "read"                 shift, and go to state 126
    "write"                shift, and go to state 127
    "char"                 shift, and go to state 1
    "int"                  shift, and go to state 2
    "float"                shift, and go to state 3
    "string"               shift, and go to state 4
    "table"                shift, and go to state 5
    "bool"                 shift, and go to state 6
    "void"                 shift, and go to state 7
    "!"                    shift, and go to state 36
    "}"                    shift, and go to state 481
    "("                    shift, and go to state 37
    ERR_INVALID_ID         shift, and go to state 190
    ERR_INVALID_CHARCONST  shift, and go to state 191
    ERR_UNKNOWN_TOKEN      shift, and go to state 192

    varDeclaration        go to state 129
    varSimpleDeclaration  go to state 15
    arrayDeclaration      go to state 16
    tableDeclaration      go to state 17
    statement             go to state 152
    iterationStmt         go to state 132
    conditionalStmt       go to state 133
    ifStmt                go to state 134
    returnStmt            go to state 135
    expression            go to state 136
    logicalOrExp          go to state 269
    logicalAndExp         go to state 39
    equalityExp           go to state 40
    relationExp           go to state 41
    sumExp                go to state 42
    multExp               go to state 43
    unaryExp              go to state 44
    baseValue             go to state 45
    mutable               go to state 270
    functCall             go to state 47
    constant              go to state 48
    typeSpecifier         go to state 137
    lexerror              go to state 49


State 405

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 482
    ":"  shift, and go to state 483


State 406

   81 functCall: IDENTIFIER "(" args . ")"

    ")"  shift, and go to state 484


State 407

   72 baseValue: "(" expression ")" .

    "+"   reduce using rule 72 (baseValue)
    "-"   reduce using rule 72 (baseValue)
    "*"   reduce using rule 72 (baseValue)
    "/"   reduce using rule 72 (baseValue)
    "%"   reduce using rule 72 (baseValue)
    "<"   reduce using rule 72 (baseValue)
    "<="  reduce using rule 72 (baseValue)
    ">"   reduce using rule 72 (baseValue)
    ">="  reduce using rule 72 (baseValue)
    "!="  reduce using rule 72 (baseValue)
    "=="  reduce using rule 72 (baseValue)
    "||"  reduce using rule 72 (baseValue)
    "&&"  reduce using rule 72 (baseValue)
    ")"   reduce using rule 72 (baseValue)


State 408

   54 logicalAndExp: logicalAndExp "&&" equalityExp .
   56 equalityExp: equalityExp . "==" relationExp
   57            | equalityExp . "!=" relationExp

    "!="  shift, and go to state 322
    "=="  shift, and go to state 323

    "||"  reduce using rule 54 (logicalAndExp)
    "&&"  reduce using rule 54 (logicalAndExp)
    ")"   reduce using rule 54 (logicalAndExp)


State 409

   57 equalityExp: equalityExp "!=" relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 324
    "<="  shift, and go to state 325
    ">"   shift, and go to state 326
    ">="  shift, and go to state 327

    "!="  reduce using rule 57 (equalityExp)
    "=="  reduce using rule 57 (equalityExp)
    "||"  reduce using rule 57 (equalityExp)
    "&&"  reduce using rule 57 (equalityExp)
    ")"   reduce using rule 57 (equalityExp)


State 410

   56 equalityExp: equalityExp "==" relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 324
    "<="  shift, and go to state 325
    ">"   shift, and go to state 326
    ">="  shift, and go to state 327

    "!="  reduce using rule 56 (equalityExp)
    "=="  reduce using rule 56 (equalityExp)
    "||"  reduce using rule 56 (equalityExp)
    "&&"  reduce using rule 56 (equalityExp)
    ")"   reduce using rule 56 (equalityExp)


State 411

   60 relationExp: relationExp "<" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 328
    "-"  shift, and go to state 329

    "<"   reduce using rule 60 (relationExp)
    "<="  reduce using rule 60 (relationExp)
    ">"   reduce using rule 60 (relationExp)
    ">="  reduce using rule 60 (relationExp)
    "!="  reduce using rule 60 (relationExp)
    "=="  reduce using rule 60 (relationExp)
    "||"  reduce using rule 60 (relationExp)
    "&&"  reduce using rule 60 (relationExp)
    ")"   reduce using rule 60 (relationExp)


State 412

   62 relationExp: relationExp "<=" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 328
    "-"  shift, and go to state 329

    "<"   reduce using rule 62 (relationExp)
    "<="  reduce using rule 62 (relationExp)
    ">"   reduce using rule 62 (relationExp)
    ">="  reduce using rule 62 (relationExp)
    "!="  reduce using rule 62 (relationExp)
    "=="  reduce using rule 62 (relationExp)
    "||"  reduce using rule 62 (relationExp)
    "&&"  reduce using rule 62 (relationExp)
    ")"   reduce using rule 62 (relationExp)


State 413

   59 relationExp: relationExp ">" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 328
    "-"  shift, and go to state 329

    "<"   reduce using rule 59 (relationExp)
    "<="  reduce using rule 59 (relationExp)
    ">"   reduce using rule 59 (relationExp)
    ">="  reduce using rule 59 (relationExp)
    "!="  reduce using rule 59 (relationExp)
    "=="  reduce using rule 59 (relationExp)
    "||"  reduce using rule 59 (relationExp)
    "&&"  reduce using rule 59 (relationExp)
    ")"   reduce using rule 59 (relationExp)


State 414

   61 relationExp: relationExp ">=" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 328
    "-"  shift, and go to state 329

    "<"   reduce using rule 61 (relationExp)
    "<="  reduce using rule 61 (relationExp)
    ">"   reduce using rule 61 (relationExp)
    ">="  reduce using rule 61 (relationExp)
    "!="  reduce using rule 61 (relationExp)
    "=="  reduce using rule 61 (relationExp)
    "||"  reduce using rule 61 (relationExp)
    "&&"  reduce using rule 61 (relationExp)
    ")"   reduce using rule 61 (relationExp)


State 415

   64 sumExp: sumExp "+" multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 330
    "/"  shift, and go to state 331
    "%"  shift, and go to state 332

    "+"   reduce using rule 64 (sumExp)
    "-"   reduce using rule 64 (sumExp)
    "<"   reduce using rule 64 (sumExp)
    "<="  reduce using rule 64 (sumExp)
    ">"   reduce using rule 64 (sumExp)
    ">="  reduce using rule 64 (sumExp)
    "!="  reduce using rule 64 (sumExp)
    "=="  reduce using rule 64 (sumExp)
    "||"  reduce using rule 64 (sumExp)
    "&&"  reduce using rule 64 (sumExp)
    ")"   reduce using rule 64 (sumExp)


State 416

   65 sumExp: sumExp "-" multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 330
    "/"  shift, and go to state 331
    "%"  shift, and go to state 332

    "+"   reduce using rule 65 (sumExp)
    "-"   reduce using rule 65 (sumExp)
    "<"   reduce using rule 65 (sumExp)
    "<="  reduce using rule 65 (sumExp)
    ">"   reduce using rule 65 (sumExp)
    ">="  reduce using rule 65 (sumExp)
    "!="  reduce using rule 65 (sumExp)
    "=="  reduce using rule 65 (sumExp)
    "||"  reduce using rule 65 (sumExp)
    "&&"  reduce using rule 65 (sumExp)
    ")"   reduce using rule 65 (sumExp)


State 417

   67 multExp: multExp "*" unaryExp .

    "+"   reduce using rule 67 (multExp)
    "-"   reduce using rule 67 (multExp)
    "*"   reduce using rule 67 (multExp)
    "/"   reduce using rule 67 (multExp)
    "%"   reduce using rule 67 (multExp)
    "<"   reduce using rule 67 (multExp)
    "<="  reduce using rule 67 (multExp)
    ">"   reduce using rule 67 (multExp)
    ">="  reduce using rule 67 (multExp)
    "!="  reduce using rule 67 (multExp)
    "=="  reduce using rule 67 (multExp)
    "||"  reduce using rule 67 (multExp)
    "&&"  reduce using rule 67 (multExp)
    ")"   reduce using rule 67 (multExp)


State 418

   68 multExp: multExp "/" unaryExp .

    "+"   reduce using rule 68 (multExp)
    "-"   reduce using rule 68 (multExp)
    "*"   reduce using rule 68 (multExp)
    "/"   reduce using rule 68 (multExp)
    "%"   reduce using rule 68 (multExp)
    "<"   reduce using rule 68 (multExp)
    "<="  reduce using rule 68 (multExp)
    ">"   reduce using rule 68 (multExp)
    ">="  reduce using rule 68 (multExp)
    "!="  reduce using rule 68 (multExp)
    "=="  reduce using rule 68 (multExp)
    "||"  reduce using rule 68 (multExp)
    "&&"  reduce using rule 68 (multExp)
    ")"   reduce using rule 68 (multExp)


State 419

   69 multExp: multExp "%" unaryExp .

    "+"   reduce using rule 69 (multExp)
    "-"   reduce using rule 69 (multExp)
    "*"   reduce using rule 69 (multExp)
    "/"   reduce using rule 69 (multExp)
    "%"   reduce using rule 69 (multExp)
    "<"   reduce using rule 69 (multExp)
    "<="  reduce using rule 69 (multExp)
    ">"   reduce using rule 69 (multExp)
    ">="  reduce using rule 69 (multExp)
    "!="  reduce using rule 69 (multExp)
    "=="  reduce using rule 69 (multExp)
    "||"  reduce using rule 69 (multExp)
    "&&"  reduce using rule 69 (multExp)
    ")"   reduce using rule 69 (multExp)


State 420

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 485
    ":"  shift, and go to state 486


State 421

   81 functCall: IDENTIFIER "(" args . ")"

    ")"  shift, and go to state 487


State 422

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 488
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 423

   72 baseValue: "(" expression ")" .

    "+"   reduce using rule 72 (baseValue)
    "-"   reduce using rule 72 (baseValue)
    "*"   reduce using rule 72 (baseValue)
    "/"   reduce using rule 72 (baseValue)
    "%"   reduce using rule 72 (baseValue)
    "<"   reduce using rule 72 (baseValue)
    "<="  reduce using rule 72 (baseValue)
    ">"   reduce using rule 72 (baseValue)
    ">="  reduce using rule 72 (baseValue)
    "!="  reduce using rule 72 (baseValue)
    "=="  reduce using rule 72 (baseValue)
    "||"  reduce using rule 72 (baseValue)
    "&&"  reduce using rule 72 (baseValue)
    "]"   reduce using rule 72 (baseValue)
    ":"   reduce using rule 72 (baseValue)


State 424

   52 logicalOrExp: logicalOrExp "||" logicalAndExp .
   54 logicalAndExp: logicalAndExp . "&&" equalityExp

    "&&"  shift, and go to state 340

    "||"  reduce using rule 52 (logicalOrExp)
    "]"   reduce using rule 52 (logicalOrExp)
    ":"   reduce using rule 52 (logicalOrExp)


State 425

   54 logicalAndExp: logicalAndExp "&&" equalityExp .
   56 equalityExp: equalityExp . "==" relationExp
   57            | equalityExp . "!=" relationExp

    "!="  shift, and go to state 341
    "=="  shift, and go to state 342

    "||"  reduce using rule 54 (logicalAndExp)
    "&&"  reduce using rule 54 (logicalAndExp)
    "]"   reduce using rule 54 (logicalAndExp)
    ":"   reduce using rule 54 (logicalAndExp)


State 426

   57 equalityExp: equalityExp "!=" relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 343
    "<="  shift, and go to state 344
    ">"   shift, and go to state 345
    ">="  shift, and go to state 346

    "!="  reduce using rule 57 (equalityExp)
    "=="  reduce using rule 57 (equalityExp)
    "||"  reduce using rule 57 (equalityExp)
    "&&"  reduce using rule 57 (equalityExp)
    "]"   reduce using rule 57 (equalityExp)
    ":"   reduce using rule 57 (equalityExp)


State 427

   56 equalityExp: equalityExp "==" relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 343
    "<="  shift, and go to state 344
    ">"   shift, and go to state 345
    ">="  shift, and go to state 346

    "!="  reduce using rule 56 (equalityExp)
    "=="  reduce using rule 56 (equalityExp)
    "||"  reduce using rule 56 (equalityExp)
    "&&"  reduce using rule 56 (equalityExp)
    "]"   reduce using rule 56 (equalityExp)
    ":"   reduce using rule 56 (equalityExp)


State 428

   60 relationExp: relationExp "<" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 347
    "-"  shift, and go to state 348

    "<"   reduce using rule 60 (relationExp)
    "<="  reduce using rule 60 (relationExp)
    ">"   reduce using rule 60 (relationExp)
    ">="  reduce using rule 60 (relationExp)
    "!="  reduce using rule 60 (relationExp)
    "=="  reduce using rule 60 (relationExp)
    "||"  reduce using rule 60 (relationExp)
    "&&"  reduce using rule 60 (relationExp)
    "]"   reduce using rule 60 (relationExp)
    ":"   reduce using rule 60 (relationExp)


State 429

   62 relationExp: relationExp "<=" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 347
    "-"  shift, and go to state 348

    "<"   reduce using rule 62 (relationExp)
    "<="  reduce using rule 62 (relationExp)
    ">"   reduce using rule 62 (relationExp)
    ">="  reduce using rule 62 (relationExp)
    "!="  reduce using rule 62 (relationExp)
    "=="  reduce using rule 62 (relationExp)
    "||"  reduce using rule 62 (relationExp)
    "&&"  reduce using rule 62 (relationExp)
    "]"   reduce using rule 62 (relationExp)
    ":"   reduce using rule 62 (relationExp)


State 430

   59 relationExp: relationExp ">" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 347
    "-"  shift, and go to state 348

    "<"   reduce using rule 59 (relationExp)
    "<="  reduce using rule 59 (relationExp)
    ">"   reduce using rule 59 (relationExp)
    ">="  reduce using rule 59 (relationExp)
    "!="  reduce using rule 59 (relationExp)
    "=="  reduce using rule 59 (relationExp)
    "||"  reduce using rule 59 (relationExp)
    "&&"  reduce using rule 59 (relationExp)
    "]"   reduce using rule 59 (relationExp)
    ":"   reduce using rule 59 (relationExp)


State 431

   61 relationExp: relationExp ">=" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 347
    "-"  shift, and go to state 348

    "<"   reduce using rule 61 (relationExp)
    "<="  reduce using rule 61 (relationExp)
    ">"   reduce using rule 61 (relationExp)
    ">="  reduce using rule 61 (relationExp)
    "!="  reduce using rule 61 (relationExp)
    "=="  reduce using rule 61 (relationExp)
    "||"  reduce using rule 61 (relationExp)
    "&&"  reduce using rule 61 (relationExp)
    "]"   reduce using rule 61 (relationExp)
    ":"   reduce using rule 61 (relationExp)


State 432

   64 sumExp: sumExp "+" multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 349
    "/"  shift, and go to state 350
    "%"  shift, and go to state 351

    "+"   reduce using rule 64 (sumExp)
    "-"   reduce using rule 64 (sumExp)
    "<"   reduce using rule 64 (sumExp)
    "<="  reduce using rule 64 (sumExp)
    ">"   reduce using rule 64 (sumExp)
    ">="  reduce using rule 64 (sumExp)
    "!="  reduce using rule 64 (sumExp)
    "=="  reduce using rule 64 (sumExp)
    "||"  reduce using rule 64 (sumExp)
    "&&"  reduce using rule 64 (sumExp)
    "]"   reduce using rule 64 (sumExp)
    ":"   reduce using rule 64 (sumExp)


State 433

   65 sumExp: sumExp "-" multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 349
    "/"  shift, and go to state 350
    "%"  shift, and go to state 351

    "+"   reduce using rule 65 (sumExp)
    "-"   reduce using rule 65 (sumExp)
    "<"   reduce using rule 65 (sumExp)
    "<="  reduce using rule 65 (sumExp)
    ">"   reduce using rule 65 (sumExp)
    ">="  reduce using rule 65 (sumExp)
    "!="  reduce using rule 65 (sumExp)
    "=="  reduce using rule 65 (sumExp)
    "||"  reduce using rule 65 (sumExp)
    "&&"  reduce using rule 65 (sumExp)
    "]"   reduce using rule 65 (sumExp)
    ":"   reduce using rule 65 (sumExp)


State 434

   67 multExp: multExp "*" unaryExp .

    "+"   reduce using rule 67 (multExp)
    "-"   reduce using rule 67 (multExp)
    "*"   reduce using rule 67 (multExp)
    "/"   reduce using rule 67 (multExp)
    "%"   reduce using rule 67 (multExp)
    "<"   reduce using rule 67 (multExp)
    "<="  reduce using rule 67 (multExp)
    ">"   reduce using rule 67 (multExp)
    ">="  reduce using rule 67 (multExp)
    "!="  reduce using rule 67 (multExp)
    "=="  reduce using rule 67 (multExp)
    "||"  reduce using rule 67 (multExp)
    "&&"  reduce using rule 67 (multExp)
    "]"   reduce using rule 67 (multExp)
    ":"   reduce using rule 67 (multExp)


State 435

   68 multExp: multExp "/" unaryExp .

    "+"   reduce using rule 68 (multExp)
    "-"   reduce using rule 68 (multExp)
    "*"   reduce using rule 68 (multExp)
    "/"   reduce using rule 68 (multExp)
    "%"   reduce using rule 68 (multExp)
    "<"   reduce using rule 68 (multExp)
    "<="  reduce using rule 68 (multExp)
    ">"   reduce using rule 68 (multExp)
    ">="  reduce using rule 68 (multExp)
    "!="  reduce using rule 68 (multExp)
    "=="  reduce using rule 68 (multExp)
    "||"  reduce using rule 68 (multExp)
    "&&"  reduce using rule 68 (multExp)
    "]"   reduce using rule 68 (multExp)
    ":"   reduce using rule 68 (multExp)


State 436

   69 multExp: multExp "%" unaryExp .

    "+"   reduce using rule 69 (multExp)
    "-"   reduce using rule 69 (multExp)
    "*"   reduce using rule 69 (multExp)
    "/"   reduce using rule 69 (multExp)
    "%"   reduce using rule 69 (multExp)
    "<"   reduce using rule 69 (multExp)
    "<="  reduce using rule 69 (multExp)
    ">"   reduce using rule 69 (multExp)
    ">="  reduce using rule 69 (multExp)
    "!="  reduce using rule 69 (multExp)
    "=="  reduce using rule 69 (multExp)
    "||"  reduce using rule 69 (multExp)
    "&&"  reduce using rule 69 (multExp)
    "]"   reduce using rule 69 (multExp)
    ":"   reduce using rule 69 (multExp)


State 437

   50 expression: mutable "=" logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 339

    "]"  reduce using rule 50 (expression)
    ":"  reduce using rule 50 (expression)


State 438

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 489
    ":"  shift, and go to state 490


State 439

   81 functCall: IDENTIFIER "(" args . ")"

    ")"  shift, and go to state 491


State 440

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 492
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 441

   72 baseValue: "(" expression ")" .

    "+"   reduce using rule 72 (baseValue)
    "-"   reduce using rule 72 (baseValue)
    "*"   reduce using rule 72 (baseValue)
    "/"   reduce using rule 72 (baseValue)
    "%"   reduce using rule 72 (baseValue)
    "<"   reduce using rule 72 (baseValue)
    "<="  reduce using rule 72 (baseValue)
    ">"   reduce using rule 72 (baseValue)
    ">="  reduce using rule 72 (baseValue)
    "!="  reduce using rule 72 (baseValue)
    "=="  reduce using rule 72 (baseValue)
    "||"  reduce using rule 72 (baseValue)
    "&&"  reduce using rule 72 (baseValue)
    ")"   reduce using rule 72 (baseValue)
    ","   reduce using rule 72 (baseValue)


State 442

   52 logicalOrExp: logicalOrExp "||" logicalAndExp .
   54 logicalAndExp: logicalAndExp . "&&" equalityExp

    "&&"  shift, and go to state 360

    "||"  reduce using rule 52 (logicalOrExp)
    ")"   reduce using rule 52 (logicalOrExp)
    ","   reduce using rule 52 (logicalOrExp)


State 443

   54 logicalAndExp: logicalAndExp "&&" equalityExp .
   56 equalityExp: equalityExp . "==" relationExp
   57            | equalityExp . "!=" relationExp

    "!="  shift, and go to state 361
    "=="  shift, and go to state 362

    "||"  reduce using rule 54 (logicalAndExp)
    "&&"  reduce using rule 54 (logicalAndExp)
    ")"   reduce using rule 54 (logicalAndExp)
    ","   reduce using rule 54 (logicalAndExp)


State 444

   57 equalityExp: equalityExp "!=" relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 363
    "<="  shift, and go to state 364
    ">"   shift, and go to state 365
    ">="  shift, and go to state 366

    "!="  reduce using rule 57 (equalityExp)
    "=="  reduce using rule 57 (equalityExp)
    "||"  reduce using rule 57 (equalityExp)
    "&&"  reduce using rule 57 (equalityExp)
    ")"   reduce using rule 57 (equalityExp)
    ","   reduce using rule 57 (equalityExp)


State 445

   56 equalityExp: equalityExp "==" relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 363
    "<="  shift, and go to state 364
    ">"   shift, and go to state 365
    ">="  shift, and go to state 366

    "!="  reduce using rule 56 (equalityExp)
    "=="  reduce using rule 56 (equalityExp)
    "||"  reduce using rule 56 (equalityExp)
    "&&"  reduce using rule 56 (equalityExp)
    ")"   reduce using rule 56 (equalityExp)
    ","   reduce using rule 56 (equalityExp)


State 446

   60 relationExp: relationExp "<" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 367
    "-"  shift, and go to state 368

    "<"   reduce using rule 60 (relationExp)
    "<="  reduce using rule 60 (relationExp)
    ">"   reduce using rule 60 (relationExp)
    ">="  reduce using rule 60 (relationExp)
    "!="  reduce using rule 60 (relationExp)
    "=="  reduce using rule 60 (relationExp)
    "||"  reduce using rule 60 (relationExp)
    "&&"  reduce using rule 60 (relationExp)
    ")"   reduce using rule 60 (relationExp)
    ","   reduce using rule 60 (relationExp)


State 447

   62 relationExp: relationExp "<=" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 367
    "-"  shift, and go to state 368

    "<"   reduce using rule 62 (relationExp)
    "<="  reduce using rule 62 (relationExp)
    ">"   reduce using rule 62 (relationExp)
    ">="  reduce using rule 62 (relationExp)
    "!="  reduce using rule 62 (relationExp)
    "=="  reduce using rule 62 (relationExp)
    "||"  reduce using rule 62 (relationExp)
    "&&"  reduce using rule 62 (relationExp)
    ")"   reduce using rule 62 (relationExp)
    ","   reduce using rule 62 (relationExp)


State 448

   59 relationExp: relationExp ">" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 367
    "-"  shift, and go to state 368

    "<"   reduce using rule 59 (relationExp)
    "<="  reduce using rule 59 (relationExp)
    ">"   reduce using rule 59 (relationExp)
    ">="  reduce using rule 59 (relationExp)
    "!="  reduce using rule 59 (relationExp)
    "=="  reduce using rule 59 (relationExp)
    "||"  reduce using rule 59 (relationExp)
    "&&"  reduce using rule 59 (relationExp)
    ")"   reduce using rule 59 (relationExp)
    ","   reduce using rule 59 (relationExp)


State 449

   61 relationExp: relationExp ">=" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 367
    "-"  shift, and go to state 368

    "<"   reduce using rule 61 (relationExp)
    "<="  reduce using rule 61 (relationExp)
    ">"   reduce using rule 61 (relationExp)
    ">="  reduce using rule 61 (relationExp)
    "!="  reduce using rule 61 (relationExp)
    "=="  reduce using rule 61 (relationExp)
    "||"  reduce using rule 61 (relationExp)
    "&&"  reduce using rule 61 (relationExp)
    ")"   reduce using rule 61 (relationExp)
    ","   reduce using rule 61 (relationExp)


State 450

   64 sumExp: sumExp "+" multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 369
    "/"  shift, and go to state 370
    "%"  shift, and go to state 371

    "+"   reduce using rule 64 (sumExp)
    "-"   reduce using rule 64 (sumExp)
    "<"   reduce using rule 64 (sumExp)
    "<="  reduce using rule 64 (sumExp)
    ">"   reduce using rule 64 (sumExp)
    ">="  reduce using rule 64 (sumExp)
    "!="  reduce using rule 64 (sumExp)
    "=="  reduce using rule 64 (sumExp)
    "||"  reduce using rule 64 (sumExp)
    "&&"  reduce using rule 64 (sumExp)
    ")"   reduce using rule 64 (sumExp)
    ","   reduce using rule 64 (sumExp)


State 451

   65 sumExp: sumExp "-" multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 369
    "/"  shift, and go to state 370
    "%"  shift, and go to state 371

    "+"   reduce using rule 65 (sumExp)
    "-"   reduce using rule 65 (sumExp)
    "<"   reduce using rule 65 (sumExp)
    "<="  reduce using rule 65 (sumExp)
    ">"   reduce using rule 65 (sumExp)
    ">="  reduce using rule 65 (sumExp)
    "!="  reduce using rule 65 (sumExp)
    "=="  reduce using rule 65 (sumExp)
    "||"  reduce using rule 65 (sumExp)
    "&&"  reduce using rule 65 (sumExp)
    ")"   reduce using rule 65 (sumExp)
    ","   reduce using rule 65 (sumExp)


State 452

   67 multExp: multExp "*" unaryExp .

    "+"   reduce using rule 67 (multExp)
    "-"   reduce using rule 67 (multExp)
    "*"   reduce using rule 67 (multExp)
    "/"   reduce using rule 67 (multExp)
    "%"   reduce using rule 67 (multExp)
    "<"   reduce using rule 67 (multExp)
    "<="  reduce using rule 67 (multExp)
    ">"   reduce using rule 67 (multExp)
    ">="  reduce using rule 67 (multExp)
    "!="  reduce using rule 67 (multExp)
    "=="  reduce using rule 67 (multExp)
    "||"  reduce using rule 67 (multExp)
    "&&"  reduce using rule 67 (multExp)
    ")"   reduce using rule 67 (multExp)
    ","   reduce using rule 67 (multExp)


State 453

   68 multExp: multExp "/" unaryExp .

    "+"   reduce using rule 68 (multExp)
    "-"   reduce using rule 68 (multExp)
    "*"   reduce using rule 68 (multExp)
    "/"   reduce using rule 68 (multExp)
    "%"   reduce using rule 68 (multExp)
    "<"   reduce using rule 68 (multExp)
    "<="  reduce using rule 68 (multExp)
    ">"   reduce using rule 68 (multExp)
    ">="  reduce using rule 68 (multExp)
    "!="  reduce using rule 68 (multExp)
    "=="  reduce using rule 68 (multExp)
    "||"  reduce using rule 68 (multExp)
    "&&"  reduce using rule 68 (multExp)
    ")"   reduce using rule 68 (multExp)
    ","   reduce using rule 68 (multExp)


State 454

   69 multExp: multExp "%" unaryExp .

    "+"   reduce using rule 69 (multExp)
    "-"   reduce using rule 69 (multExp)
    "*"   reduce using rule 69 (multExp)
    "/"   reduce using rule 69 (multExp)
    "%"   reduce using rule 69 (multExp)
    "<"   reduce using rule 69 (multExp)
    "<="  reduce using rule 69 (multExp)
    ">"   reduce using rule 69 (multExp)
    ">="  reduce using rule 69 (multExp)
    "!="  reduce using rule 69 (multExp)
    "=="  reduce using rule 69 (multExp)
    "||"  reduce using rule 69 (multExp)
    "&&"  reduce using rule 69 (multExp)
    ")"   reduce using rule 69 (multExp)
    ","   reduce using rule 69 (multExp)


State 455

   50 expression: mutable "=" logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 359

    ")"  reduce using rule 50 (expression)
    ","  reduce using rule 50 (expression)


State 456

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 493
    ":"  shift, and go to state 494


State 457

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 495
    ":"  shift, and go to state 496


State 458

   50 expression: mutable "=" logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 63

    ";"  reduce using rule 50 (expression)


State 459

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 497
    ":"  shift, and go to state 498


State 460

   81 functCall: IDENTIFIER "(" args . ")"

    ")"  shift, and go to state 499


State 461

   72 baseValue: "(" expression ")" .

    ")"  reduce using rule 72 (baseValue)


State 462

   31 compoundStmt: "{" statementList "}" .

    IDENTIFIER             reduce using rule 31 (compoundStmt)
    INTCONST               reduce using rule 31 (compoundStmt)
    FLOATCONST             reduce using rule 31 (compoundStmt)
    BOOLEANCONST           reduce using rule 31 (compoundStmt)
    CHARCONST              reduce using rule 31 (compoundStmt)
    STRINGCONST            reduce using rule 31 (compoundStmt)
    "while"                reduce using rule 31 (compoundStmt)
    "for"                  reduce using rule 31 (compoundStmt)
    "if"                   reduce using rule 31 (compoundStmt)
    "return"               reduce using rule 31 (compoundStmt)
    "read"                 reduce using rule 31 (compoundStmt)
    "write"                reduce using rule 31 (compoundStmt)
    "char"                 reduce using rule 31 (compoundStmt)
    "int"                  reduce using rule 31 (compoundStmt)
    "float"                reduce using rule 31 (compoundStmt)
    "string"               reduce using rule 31 (compoundStmt)
    "table"                reduce using rule 31 (compoundStmt)
    "bool"                 reduce using rule 31 (compoundStmt)
    "void"                 reduce using rule 31 (compoundStmt)
    "!"                    reduce using rule 31 (compoundStmt)
    "}"                    reduce using rule 31 (compoundStmt)
    "("                    reduce using rule 31 (compoundStmt)
    ERR_INVALID_ID         reduce using rule 31 (compoundStmt)
    ERR_INVALID_CHARCONST  reduce using rule 31 (compoundStmt)
    ERR_UNKNOWN_TOKEN      reduce using rule 31 (compoundStmt)


State 463

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 500
    ":"  shift, and go to state 501


State 464

   81 functCall: IDENTIFIER "(" args . ")"

    ")"  shift, and go to state 502


State 465

   78 mutable: IDENTIFIER "[" . expression "]"
   79        | IDENTIFIER "[" . expression ":" expression "]"
   80        | IDENTIFIER "[" . expression ":" expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 503
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 466

   72 baseValue: "(" expression ")" .

    "+"   reduce using rule 72 (baseValue)
    "-"   reduce using rule 72 (baseValue)
    "*"   reduce using rule 72 (baseValue)
    "/"   reduce using rule 72 (baseValue)
    "%"   reduce using rule 72 (baseValue)
    "<"   reduce using rule 72 (baseValue)
    "<="  reduce using rule 72 (baseValue)
    ">"   reduce using rule 72 (baseValue)
    ">="  reduce using rule 72 (baseValue)
    "!="  reduce using rule 72 (baseValue)
    "=="  reduce using rule 72 (baseValue)
    "||"  reduce using rule 72 (baseValue)
    "&&"  reduce using rule 72 (baseValue)
    "]"   reduce using rule 72 (baseValue)


State 467

   52 logicalOrExp: logicalOrExp "||" logicalAndExp .
   54 logicalAndExp: logicalAndExp . "&&" equalityExp

    "&&"  shift, and go to state 389

    "||"  reduce using rule 52 (logicalOrExp)
    "]"   reduce using rule 52 (logicalOrExp)


State 468

   54 logicalAndExp: logicalAndExp "&&" equalityExp .
   56 equalityExp: equalityExp . "==" relationExp
   57            | equalityExp . "!=" relationExp

    "!="  shift, and go to state 390
    "=="  shift, and go to state 391

    "||"  reduce using rule 54 (logicalAndExp)
    "&&"  reduce using rule 54 (logicalAndExp)
    "]"   reduce using rule 54 (logicalAndExp)


State 469

   57 equalityExp: equalityExp "!=" relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 392
    "<="  shift, and go to state 393
    ">"   shift, and go to state 394
    ">="  shift, and go to state 395

    "!="  reduce using rule 57 (equalityExp)
    "=="  reduce using rule 57 (equalityExp)
    "||"  reduce using rule 57 (equalityExp)
    "&&"  reduce using rule 57 (equalityExp)
    "]"   reduce using rule 57 (equalityExp)


State 470

   56 equalityExp: equalityExp "==" relationExp .
   59 relationExp: relationExp . ">" sumExp
   60            | relationExp . "<" sumExp
   61            | relationExp . ">=" sumExp
   62            | relationExp . "<=" sumExp

    "<"   shift, and go to state 392
    "<="  shift, and go to state 393
    ">"   shift, and go to state 394
    ">="  shift, and go to state 395

    "!="  reduce using rule 56 (equalityExp)
    "=="  reduce using rule 56 (equalityExp)
    "||"  reduce using rule 56 (equalityExp)
    "&&"  reduce using rule 56 (equalityExp)
    "]"   reduce using rule 56 (equalityExp)


State 471

   60 relationExp: relationExp "<" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 396
    "-"  shift, and go to state 397

    "<"   reduce using rule 60 (relationExp)
    "<="  reduce using rule 60 (relationExp)
    ">"   reduce using rule 60 (relationExp)
    ">="  reduce using rule 60 (relationExp)
    "!="  reduce using rule 60 (relationExp)
    "=="  reduce using rule 60 (relationExp)
    "||"  reduce using rule 60 (relationExp)
    "&&"  reduce using rule 60 (relationExp)
    "]"   reduce using rule 60 (relationExp)


State 472

   62 relationExp: relationExp "<=" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 396
    "-"  shift, and go to state 397

    "<"   reduce using rule 62 (relationExp)
    "<="  reduce using rule 62 (relationExp)
    ">"   reduce using rule 62 (relationExp)
    ">="  reduce using rule 62 (relationExp)
    "!="  reduce using rule 62 (relationExp)
    "=="  reduce using rule 62 (relationExp)
    "||"  reduce using rule 62 (relationExp)
    "&&"  reduce using rule 62 (relationExp)
    "]"   reduce using rule 62 (relationExp)


State 473

   59 relationExp: relationExp ">" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 396
    "-"  shift, and go to state 397

    "<"   reduce using rule 59 (relationExp)
    "<="  reduce using rule 59 (relationExp)
    ">"   reduce using rule 59 (relationExp)
    ">="  reduce using rule 59 (relationExp)
    "!="  reduce using rule 59 (relationExp)
    "=="  reduce using rule 59 (relationExp)
    "||"  reduce using rule 59 (relationExp)
    "&&"  reduce using rule 59 (relationExp)
    "]"   reduce using rule 59 (relationExp)


State 474

   61 relationExp: relationExp ">=" sumExp .
   64 sumExp: sumExp . "+" multExp
   65       | sumExp . "-" multExp

    "+"  shift, and go to state 396
    "-"  shift, and go to state 397

    "<"   reduce using rule 61 (relationExp)
    "<="  reduce using rule 61 (relationExp)
    ">"   reduce using rule 61 (relationExp)
    ">="  reduce using rule 61 (relationExp)
    "!="  reduce using rule 61 (relationExp)
    "=="  reduce using rule 61 (relationExp)
    "||"  reduce using rule 61 (relationExp)
    "&&"  reduce using rule 61 (relationExp)
    "]"   reduce using rule 61 (relationExp)


State 475

   64 sumExp: sumExp "+" multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 398
    "/"  shift, and go to state 399
    "%"  shift, and go to state 400

    "+"   reduce using rule 64 (sumExp)
    "-"   reduce using rule 64 (sumExp)
    "<"   reduce using rule 64 (sumExp)
    "<="  reduce using rule 64 (sumExp)
    ">"   reduce using rule 64 (sumExp)
    ">="  reduce using rule 64 (sumExp)
    "!="  reduce using rule 64 (sumExp)
    "=="  reduce using rule 64 (sumExp)
    "||"  reduce using rule 64 (sumExp)
    "&&"  reduce using rule 64 (sumExp)
    "]"   reduce using rule 64 (sumExp)


State 476

   65 sumExp: sumExp "-" multExp .
   67 multExp: multExp . "*" unaryExp
   68        | multExp . "/" unaryExp
   69        | multExp . "%" unaryExp

    "*"  shift, and go to state 398
    "/"  shift, and go to state 399
    "%"  shift, and go to state 400

    "+"   reduce using rule 65 (sumExp)
    "-"   reduce using rule 65 (sumExp)
    "<"   reduce using rule 65 (sumExp)
    "<="  reduce using rule 65 (sumExp)
    ">"   reduce using rule 65 (sumExp)
    ">="  reduce using rule 65 (sumExp)
    "!="  reduce using rule 65 (sumExp)
    "=="  reduce using rule 65 (sumExp)
    "||"  reduce using rule 65 (sumExp)
    "&&"  reduce using rule 65 (sumExp)
    "]"   reduce using rule 65 (sumExp)


State 477

   67 multExp: multExp "*" unaryExp .

    "+"   reduce using rule 67 (multExp)
    "-"   reduce using rule 67 (multExp)
    "*"   reduce using rule 67 (multExp)
    "/"   reduce using rule 67 (multExp)
    "%"   reduce using rule 67 (multExp)
    "<"   reduce using rule 67 (multExp)
    "<="  reduce using rule 67 (multExp)
    ">"   reduce using rule 67 (multExp)
    ">="  reduce using rule 67 (multExp)
    "!="  reduce using rule 67 (multExp)
    "=="  reduce using rule 67 (multExp)
    "||"  reduce using rule 67 (multExp)
    "&&"  reduce using rule 67 (multExp)
    "]"   reduce using rule 67 (multExp)


State 478

   68 multExp: multExp "/" unaryExp .

    "+"   reduce using rule 68 (multExp)
    "-"   reduce using rule 68 (multExp)
    "*"   reduce using rule 68 (multExp)
    "/"   reduce using rule 68 (multExp)
    "%"   reduce using rule 68 (multExp)
    "<"   reduce using rule 68 (multExp)
    "<="  reduce using rule 68 (multExp)
    ">"   reduce using rule 68 (multExp)
    ">="  reduce using rule 68 (multExp)
    "!="  reduce using rule 68 (multExp)
    "=="  reduce using rule 68 (multExp)
    "||"  reduce using rule 68 (multExp)
    "&&"  reduce using rule 68 (multExp)
    "]"   reduce using rule 68 (multExp)


State 479

   69 multExp: multExp "%" unaryExp .

    "+"   reduce using rule 69 (multExp)
    "-"   reduce using rule 69 (multExp)
    "*"   reduce using rule 69 (multExp)
    "/"   reduce using rule 69 (multExp)
    "%"   reduce using rule 69 (multExp)
    "<"   reduce using rule 69 (multExp)
    "<="  reduce using rule 69 (multExp)
    ">"   reduce using rule 69 (multExp)
    ">="  reduce using rule 69 (multExp)
    "!="  reduce using rule 69 (multExp)
    "=="  reduce using rule 69 (multExp)
    "||"  reduce using rule 69 (multExp)
    "&&"  reduce using rule 69 (multExp)
    "]"   reduce using rule 69 (multExp)


State 480

   50 expression: mutable "=" logicalOrExp .
   52 logicalOrExp: logicalOrExp . "||" logicalAndExp

    "||"  shift, and go to state 388

    "]"  reduce using rule 50 (expression)


State 481

   31 compoundStmt: "{" statementList "}" .

    IDENTIFIER             reduce using rule 31 (compoundStmt)
    INTCONST               reduce using rule 31 (compoundStmt)
    FLOATCONST             reduce using rule 31 (compoundStmt)
    BOOLEANCONST           reduce using rule 31 (compoundStmt)
    CHARCONST              reduce using rule 31 (compoundStmt)
    STRINGCONST            reduce using rule 31 (compoundStmt)
    "while"                reduce using rule 31 (compoundStmt)
    "for"                  reduce using rule 31 (compoundStmt)
    "if"                   reduce using rule 31 (compoundStmt)
    "else"                 reduce using rule 31 (compoundStmt)
    "return"               reduce using rule 31 (compoundStmt)
    "read"                 reduce using rule 31 (compoundStmt)
    "write"                reduce using rule 31 (compoundStmt)
    "char"                 reduce using rule 31 (compoundStmt)
    "int"                  reduce using rule 31 (compoundStmt)
    "float"                reduce using rule 31 (compoundStmt)
    "string"               reduce using rule 31 (compoundStmt)
    "table"                reduce using rule 31 (compoundStmt)
    "bool"                 reduce using rule 31 (compoundStmt)
    "void"                 reduce using rule 31 (compoundStmt)
    "!"                    reduce using rule 31 (compoundStmt)
    "}"                    reduce using rule 31 (compoundStmt)
    "("                    reduce using rule 31 (compoundStmt)
    ERR_INVALID_ID         reduce using rule 31 (compoundStmt)
    ERR_INVALID_CHARCONST  reduce using rule 31 (compoundStmt)
    ERR_UNKNOWN_TOKEN      reduce using rule 31 (compoundStmt)


State 482

   78 mutable: IDENTIFIER "[" expression "]" .

    "+"   reduce using rule 78 (mutable)
    "-"   reduce using rule 78 (mutable)
    "*"   reduce using rule 78 (mutable)
    "/"   reduce using rule 78 (mutable)
    "%"   reduce using rule 78 (mutable)
    "<"   reduce using rule 78 (mutable)
    "<="  reduce using rule 78 (mutable)
    ">"   reduce using rule 78 (mutable)
    ">="  reduce using rule 78 (mutable)
    "!="  reduce using rule 78 (mutable)
    "=="  reduce using rule 78 (mutable)
    "||"  reduce using rule 78 (mutable)
    "&&"  reduce using rule 78 (mutable)
    ")"   reduce using rule 78 (mutable)
    "="   reduce using rule 78 (mutable)


State 483

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 504
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 484

   81 functCall: IDENTIFIER "(" args ")" .

    "+"   reduce using rule 81 (functCall)
    "-"   reduce using rule 81 (functCall)
    "*"   reduce using rule 81 (functCall)
    "/"   reduce using rule 81 (functCall)
    "%"   reduce using rule 81 (functCall)
    "<"   reduce using rule 81 (functCall)
    "<="  reduce using rule 81 (functCall)
    ">"   reduce using rule 81 (functCall)
    ">="  reduce using rule 81 (functCall)
    "!="  reduce using rule 81 (functCall)
    "=="  reduce using rule 81 (functCall)
    "||"  reduce using rule 81 (functCall)
    "&&"  reduce using rule 81 (functCall)
    ")"   reduce using rule 81 (functCall)


State 485

   78 mutable: IDENTIFIER "[" expression "]" .

    "+"   reduce using rule 78 (mutable)
    "-"   reduce using rule 78 (mutable)
    "*"   reduce using rule 78 (mutable)
    "/"   reduce using rule 78 (mutable)
    "%"   reduce using rule 78 (mutable)
    "<"   reduce using rule 78 (mutable)
    "<="  reduce using rule 78 (mutable)
    ">"   reduce using rule 78 (mutable)
    ">="  reduce using rule 78 (mutable)
    "!="  reduce using rule 78 (mutable)
    "=="  reduce using rule 78 (mutable)
    "||"  reduce using rule 78 (mutable)
    "&&"  reduce using rule 78 (mutable)
    "]"   reduce using rule 78 (mutable)
    ":"   reduce using rule 78 (mutable)
    "="   reduce using rule 78 (mutable)


State 486

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 505
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 487

   81 functCall: IDENTIFIER "(" args ")" .

    "+"   reduce using rule 81 (functCall)
    "-"   reduce using rule 81 (functCall)
    "*"   reduce using rule 81 (functCall)
    "/"   reduce using rule 81 (functCall)
    "%"   reduce using rule 81 (functCall)
    "<"   reduce using rule 81 (functCall)
    "<="  reduce using rule 81 (functCall)
    ">"   reduce using rule 81 (functCall)
    ">="  reduce using rule 81 (functCall)
    "!="  reduce using rule 81 (functCall)
    "=="  reduce using rule 81 (functCall)
    "||"  reduce using rule 81 (functCall)
    "&&"  reduce using rule 81 (functCall)
    "]"   reduce using rule 81 (functCall)
    ":"   reduce using rule 81 (functCall)


State 488

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 506
    ":"  shift, and go to state 507


State 489

   78 mutable: IDENTIFIER "[" expression "]" .

    "+"   reduce using rule 78 (mutable)
    "-"   reduce using rule 78 (mutable)
    "*"   reduce using rule 78 (mutable)
    "/"   reduce using rule 78 (mutable)
    "%"   reduce using rule 78 (mutable)
    "<"   reduce using rule 78 (mutable)
    "<="  reduce using rule 78 (mutable)
    ">"   reduce using rule 78 (mutable)
    ">="  reduce using rule 78 (mutable)
    "!="  reduce using rule 78 (mutable)
    "=="  reduce using rule 78 (mutable)
    "||"  reduce using rule 78 (mutable)
    "&&"  reduce using rule 78 (mutable)
    ")"   reduce using rule 78 (mutable)
    "="   reduce using rule 78 (mutable)
    ","   reduce using rule 78 (mutable)


State 490

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 508
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 491

   81 functCall: IDENTIFIER "(" args ")" .

    "+"   reduce using rule 81 (functCall)
    "-"   reduce using rule 81 (functCall)
    "*"   reduce using rule 81 (functCall)
    "/"   reduce using rule 81 (functCall)
    "%"   reduce using rule 81 (functCall)
    "<"   reduce using rule 81 (functCall)
    "<="  reduce using rule 81 (functCall)
    ">"   reduce using rule 81 (functCall)
    ">="  reduce using rule 81 (functCall)
    "!="  reduce using rule 81 (functCall)
    "=="  reduce using rule 81 (functCall)
    "||"  reduce using rule 81 (functCall)
    "&&"  reduce using rule 81 (functCall)
    ")"   reduce using rule 81 (functCall)
    ","   reduce using rule 81 (functCall)


State 492

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 509
    ":"  shift, and go to state 510


State 493

   78 mutable: IDENTIFIER "[" expression "]" .

    "+"   reduce using rule 78 (mutable)
    "-"   reduce using rule 78 (mutable)
    "*"   reduce using rule 78 (mutable)
    "/"   reduce using rule 78 (mutable)
    "%"   reduce using rule 78 (mutable)
    "<"   reduce using rule 78 (mutable)
    "<="  reduce using rule 78 (mutable)
    ">"   reduce using rule 78 (mutable)
    ">="  reduce using rule 78 (mutable)
    "!="  reduce using rule 78 (mutable)
    "=="  reduce using rule 78 (mutable)
    "||"  reduce using rule 78 (mutable)
    "&&"  reduce using rule 78 (mutable)
    ")"   reduce using rule 78 (mutable)


State 494

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 511
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 495

   78 mutable: IDENTIFIER "[" expression "]" .

    "+"   reduce using rule 78 (mutable)
    "-"   reduce using rule 78 (mutable)
    "*"   reduce using rule 78 (mutable)
    "/"   reduce using rule 78 (mutable)
    "%"   reduce using rule 78 (mutable)
    "<"   reduce using rule 78 (mutable)
    "<="  reduce using rule 78 (mutable)
    ">"   reduce using rule 78 (mutable)
    ">="  reduce using rule 78 (mutable)
    "!="  reduce using rule 78 (mutable)
    "=="  reduce using rule 78 (mutable)
    "||"  reduce using rule 78 (mutable)
    "&&"  reduce using rule 78 (mutable)
    ";"   reduce using rule 78 (mutable)
    "="   reduce using rule 78 (mutable)


State 496

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 512
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 497

   78 mutable: IDENTIFIER "[" expression "]" .

    ")"  reduce using rule 78 (mutable)


State 498

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 513
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 499

   81 functCall: IDENTIFIER "(" args ")" .

    ")"  reduce using rule 81 (functCall)


State 500

   78 mutable: IDENTIFIER "[" expression "]" .

    "+"   reduce using rule 78 (mutable)
    "-"   reduce using rule 78 (mutable)
    "*"   reduce using rule 78 (mutable)
    "/"   reduce using rule 78 (mutable)
    "%"   reduce using rule 78 (mutable)
    "<"   reduce using rule 78 (mutable)
    "<="  reduce using rule 78 (mutable)
    ">"   reduce using rule 78 (mutable)
    ">="  reduce using rule 78 (mutable)
    "!="  reduce using rule 78 (mutable)
    "=="  reduce using rule 78 (mutable)
    "||"  reduce using rule 78 (mutable)
    "&&"  reduce using rule 78 (mutable)
    "]"   reduce using rule 78 (mutable)
    "="   reduce using rule 78 (mutable)


State 501

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 514
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 502

   81 functCall: IDENTIFIER "(" args ")" .

    "+"   reduce using rule 81 (functCall)
    "-"   reduce using rule 81 (functCall)
    "*"   reduce using rule 81 (functCall)
    "/"   reduce using rule 81 (functCall)
    "%"   reduce using rule 81 (functCall)
    "<"   reduce using rule 81 (functCall)
    "<="  reduce using rule 81 (functCall)
    ">"   reduce using rule 81 (functCall)
    ">="  reduce using rule 81 (functCall)
    "!="  reduce using rule 81 (functCall)
    "=="  reduce using rule 81 (functCall)
    "||"  reduce using rule 81 (functCall)
    "&&"  reduce using rule 81 (functCall)
    "]"   reduce using rule 81 (functCall)


State 503

   78 mutable: IDENTIFIER "[" expression . "]"
   79        | IDENTIFIER "[" expression . ":" expression "]"
   80        | IDENTIFIER "[" expression . ":" expression ":" expression "]"

    "]"  shift, and go to state 515
    ":"  shift, and go to state 516


State 504

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 517
    ":"  shift, and go to state 518


State 505

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 519
    ":"  shift, and go to state 520


State 506

   78 mutable: IDENTIFIER "[" expression "]" .

    "+"   reduce using rule 78 (mutable)
    "-"   reduce using rule 78 (mutable)
    "*"   reduce using rule 78 (mutable)
    "/"   reduce using rule 78 (mutable)
    "%"   reduce using rule 78 (mutable)
    "<"   reduce using rule 78 (mutable)
    "<="  reduce using rule 78 (mutable)
    ">"   reduce using rule 78 (mutable)
    ">="  reduce using rule 78 (mutable)
    "!="  reduce using rule 78 (mutable)
    "=="  reduce using rule 78 (mutable)
    "||"  reduce using rule 78 (mutable)
    "&&"  reduce using rule 78 (mutable)
    "]"   reduce using rule 78 (mutable)
    ":"   reduce using rule 78 (mutable)


State 507

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 521
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 508

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 522
    ":"  shift, and go to state 523


State 509

   78 mutable: IDENTIFIER "[" expression "]" .

    "+"   reduce using rule 78 (mutable)
    "-"   reduce using rule 78 (mutable)
    "*"   reduce using rule 78 (mutable)
    "/"   reduce using rule 78 (mutable)
    "%"   reduce using rule 78 (mutable)
    "<"   reduce using rule 78 (mutable)
    "<="  reduce using rule 78 (mutable)
    ">"   reduce using rule 78 (mutable)
    ">="  reduce using rule 78 (mutable)
    "!="  reduce using rule 78 (mutable)
    "=="  reduce using rule 78 (mutable)
    "||"  reduce using rule 78 (mutable)
    "&&"  reduce using rule 78 (mutable)
    ")"   reduce using rule 78 (mutable)
    ","   reduce using rule 78 (mutable)


State 510

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 524
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 511

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 525
    ":"  shift, and go to state 526


State 512

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 527
    ":"  shift, and go to state 528


State 513

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 529
    ":"  shift, and go to state 530


State 514

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 531
    ":"  shift, and go to state 532


State 515

   78 mutable: IDENTIFIER "[" expression "]" .

    "+"   reduce using rule 78 (mutable)
    "-"   reduce using rule 78 (mutable)
    "*"   reduce using rule 78 (mutable)
    "/"   reduce using rule 78 (mutable)
    "%"   reduce using rule 78 (mutable)
    "<"   reduce using rule 78 (mutable)
    "<="  reduce using rule 78 (mutable)
    ">"   reduce using rule 78 (mutable)
    ">="  reduce using rule 78 (mutable)
    "!="  reduce using rule 78 (mutable)
    "=="  reduce using rule 78 (mutable)
    "||"  reduce using rule 78 (mutable)
    "&&"  reduce using rule 78 (mutable)
    "]"   reduce using rule 78 (mutable)


State 516

   79 mutable: IDENTIFIER "[" expression ":" . expression "]"
   80        | IDENTIFIER "[" expression ":" . expression ":" expression "]"

    IDENTIFIER             shift, and go to state 219
    INTCONST               shift, and go to state 220
    FLOATCONST             shift, and go to state 221
    BOOLEANCONST           shift, and go to state 222
    CHARCONST              shift, and go to state 223
    STRINGCONST            shift, and go to state 224
    "!"                    shift, and go to state 225
    "("                    shift, and go to state 226
    ERR_INVALID_ID         shift, and go to state 227
    ERR_INVALID_CHARCONST  shift, and go to state 228
    ERR_UNKNOWN_TOKEN      shift, and go to state 229

    expression     go to state 533
    logicalOrExp   go to state 230
    logicalAndExp  go to state 231
    equalityExp    go to state 232
    relationExp    go to state 233
    sumExp         go to state 234
    multExp        go to state 235
    unaryExp       go to state 236
    baseValue      go to state 237
    mutable        go to state 238
    functCall      go to state 239
    constant       go to state 240
    lexerror       go to state 241


State 517

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    "+"   reduce using rule 79 (mutable)
    "-"   reduce using rule 79 (mutable)
    "*"   reduce using rule 79 (mutable)
    "/"   reduce using rule 79 (mutable)
    "%"   reduce using rule 79 (mutable)
    "<"   reduce using rule 79 (mutable)
    "<="  reduce using rule 79 (mutable)
    ">"   reduce using rule 79 (mutable)
    ">="  reduce using rule 79 (mutable)
    "!="  reduce using rule 79 (mutable)
    "=="  reduce using rule 79 (mutable)
    "||"  reduce using rule 79 (mutable)
    "&&"  reduce using rule 79 (mutable)
    ")"   reduce using rule 79 (mutable)
    "="   reduce using rule 79 (mutable)


State 518

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 534
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 519

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    "+"   reduce using rule 79 (mutable)
    "-"   reduce using rule 79 (mutable)
    "*"   reduce using rule 79 (mutable)
    "/"   reduce using rule 79 (mutable)
    "%"   reduce using rule 79 (mutable)
    "<"   reduce using rule 79 (mutable)
    "<="  reduce using rule 79 (mutable)
    ">"   reduce using rule 79 (mutable)
    ">="  reduce using rule 79 (mutable)
    "!="  reduce using rule 79 (mutable)
    "=="  reduce using rule 79 (mutable)
    "||"  reduce using rule 79 (mutable)
    "&&"  reduce using rule 79 (mutable)
    "]"   reduce using rule 79 (mutable)
    ":"   reduce using rule 79 (mutable)
    "="   reduce using rule 79 (mutable)


State 520

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 535
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 521

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 536
    ":"  shift, and go to state 537


State 522

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    "+"   reduce using rule 79 (mutable)
    "-"   reduce using rule 79 (mutable)
    "*"   reduce using rule 79 (mutable)
    "/"   reduce using rule 79 (mutable)
    "%"   reduce using rule 79 (mutable)
    "<"   reduce using rule 79 (mutable)
    "<="  reduce using rule 79 (mutable)
    ">"   reduce using rule 79 (mutable)
    ">="  reduce using rule 79 (mutable)
    "!="  reduce using rule 79 (mutable)
    "=="  reduce using rule 79 (mutable)
    "||"  reduce using rule 79 (mutable)
    "&&"  reduce using rule 79 (mutable)
    ")"   reduce using rule 79 (mutable)
    "="   reduce using rule 79 (mutable)
    ","   reduce using rule 79 (mutable)


State 523

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 538
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 524

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 539
    ":"  shift, and go to state 540


State 525

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    "+"   reduce using rule 79 (mutable)
    "-"   reduce using rule 79 (mutable)
    "*"   reduce using rule 79 (mutable)
    "/"   reduce using rule 79 (mutable)
    "%"   reduce using rule 79 (mutable)
    "<"   reduce using rule 79 (mutable)
    "<="  reduce using rule 79 (mutable)
    ">"   reduce using rule 79 (mutable)
    ">="  reduce using rule 79 (mutable)
    "!="  reduce using rule 79 (mutable)
    "=="  reduce using rule 79 (mutable)
    "||"  reduce using rule 79 (mutable)
    "&&"  reduce using rule 79 (mutable)
    ")"   reduce using rule 79 (mutable)


State 526

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 541
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 527

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    "+"   reduce using rule 79 (mutable)
    "-"   reduce using rule 79 (mutable)
    "*"   reduce using rule 79 (mutable)
    "/"   reduce using rule 79 (mutable)
    "%"   reduce using rule 79 (mutable)
    "<"   reduce using rule 79 (mutable)
    "<="  reduce using rule 79 (mutable)
    ">"   reduce using rule 79 (mutable)
    ">="  reduce using rule 79 (mutable)
    "!="  reduce using rule 79 (mutable)
    "=="  reduce using rule 79 (mutable)
    "||"  reduce using rule 79 (mutable)
    "&&"  reduce using rule 79 (mutable)
    ";"   reduce using rule 79 (mutable)
    "="   reduce using rule 79 (mutable)


State 528

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 542
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 529

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    ")"  reduce using rule 79 (mutable)


State 530

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 543
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 531

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    "+"   reduce using rule 79 (mutable)
    "-"   reduce using rule 79 (mutable)
    "*"   reduce using rule 79 (mutable)
    "/"   reduce using rule 79 (mutable)
    "%"   reduce using rule 79 (mutable)
    "<"   reduce using rule 79 (mutable)
    "<="  reduce using rule 79 (mutable)
    ">"   reduce using rule 79 (mutable)
    ">="  reduce using rule 79 (mutable)
    "!="  reduce using rule 79 (mutable)
    "=="  reduce using rule 79 (mutable)
    "||"  reduce using rule 79 (mutable)
    "&&"  reduce using rule 79 (mutable)
    "]"   reduce using rule 79 (mutable)
    "="   reduce using rule 79 (mutable)


State 532

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 544
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 533

   79 mutable: IDENTIFIER "[" expression ":" expression . "]"
   80        | IDENTIFIER "[" expression ":" expression . ":" expression "]"

    "]"  shift, and go to state 545
    ":"  shift, and go to state 546


State 534

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 547


State 535

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 548


State 536

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    "+"   reduce using rule 79 (mutable)
    "-"   reduce using rule 79 (mutable)
    "*"   reduce using rule 79 (mutable)
    "/"   reduce using rule 79 (mutable)
    "%"   reduce using rule 79 (mutable)
    "<"   reduce using rule 79 (mutable)
    "<="  reduce using rule 79 (mutable)
    ">"   reduce using rule 79 (mutable)
    ">="  reduce using rule 79 (mutable)
    "!="  reduce using rule 79 (mutable)
    "=="  reduce using rule 79 (mutable)
    "||"  reduce using rule 79 (mutable)
    "&&"  reduce using rule 79 (mutable)
    "]"   reduce using rule 79 (mutable)
    ":"   reduce using rule 79 (mutable)


State 537

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 549
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 538

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 550


State 539

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    "+"   reduce using rule 79 (mutable)
    "-"   reduce using rule 79 (mutable)
    "*"   reduce using rule 79 (mutable)
    "/"   reduce using rule 79 (mutable)
    "%"   reduce using rule 79 (mutable)
    "<"   reduce using rule 79 (mutable)
    "<="  reduce using rule 79 (mutable)
    ">"   reduce using rule 79 (mutable)
    ">="  reduce using rule 79 (mutable)
    "!="  reduce using rule 79 (mutable)
    "=="  reduce using rule 79 (mutable)
    "||"  reduce using rule 79 (mutable)
    "&&"  reduce using rule 79 (mutable)
    ")"   reduce using rule 79 (mutable)
    ","   reduce using rule 79 (mutable)


State 540

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 551
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 541

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 552


State 542

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 553


State 543

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 554


State 544

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 555


State 545

   79 mutable: IDENTIFIER "[" expression ":" expression "]" .

    "+"   reduce using rule 79 (mutable)
    "-"   reduce using rule 79 (mutable)
    "*"   reduce using rule 79 (mutable)
    "/"   reduce using rule 79 (mutable)
    "%"   reduce using rule 79 (mutable)
    "<"   reduce using rule 79 (mutable)
    "<="  reduce using rule 79 (mutable)
    ">"   reduce using rule 79 (mutable)
    ">="  reduce using rule 79 (mutable)
    "!="  reduce using rule 79 (mutable)
    "=="  reduce using rule 79 (mutable)
    "||"  reduce using rule 79 (mutable)
    "&&"  reduce using rule 79 (mutable)
    "]"   reduce using rule 79 (mutable)


State 546

   80 mutable: IDENTIFIER "[" expression ":" expression ":" . expression "]"

    IDENTIFIER             shift, and go to state 286
    INTCONST               shift, and go to state 287
    FLOATCONST             shift, and go to state 288
    BOOLEANCONST           shift, and go to state 289
    CHARCONST              shift, and go to state 290
    STRINGCONST            shift, and go to state 291
    "!"                    shift, and go to state 292
    "("                    shift, and go to state 293
    ERR_INVALID_ID         shift, and go to state 294
    ERR_INVALID_CHARCONST  shift, and go to state 295
    ERR_UNKNOWN_TOKEN      shift, and go to state 296

    expression     go to state 556
    logicalOrExp   go to state 297
    logicalAndExp  go to state 298
    equalityExp    go to state 299
    relationExp    go to state 300
    sumExp         go to state 301
    multExp        go to state 302
    unaryExp       go to state 303
    baseValue      go to state 304
    mutable        go to state 305
    functCall      go to state 306
    constant       go to state 307
    lexerror       go to state 308


State 547

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    "+"   reduce using rule 80 (mutable)
    "-"   reduce using rule 80 (mutable)
    "*"   reduce using rule 80 (mutable)
    "/"   reduce using rule 80 (mutable)
    "%"   reduce using rule 80 (mutable)
    "<"   reduce using rule 80 (mutable)
    "<="  reduce using rule 80 (mutable)
    ">"   reduce using rule 80 (mutable)
    ">="  reduce using rule 80 (mutable)
    "!="  reduce using rule 80 (mutable)
    "=="  reduce using rule 80 (mutable)
    "||"  reduce using rule 80 (mutable)
    "&&"  reduce using rule 80 (mutable)
    ")"   reduce using rule 80 (mutable)
    "="   reduce using rule 80 (mutable)


State 548

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    "+"   reduce using rule 80 (mutable)
    "-"   reduce using rule 80 (mutable)
    "*"   reduce using rule 80 (mutable)
    "/"   reduce using rule 80 (mutable)
    "%"   reduce using rule 80 (mutable)
    "<"   reduce using rule 80 (mutable)
    "<="  reduce using rule 80 (mutable)
    ">"   reduce using rule 80 (mutable)
    ">="  reduce using rule 80 (mutable)
    "!="  reduce using rule 80 (mutable)
    "=="  reduce using rule 80 (mutable)
    "||"  reduce using rule 80 (mutable)
    "&&"  reduce using rule 80 (mutable)
    "]"   reduce using rule 80 (mutable)
    ":"   reduce using rule 80 (mutable)
    "="   reduce using rule 80 (mutable)


State 549

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 557


State 550

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    "+"   reduce using rule 80 (mutable)
    "-"   reduce using rule 80 (mutable)
    "*"   reduce using rule 80 (mutable)
    "/"   reduce using rule 80 (mutable)
    "%"   reduce using rule 80 (mutable)
    "<"   reduce using rule 80 (mutable)
    "<="  reduce using rule 80 (mutable)
    ">"   reduce using rule 80 (mutable)
    ">="  reduce using rule 80 (mutable)
    "!="  reduce using rule 80 (mutable)
    "=="  reduce using rule 80 (mutable)
    "||"  reduce using rule 80 (mutable)
    "&&"  reduce using rule 80 (mutable)
    ")"   reduce using rule 80 (mutable)
    "="   reduce using rule 80 (mutable)
    ","   reduce using rule 80 (mutable)


State 551

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 558


State 552

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    "+"   reduce using rule 80 (mutable)
    "-"   reduce using rule 80 (mutable)
    "*"   reduce using rule 80 (mutable)
    "/"   reduce using rule 80 (mutable)
    "%"   reduce using rule 80 (mutable)
    "<"   reduce using rule 80 (mutable)
    "<="  reduce using rule 80 (mutable)
    ">"   reduce using rule 80 (mutable)
    ">="  reduce using rule 80 (mutable)
    "!="  reduce using rule 80 (mutable)
    "=="  reduce using rule 80 (mutable)
    "||"  reduce using rule 80 (mutable)
    "&&"  reduce using rule 80 (mutable)
    ")"   reduce using rule 80 (mutable)


State 553

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    "+"   reduce using rule 80 (mutable)
    "-"   reduce using rule 80 (mutable)
    "*"   reduce using rule 80 (mutable)
    "/"   reduce using rule 80 (mutable)
    "%"   reduce using rule 80 (mutable)
    "<"   reduce using rule 80 (mutable)
    "<="  reduce using rule 80 (mutable)
    ">"   reduce using rule 80 (mutable)
    ">="  reduce using rule 80 (mutable)
    "!="  reduce using rule 80 (mutable)
    "=="  reduce using rule 80 (mutable)
    "||"  reduce using rule 80 (mutable)
    "&&"  reduce using rule 80 (mutable)
    ";"   reduce using rule 80 (mutable)
    "="   reduce using rule 80 (mutable)


State 554

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    ")"  reduce using rule 80 (mutable)


State 555

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    "+"   reduce using rule 80 (mutable)
    "-"   reduce using rule 80 (mutable)
    "*"   reduce using rule 80 (mutable)
    "/"   reduce using rule 80 (mutable)
    "%"   reduce using rule 80 (mutable)
    "<"   reduce using rule 80 (mutable)
    "<="  reduce using rule 80 (mutable)
    ">"   reduce using rule 80 (mutable)
    ">="  reduce using rule 80 (mutable)
    "!="  reduce using rule 80 (mutable)
    "=="  reduce using rule 80 (mutable)
    "||"  reduce using rule 80 (mutable)
    "&&"  reduce using rule 80 (mutable)
    "]"   reduce using rule 80 (mutable)
    "="   reduce using rule 80 (mutable)


State 556

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression . "]"

    "]"  shift, and go to state 559


State 557

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    "+"   reduce using rule 80 (mutable)
    "-"   reduce using rule 80 (mutable)
    "*"   reduce using rule 80 (mutable)
    "/"   reduce using rule 80 (mutable)
    "%"   reduce using rule 80 (mutable)
    "<"   reduce using rule 80 (mutable)
    "<="  reduce using rule 80 (mutable)
    ">"   reduce using rule 80 (mutable)
    ">="  reduce using rule 80 (mutable)
    "!="  reduce using rule 80 (mutable)
    "=="  reduce using rule 80 (mutable)
    "||"  reduce using rule 80 (mutable)
    "&&"  reduce using rule 80 (mutable)
    "]"   reduce using rule 80 (mutable)
    ":"   reduce using rule 80 (mutable)


State 558

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    "+"   reduce using rule 80 (mutable)
    "-"   reduce using rule 80 (mutable)
    "*"   reduce using rule 80 (mutable)
    "/"   reduce using rule 80 (mutable)
    "%"   reduce using rule 80 (mutable)
    "<"   reduce using rule 80 (mutable)
    "<="  reduce using rule 80 (mutable)
    ">"   reduce using rule 80 (mutable)
    ">="  reduce using rule 80 (mutable)
    "!="  reduce using rule 80 (mutable)
    "=="  reduce using rule 80 (mutable)
    "||"  reduce using rule 80 (mutable)
    "&&"  reduce using rule 80 (mutable)
    ")"   reduce using rule 80 (mutable)
    ","   reduce using rule 80 (mutable)


State 559

   80 mutable: IDENTIFIER "[" expression ":" expression ":" expression "]" .

    "+"   reduce using rule 80 (mutable)
    "-"   reduce using rule 80 (mutable)
    "*"   reduce using rule 80 (mutable)
    "/"   reduce using rule 80 (mutable)
    "%"   reduce using rule 80 (mutable)
    "<"   reduce using rule 80 (mutable)
    "<="  reduce using rule 80 (mutable)
    ">"   reduce using rule 80 (mutable)
    ">="  reduce using rule 80 (mutable)
    "!="  reduce using rule 80 (mutable)
    "=="  reduce using rule 80 (mutable)
    "||"  reduce using rule 80 (mutable)
    "&&"  reduce using rule 80 (mutable)
    "]"   reduce using rule 80 (mutable)
